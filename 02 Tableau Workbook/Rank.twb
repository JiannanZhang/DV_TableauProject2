<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Nth' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='28' min='1' />
      </column>
    </datasource>
    <datasource inline='true' name='MEDCHARGE (C##CS329E_JZ7674)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JZ7674' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jz7674'>
        <relation name='MEDCHARGE' table='[C##CS329E_JZ7674].[MEDCHARGE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>APC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[APC]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>APC</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_ID]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_NAME]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STREET_ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STREET_ADDRESS]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_STREET_ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_CITY]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STATE]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ZIP_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDER_ZIP_CODE]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_ZIP_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HRR_DESCRIPTION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HRR_DESCRIPTION]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>HRR_DESCRIPTION</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OUTPATIENT_SERVICES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OUTPATIENT_SERVICES]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>OUTPATIENT_SERVICES</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVG_EST_SUBMITTED_CHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVG_EST_SUBMITTED_CHARGES]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>AVG_EST_SUBMITTED_CHARGES</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_TOTAL_PAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_TOTAL_PAYMENTS]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>AVERAGE_TOTAL_PAYMENTS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Est Submitted Charges' datatype='real' name='[AVG_EST_SUBMITTED_CHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Est Submitted Charges (bin)' datatype='integer' name='[Avg Est Submitted Charges (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[AVG_EST_SUBMITTED_CHARGES]' peg='0' size='1000' />
      </column>
      <column caption='MaxServices' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([OUTPATIENT_SERVICES]) )' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_4030410194213188]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(ZN(SUM([OUTPATIENT_SERVICES]) )) - ZN(SUM([OUTPATIENT_SERVICES]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Max AVG Total Payments' datatype='real' name='[Calculation_5850409221954359]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_6830409223601111]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Hrr Description' datatype='string' name='[HRR_DESCRIPTION]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Outpatient Services' datatype='real' name='[OUTPATIENT_SERVICES]' role='measure' type='quantitative'>
      </column>
      <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Provider Id' datatype='string' name='[PROVIDER_ID]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Provider Street Address' datatype='string' name='[PROVIDER_STREET_ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Zip Code' datatype='real' default-format='*00000' name='[PROVIDER_ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.48232' measure-ordering='alphabetic' measure-percentage='0.387553' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Cume_dist()'>
      <table>
        <view>
          <datasources>
            <datasource name='MEDCHARGE (C##CS329E_JZ7674)' />
          </datasources>
          <datasource-dependencies datasource='MEDCHARGE (C##CS329E_JZ7674)'>
            <column datatype='string' name='[APC]' role='dimension' type='nominal'>
            </column>
            <column caption='Outpatient Services' datatype='real' name='[OUTPATIENT_SERVICES]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[APC]' derivation='None' name='[none:APC:nk]' pivot='key' type='nominal' />
            <column-instance column='[OUTPATIENT_SERVICES]' derivation='None' name='[none:OUTPATIENT_SERVICES:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[OUTPATIENT_SERVICES]' derivation='Sum' name='[pcrk:sum:OUTPATIENT_SERVICES:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' rank-options='Competition,Ascending' type='PctRank'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[OUTPATIENT_SERVICES]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='alternate-text' field='[MEDCHARGE (C##CS329E_JZ7674)].[pcrk:sum:OUTPATIENT_SERVICES:qk:7]' value='Cume_dist' />
            <format attr='display-alternate-text' field='[MEDCHARGE (C##CS329E_JZ7674)].[pcrk:sum:OUTPATIENT_SERVICES:qk:7]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[MEDCHARGE (C##CS329E_JZ7674)].[pcrk:sum:OUTPATIENT_SERVICES:qk:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk] / [MEDCHARGE (C##CS329E_JZ7674)].[none:OUTPATIENT_SERVICES:ok]))</rows>
        <cols></cols>
        <show-full-range>
          <column>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Difference'>
      <table>
        <view>
          <datasources>
            <datasource name='MEDCHARGE (C##CS329E_JZ7674)' />
          </datasources>
          <datasource-dependencies datasource='MEDCHARGE (C##CS329E_JZ7674)'>
            <column datatype='string' name='[APC]' role='dimension' type='nominal'>
            </column>
            <column caption='MaxServices' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([OUTPATIENT_SERVICES]) )' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_4030410194213188]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(ZN(SUM([OUTPATIENT_SERVICES]) )) - ZN(SUM([OUTPATIENT_SERVICES]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Outpatient Services' datatype='real' name='[OUTPATIENT_SERVICES]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[APC]' derivation='None' name='[none:APC:nk]' pivot='key' type='nominal' />
            <column-instance column='[OUTPATIENT_SERVICES]' derivation='None' name='[none:OUTPATIENT_SERVICES:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:9]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[OUTPATIENT_SERVICES]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4030410194213188]' derivation='User' name='[usr:Calculation_4030410194213188:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_4030410194213188]' derivation='User' name='[usr:Calculation_4030410194213188:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[OUTPATIENT_SERVICES]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation1:qk:9]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation_4030410194213188:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation1:qk:9]&quot;</bucket>
              <bucket>&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation_4030410194213188:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[MEDCHARGE (C##CS329E_JZ7674)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk] / [MEDCHARGE (C##CS329E_JZ7674)].[none:OUTPATIENT_SERVICES:ok]))</rows>
        <cols>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</cols>
        <show-full-range>
          <column>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='rank()'>
      <table>
        <view>
          <datasources>
            <datasource name='MEDCHARGE (C##CS329E_JZ7674)' />
          </datasources>
          <datasource-dependencies datasource='MEDCHARGE (C##CS329E_JZ7674)'>
            <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Max AVG Total Payments' datatype='real' name='[Calculation_5850409221954359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_6830409223601111]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='None' name='[none:AVERAGE_TOTAL_PAYMENTS:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PROVIDER_CITY]' derivation='None' name='[none:PROVIDER_CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5850409221954359]' derivation='User' name='[usr:Calculation_5850409221954359:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[AVERAGE_TOTAL_PAYMENTS]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_CITY]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6830409223601111]' derivation='User' name='[usr:Calculation_6830409223601111:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[AVERAGE_TOTAL_PAYMENTS]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_CITY]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]'>
            <groupfilter function='level-members' level='[none:PROVIDER_CITY:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</column>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[MEDCHARGE (C##CS329E_JZ7674)].[usr:Calculation_6830409223601111:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk] / [MEDCHARGE (C##CS329E_JZ7674)].[usr:Calculation_5850409221954359:ok:5])))</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='rank()'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]' type='filter' />
            <card mode='typeinlist' param='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cume_dist()'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='rank()' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Difference' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOzdV3BbZ4Lo+f9BTsw5SSTFHBRIiZIoWZZkSw6SrODu6Z7pyXdmZ3dmqvZW
      7d7al/swd2prt2rvrd2He3dvp2lPu4NtyUlWzlZmzjmCJACSIEGCJHI6+wCKIhUpj1uErfN/
      swUQH0l8BHC+8zufIIqiiJTUK5ggCIJsrQchJbWWSRNA6pVOmgBSr3TSBJB6pVOs9QCkvjuJ
      oSDDfe0E9RnkZ8Qw1NtLUJ/ChnXJT/1LGvK7Gejrw42e4qJcVPIX+Jsb9DHQ14Pd6UOlj6Mg
      PwevzcScEEuCwkm/yUZmehImi428ggIMmhd/OkuvAFKrTgz6OPOb/8pPf3uBebuFD376/3Dq
      chOhZ9xnqPES19omsRlbMU67X+wBfQ7OnvkSrzKG+cEavrjejM0yyJBllrvnfk/vdICWS5/T
      Pu5E+SITa1nSK4DUC6VSq9H4bbR19yFEp6FDpOnKp/ROO5hxJfDHexP5zfl+Mg3zZFX/kMRg
      gO6me5T88U/YkKTj3ulf07MgIya5hOMHK5/7F1iQK0lJX0d2epBrv71DXomBSZSMdY8idw0y
      NTGEL5jM3UtjmKZnUaWW8U6ByH/+pJbdu6pRTHYw6pKRUbCdgzuLEB75+tIrgNQLJSi15KQa
      uHqllvUFOYAIMhkymUhfUzva9ZtJ8/fQNp9EZV4yedsP8+dvb+Tsr/5vzjU2cf5CC1q1kuYb
      F5j2rf5xZTIZwWAAr2sBZyia/JwUyqqrKViXRWFOBrWNTQgaNbVXrjPjcODXprJnUyw3bvei
      UQS5f+M684HHv670CiD1YgkycvPXUds6yOt7kmkdWuDmtQHe+csD1Ny24JkfZ3BKRKYeYHja
      iWqiFc2G3bx/YIrB+RAxcVFs3V1NckIu8pl+7lgEkoIWlNkV5CYZnvCAIsGAn6GRXjLWFaFR
      Djx+E6WKaEMcmyu2k5KWT4zKhUKpQC7XEZuYyLZdu8nM9eEaa6Pfk4B8qpO0iv3hb0daCZZa
      bWIwQFvjXVI2lDHaN0pObixjVkhSz9Ix4kAvD5GWGY9DSCBFnGRSSKU4Wc792kb86iRe21WJ
      zzrI3ZZB8jZXkaaYo3tSICE0gTKznHUJ+pUPGHBTf/8OE3YP2pg0du7YgtPUhVVIRbMwhDK9
      FHGij1DSBhKYobapm6ySKjZEu6kzutm9OZ/J4U4ae8cp27YDncuE2ReHfLqX5I27SNErBWkC
      SL2ySadCSL3yrfgM4Pf7mZ+fX6uxSEm99KS3QFKvbIIgCPJ/+qd/+qcn/3OQe+c/4+b9BnxR
      majtfXx6+iKDk05yczKZGqjjV1/cZVN5MfXnfsfXzX0YLQtsyM1E/ujBVuDj//Z/EVu2i2jl
      iwxxgY9+9jGx+YXEaJS0Xf2EFnsMeWkx3+DbfXLOKSMnv7xMVkER2oVhPr07QlF2EvcunsYX
      u554/QsN+FtrZqSJS/UTFOYkU3ftK+7Ud6BPzcE92sgX528xZnOSmaDiwtnzNLV2E78+j2i1
      /KWOUfQ7uXX5Ag2NjViD0WSqrPzsw7OMWydJysxDq4SgfYwPPznN0LCJuKwc+u6e42ZtC6qk
      bBaM9Vy5WUvX0CTZOeueu0os+uxcPHOO1uYmFtSpZCbocVgH+PxSEwXFuTz47kMeGz//7Tm2
      bi6FUID7l05jU6bgMzVz/sY9zPYAOZkp/PM//6f/9PRHXBjjSqed914v4sz5G9TdvkXO1j3M
      9jXS1d7K+UvX6TdbCYWguPotThzez1DNOcYdT/5yVssY3gdLhqEAIz0t3K1rxem009jaQzAU
      ore1jlmXj96WWupauvEGg0yNT+INhO/omJ1i1uF9wV/TsxIZHexDKQvSP2aDgJupWQc9d88x
      E1NMbqLuW3ys1eezW6itaWR0xkHAP03XmMi+bZm0NvczNT5N+etvc3j/DjTaaF5/+wgV6SE6
      R+wvf6ByFZt3vcHxE3vprW1kxmwkvfIA7737FvHa8E3mZyaIz63g+PFDpBpcNPU5eXtvEc01
      nSRnl/PeseNEuccw212reDwdO994h6NHd9J8uwEx6KOtrgbzzALL38a01tZjsk2GH986THNH
      Hw6vi6bWXnYfeA/leC/jHj/wjIUwt91GQKVGHRXN/MQEVrsdQ0w06oAfvyGdP/ujoxgW/+LE
      xifQfOljRoOpxK7iOWMbaeHLGz3I57r58mYXDWdPMjA5wsef38PafZVLHbO4Bu5wuXn4+V/s
      35DoW2BoMsAbeysZ7unFL8L0QA0f3TLxelUhsie8kr2MlNGpHNy7HaVcQBTd6LQJ6AyxCCEn
      k5MjtNy6xK8/vYQXFTrfNA0DM0RpXv5gBZmSmGgDY21txOcVYrVYGGm/w7/+5hOmnEEA7DNW
      jB1N/OsHHzJmt6PRJKLRxSEXXegM0YhOC1aPjuTo5z9xBLmK2CgdA/WNZJSXYrf04oveQKLu
      4dPYM92PTZVNqk6GGPTS3jlCaekGQElmkp6b168xPDLMjCP8R/WpE0BjiAJ/ANHrQZ8QT7RO
      j9ftIaBUEGMwoFI8/Pzcd+dTPrhs5M/+6sdEyQECdNZc54tLt3H5go99bafditk8inlOTlpC
      HLt25PLpr35L2rY9+KbGmTQPYhNjSNKpVvmr+GbNThgZs5i5fb+DiZFuphd8CDHZ/LsjhZw6
      fY+1+ngkyGTIhfATWhCUeHwL+H1OgkEV+9//W/78Jz8iPWDF7PSgiM3gxInX6a3vfPkDFUXG
      2m9TazVw5LUSit/4CX//5z9ge7aKzhEbAOu3vMXf/+2fcnBjAi39M3j88wQDDvwBJZ55C2fO
      1/D6oXeI0azi7Zso0ldzgc5gHu9WpHLzyi3GxvoY6OvHNL0AwJ0bXzM+2s7o6Bj1tbe53zZE
      Z2cPfZ0DlL95gh8cfpOE2HhiDeGn/lNXgoW4HHam3uR3X91j35vHKJINc/rKGbRJ+WQl6mFe
      hlqlQhDcnP3qKln5lZi7G8lOOUi8VkHpjv2ULvt6CnmQW+e+oE2jpqQsj7IsI1PWCeLzt1NS
      voffftrA+/+wmSyvnoyBa0xNWsnZVoVSpVr6SyxXKFF8w5OeHi/IUN8Ae479hJI0HcP1F+ky
      TpOWlsG68h0UD33Aze489pakfEuP94IJMpQKOXJlCmlaK19dmWbbW+/Reusi/dNOvPIUqrwW
      PvywBkXIz+Y3jr/0IfrnTZw6e4u0vGKu3WumUDdDzaAdvy/EoXI17b1DJIpTXG824nV6OPhH
      B+g3tfLp6RrK97/H7a8+YcIbQ9OtOyjfeJ30aO0zH89r6+WjSy2UlRdxo1HNsb/+B/zzE5y6
      1EiaxkPH4AJv/vBvAfilY46q6jepqob2m1/hSC9gsP4arQMTBJKLSdeEP9tJR4Gk/iCJvgXa
      B6fZWJzzch7PPUX7mJ+NBemrvo8gCNJKsNSrmyAIwjNOhpvn5M9PIiTGAyp2v/EmaTGapX/1
      2ob58v4Qx995A9Wyt28Bp41zV2+x563jxGlgbqSFq/0BTryxFeHf8DlNDPpweEJE6TXPv/Hy
      /HN8/tVN9r71NvEGFYFAAL/f/80HIvW96hkTwEtP7xR//5d/ibfnGr//4hb/8x9XYzSOoYlL
      I943R1d3N6XZ6SRnridG5mTUOodMJiM+Ph656GN00IhtpJ9eo5agz8HQ0Cj6xAwS9SKWcTuB
      gAeN3oBzwUF6Th7akINB4zhxaVnEqv2Yx+0EAj4SM9cxcOMTGucz+Is/OoDuwajFIJPmUWwL
      PjJzNhC0W7B7Qvj8Itm52XhmLExOT9DR3c+O/QcACIVChELPIhxrUyAQiMhxfd9b1enQCdnZ
      zJ+8wo3z49g16cwM32HfnnKcDicB5xj/3y+b+Ms9On55087fHKmktqYGnSrE7RYrZQl2gqEM
      7pz+gOmYLczcuEnl9kK+/LyVXVtjqRsMUZnmpnbEQ7zlCkJ2NWM377K7OpfPv+ple6mSW13F
      5DhteMlacWjS55jm3p17WC1DaEuPkmm9SK92G6qxe1j3/4i+m1+Qu2UrC27P0n1UKhUq1cOj
      S0GvkxHzNFnZ61H652npGiAQDKHUxlJcnIfqJZ0t5fP5VkwAMeDCMu0lPSWWmXEjllk/eQV5
      aJWRdPpWiGnzCKYpB+vyC4lTeWnvGEBUqMgrLEWvAvwuuvsG8Pggt7gUuXOC4Qkn+YX5CF47
      A4MjaBMyyU5PXMVh5xATxgEm5nxsKCpBHbTT0zuCoNaTX1DAQxEZwmgcI3t9FrbxEcyzfvLy
      NyD3zzMwOEpcxgbSEsKnXq/qpxnyuBEMakzDw1jHrahVGrwBP4bYRAortiKMDrIAxKetY31q
      PABTJiPR64ooy1uHXAYD/T1YrZMo9VH4vD6ikjIp3JBFVHQSueuTmLPPM9jXh9U6jtagw+sN
      YohPozA3i4UZO1ExUcQmp7L8aJlrzopp2kN6WgKOOQcikLI+j6x4PZYJM3aHks1bionVqZ/6
      vVmN3Zw5e46xGRfMj3K9eYyk5GQcQ7Xc6rCs5sfzrRfyzvP1Vx/x1e0uAu5xzlysQx60c6+x
      e03G87REn4PB0WkMahfnL97DPd5Nk8lDYkI8isVnlts2QvPgFIlJiajkQS5duI5/fpg7LcNY
      jAOEVHqabl9hYt7z7AcDRM8s/ZYFDPIZzl5pZGaonYFZkYT42BVnH9iHW/npqYv43bNcuHqf
      4LyRm/V9mIyDyNQqrly8hC/wnHUAAHx2bl+/xulzdex99yBbNpWjlofwKTTE6TQsTI5w+fQZ
      NJsqiQGEZW/yswo3Yu++x62mHoIiVGzbiSIUJISc2Cgtgky2gqcJgoyKqq2IQRFkOqJ1K1+c
      ElNSMPU0M7vs5ySKQVxz80xYbXh8nhWrgdqoRDISQ1y6eAvb01aPRT9Dw2Z27Sijp28EEdBG
      xZOVlUVaoh6H+wXI0rdYKAjFJcUoFDJEvwu/PJqstESMAwM8ATWtWYIqmu07t7E+Iwmfx4vV
      YiHgWWB81oNy8ddnn53CuzCPaWoepXwWVyCR4pI87CYzOaXbKC9cj1YI4Q8+/1iMoEngtepK
      MlPj8LjcTFnHcc/bmHb4kS+dB+GioX+OrFgBmUKNTubFaJ4hOiaKDaVb0fqm8AsaZA/WWZ5+
      FCiEy+EiKIrI5Aq0Wi2IAdwuDzKFCrVShsfrQwyFUKi1KIQgvqCARinH4/WiVqvxetyICAgy
      BRqVDJfLg0ypRq0Ar19EpRDwBURUchF/SIZKAS63F4VKg0ouLt4GfAFQKwVcbi9anYEHSwGi
      GMLjchMSBGQyBQohiChXQdAHchWykB+vPwSCgFajQfbIa6zXbuLnvzpJ1rpkeiwi//iDzfzn
      X1+nJEvDgC2Kf/8PP0aveDlvOR59C8RUJ7+4O8/fvLeN7oa7mOx+TDNO/vzHRyOK8YW8c5w7
      fZb83e8RPd+DXbuemfar6MsPs2V9NNOj3ZjdeoKj93FmlTJSa+H94/mcuz7GD47uorv2OsP+
      FA7uLkexiqMkQbeNU6fOseu9H+EfbSUUv57+2msU7DnGhiQdQy138KVs5Pb5T/jT4/v49HI/
      e7ckUz8S4NjB7QQ8Di59+hmbjv4xhckxzzoKJENneISoCQr0y/6fbsVfaTnaxf/UasMLGlrd
      SuGz/L7axRn74D4PJrDBoHzqbZb/G4RfNbT6RxQRgOLBgoocxVMXk0VMgz1seuOHVJemkXL5
      c4Ym5knNq+CH71dz49S/0DFqZ3tu/NO+wEspJHoJalIoSrcyL8RH1JNfDDi5dPocOTveZkOy
      jok5JbExemYBmUwgGAohhmREx0YxNyogUyQghJqZGtejiU9msPlr+lzxvLW7eFXvxUX/PJ9+
      co6dR06QZpAxKlcTHaVFEAQEAYKhEIFQkL76rxkbNdEzNoMoyFAp5fi8Tga6WolLz8YfBKX8
      ua8ADi6fOs+CXIlan8Brr+96xnK1SCgYJIRsVSu1oigSDASQ+ee4WNPD/teq0bz0D3chxvp7
      iMoqIlYjwzE9yvisB5eoY2NBJgHnFB3DDraUvZyFnMdeAVw22i1eyjakMtLVwNCsjKqqCgwv
      61P5KvI7Z7hfW4/TG0IVl8Fr5Rncv9+ALr2QitwYbjYO83plHg119QQMmWzfXMC8pY/mwVm2
      76zE3F7PkHUO0FDx2k5SDM8+xO2bG+dWbSv+oIg+JZdtOVHUNHSQkFtOSUqI250L7NteBEBb
      RxsbS8sY7W2hb8JLZdVWVO5J6pq7SM3fQtG6JHQ67bMWwqb45//ll/z9//kfmG8+y9nhOP7x
      Bzux2+dQaKOI0imZt9vxBQXi4gzcPv1b/Fl72VEYj98fRKVWEwoJ6DUCDi/E6JTMzs6CQofC
      N8VnX93g4OF36Ow1sqd6Gz7HHN6QjLi4WPzOeTyBEEFRIC42BvlanZX2EntsAnzHEwNeZpw+
      EmKiXs7j+ZzMeGUkRD37dIrlabXaZ70FelhacTG2c9epuTZJ3yy45jy8vbeck59fITEuii0H
      D9PX0YNansdXdz/GlbqFrVkhbrb7+GG1jg/r/BzOdVI/oUIVcFOcn0rf4DCVkyZu1jSyzuDi
      arOVTK0Tcf0ODAOX6FXmEDT2svcv/ic2ZcZ+4x+M1NokKNQkxDz96Nu3/ngqPQnf4NzJVU0A
      0edDUAn0dHbjjs0D5wLzopJohY9JuxOfT05yahwxeblMj9azfvMW0oLdgG/pjMq25gY2//j/
      oDJDiWOin4T4JLJS4wDobLxPTtX/wL6kEf73j5rZl6gku2gLMlcvE7OuV2ICKBSKNTv79FXu
      2RMg4KSrrQ3XcBsV+/eQaGtiJBiLLDqGBI2c5OxSEuzDDI5NkRkTxZjRiICAIAhoDbH4Frro
      7FcRCqVRUraR9tobmHBQuqkMuejGbA0jjvzSzdxpvcfdqDk2VWyE0dsv43uPqGSyyHlv/yr1
      jM8AAcZHTLiDIRRqA+lpyQgBN+Pjkyj0cSTH67FNTODwiaRmZCB47FjtHjQqObqYePQqmLSM
      IypUoNCSEqvBYrYgqKNITYrFNjmOoNbj8wdITYrHNjmOO6ggPSMV9+wUojYGXLMI+niitX9Y
      FxBpWXoauNdpxBvQ8N6xfdRfuoDNHaJ010FKIujVUPQ7uXn1KtNzDhKLdrF7nY9fnLxPxrpU
      du8Lq7CgfYzfnL5BdHQC1QcOYqm/QN+kmy37DqGeaqW+24KoSeDQW6+jVz3bBIg+OxfPXcPp
      cZNVeZBCtYlT17pIX7eOPXv2ELX4NAl5bPzi4+v81YldXL5Wy8LCNGLCJqrX+7nfaSIuo5AD
      1ZtQyGUColTE5VqYF92+gHj35P8rNli84px9QTR13hA/u9q21kNbUSjoE+1zC2LAaxJ/+rNP
      xcm2S+KX9eYVt5kZrBNP32oXQ6IoiuKs+Iuf/l6cHW8RP/6yRnQuzIken1+88Mm/ir2T889/
      vIBXnJ13ij7ngPjff3lOHKg5I97qnnrsdk1fXxD/43/5r+H/CPrE22dOiZ3mKfGL3/5KHLW5
      xKsnPxbHnF4RpGuDRmRaQxTKwBzd02o2JCrRany0tAyj+QMLuRftURI5+QwS+cEHv2Zsdu5b
      IpENZJQXM2Ey01V3lQ8/OcOcJ3wEzTPdh02VQ+oik3TPWTB5oylIS1gkkVdXkMhIWleRWizo
      svHFF+fZc/xHxCgA4njz0Nt8dK4G/85C1uY6FU9IFBntuEOt1cDRgyUoKaRYkNN/7zSdIzb2
      liSHSeRmGZOtF2gaWE4iVctI5LurJ5G1F+kM5nN8azbilr9ih1xBzcWTjEzNszErlrs3bjEe
      imV0dIyusVmibIPEZxeiEAQq3jhBuT/I+d+OP59ESq1dtZdOMebUI79/Bdn27TRevkxIKSO3
      bG/kPPkJk8hPz94mLa+Ia3efRiKnud48jNfpfZxEnvmECc+LkciPL7VQWl7EjToFqf4x2iwL
      BDBwRO+jY9DCGz/8GwB+6bBTkhVL6+AsaflJAPQ0SCRS6iUlkUgpqQjvOSRS6mX2fToN4ruU
      NAEiJIlErk3SYdBITAww2t9FR98IQVEERBZs40yvQk293EJMm4doaWljxulD9C/Q1tRES1sH
      zgeWyO+iu6OVpqZW5jxBHDYzbZ19eAIiXucMHa0tDJmmCa3qjXiICWMfza0dLHhD+JwztDY1
      0dbVhyew8nbDxhFEMcTESB/t3QN4AiECnnm62lsZnbTz4I2/NAEisMneehqN8/imjUy5RII+
      FxdP/Y72sZm1HtqKRJ+DwTEbURr3QxJp9pGUlIhi8aime3qE5qFpkpOTUCnCJDK4YOR28zAW
      4xBoDDTfWT2JHLAsEC2f4ezlRmaG2xmcg8SEuMdI5M9OXiTom2PUPIdvqod7raO03b7GhBdu
      XrqA0x9ep5AmQAQ2MjyBXuPHq0sjWSdg6W1DHpe21sN6LEEVzfYd21iXnriMRM4xbnOjXJwA
      dvsU3vl5Rq3zKGVhEllUvIE5s5mc0q2UFaxD8wIkcnd1JRmpcXjcbqzWcdx2G9PzvsdJZJyA
      Qh3H5i0bmDBNozVoiYmNYnJ0kJA6GuXiKfbSBIjAgp555LFZKMw13O8z0TsloyQrcs4BWl7I
      O8eFizXs2l+NKjaT6qoKPMb7tIyEN1pR6pOo3LYVra2V+31TCIIcBBkgghikq+ZrhPSNZMSt
      7npPQbeNL883c+DgdqKSctm+bSOWtpsMT4WvLj3U1kRmeQWqxSe4Uh3Dth2bGe3vZsg8RdmW
      HcQF7cx4pVeAiC01MwuNXIZMEBE9bpwLk9xv7mKwe4Bv8+Lw/9bEgJOLX54ld8fb5CZqCYoK
      YmK0CIBcJhAMhklkVIwBQVwkkeIkVoslTCKbvqbfncC+7UWrJJFzfPrxWXa8e4IUvQxRpiba
      oIEHJDIYIhAKLZHI9v4B2jqHCQUDCAoFYjCEQqlEDPgJLH4IkNYBIqQVIizko72hlnlVKjs3
      5SETBGYtQzjUyWQlPGkr0bXJ75yhprYep09EGZvOa+UZ1NxvRJdeyJbc6BUkMhiVSdWmAhYs
      fTQP2anaUYG5o55h6zygYcvuHasikbfrWvEHQZ+Sw9acKGoaOknMKaM4JcSdzgX2LpLI9o52
      ykqKGexoYHROxtZtFaj9durqm4nNLqMsJ+15JFLqZfb9JJF+EmJezoT9piRSmgAR0vdtAnwX
      WrUJlvrDJ5HItUmaABGSRCLXJmkCRGCzo51cr+/BRxTHj+3n7pcfYZMZ2FBSidrWS7d5BmVs
      Dof2b1u6wNNaJPod3Lxyjen5hyTy5yfvk7laEmldJJHaeA69tXeVJPIqTo+HzMqDFD2FRE4P
      1nLXqOfo3nwufnaSBaWBgk3VZMqsXK1pJS57K28ufliW/uxEYLrE9bx75AiamWGmPAEmPApO
      HD9OZUEm2WXbOXbiBA5zGw7PGl8pVK6m4rU3OX5iH7114V0iM7c+a5dI59IukS01nSTnlPPe
      8RPEuE2r3iWy+s13OXp0Jy23GrBNWCiqfptDbz588vtmRqmpa8FkdxL0+5gR9Rw/fpxNuSm0
      tLaz5fV3mOyrW+XFcaXWJLXOwNxYF1a/AN5ZJoeG+fyjD7nWZMQQHY17ohe/JhOdem1fwAWZ
      kugoPWNtLcTnh0mk8Wkk8lcPSGTSIyTSzOQLkMiYKB0DdQ1kbHwyiVTGZvDu3vBmLH7/LBOD
      g3z6u19zu22UkADR+mg0GgWhxZOPpLdAEZgoiqTkbuLtLf20jcr4x//tPyC6pvn4Yh2z6X4u
      3B7iyJG3UCnW+Ip5osho+21qp6I5eqAEJQUUC4rHSeQWGZMtD0jkHEH/IomcC5PIvS9CImsu
      0BXK5/i2bEJPIJGCTI6weN1xtSGTf/xf/z3BeTOnbnaRKBPx+r14Pd6l3YqkCRCBmTvv8nW7
      Ba/bz5H3ZZz++COC8hDrCqu48MVXuKLXcfvGXfYf2EPMGr4K+OdNfHr+DmkbwiSySDfL/aFZ
      /D6Rw4+SSJeXt354gD5TG59+VcPG/e9x+2yYRDbeuoNitSTyShulZV6u1ypI9Ztos8wTEKKW
      SGTZhnSQyVApFfgdk3z55VUCQpANWw6QI4xw6czHRGdUoFo8WUlaB5D6gySRSCmpCE8ikRGU
      tAq8NkkTIEKSSOTaJB0GjcBCfhc9Ha0MmKYQRRHr2ABtnb24/ItXP5uffsgjRRGbZZj5NTlP
      Okwim59AIh3PJJG9y0hkM0OmqVWTyHFjL80tYRLpnp+itaWFkYnZFfvDiQEH5gk7iOHxtXb0
      4vIFwySyrUUikZGezWTEI9fTcvkcE54FhkdsMD/MrYYBXLMmPvvNL2gcDPNI0TfLx7/6OWNz
      L3+cYRI5Q/QjJDI5KXFp8/Qnk8iRMIkcGQJNFM13rjK+ShI5OO4kWjHD2ct1jA0MojLoqL9x
      eWndIeixc+Wz33K+dgC/e5aL12oIOUb4uq6PtttXmfALEomM9JJySsg0+LB6BAyqKCqrihgf
      nURr0INcQ1FJPsrFv2CtdfWkrV+3JuMMk8itSyRy0mLB757DbHMtmeAwiZxj1Dr3OIkseUgi
      A6t4CRA0CezeWbFIIv0UVOygKDsdJQGCi/cXg7BxYxkILO4S6cFoshETG0VMbDSTRolEfieK
      Td3AjlwFbcZ55EoD26q3YR7oRh2dSHxUGI54ZwaYUeaQHrV2H+VC3jkuXAiTSHVsJru2V+A1
      1iyRSJU+icqqbWhtbdzrm0IQZE8mkbGrJZHTYRL51g7EUIDWuzfQ5W0jxRD+GSj0saTGhQ2C
      zzGBU5HGto0FTFpGGTZNUV4ZJpE2iURGbhODXZhn3fi8AZSCk5aWAYKhIIJcuWJvZbcrgHOq
      h8beMbp6+176OJdI5M63yHlAIqOXk8ggoZCMqOgwiZQrEhBEa5hEJiwjkVWFL0Aizy2SSOi5
      fxGzIo89m3JADBEMrjyIIIoiIjIUCtmSt5ArwiQyKJHIyGo5iAm4Z6mvbUKWmO+pqfgAACAA
      SURBVEtV6XqMXQ0MTQeprNpGrFbB3OQQ80IyWckGQGR8oANVejkJzz+d5lvN75yhpq4hvEtk
      bDq7HyORRl7fuoHGugYChowwiRzvp3lwdpFENjC8uEvk6klkW3iXyKR1xAatmGc8oDJQWZpB
      p9EbJpHOKdonQpTnJjHW10rfhIeKbVvRB+eorW8mNrucspxUiURGUt83ESaRSKkX6vs2Ab4L
      vZIk0uVy4Xa713oYjxUKhSQSuQZJrwBSr2zSuUCAc8rI55dqOfyDH6D3THL5Vh2+gB+zxcNf
      /eOfsRZX4VlBIk8cQOGd49Lpq2w7+gOSV3e08KW0nEQmFO3itVWQSHP9efon3GzZf/ghidTE
      c+jt1ZHIC+eu4lpOIq92kb7+8V0if/7RNf76/d3LdoncyI8ObWOw5gLjhgpeLwtfavIVPwwq
      MjrYh1oh0j9mQxWbzuH3jrExVUPO1h3o12hUy0mkzROkrfYW/aMT+CPttVquWSKRfaskkc19
      Lt7eV0xLTScpOeUcPX6CGM/qSeSuZSRyesJC0a6VJBKgtbYe84wVVXQ6h48eJis+js1birGb
      eqhv7sLufHjeyCs9AUTfAoOTAfbvrWS4pxe/CC5rN18PK3mrKo+18lbLSaQQFNhU/QY5yWs1
      HZ+eIFM8hUR+jPUJJHL0ERKpNUQT+jeQyMkX2iUymrj0QnZvK2E5pHul3wLNTgxjspi5fc/D
      hGWaaXspt8/Vc/THf7K0VL4WLSeRzYM2DpVFr9lYntkiiaxbJJGKZSSya8RG8pNIpO9JJPLQ
      qklkb80FukIFTyWRT9wlMqcw/KQX5EsU8kGv8AQIMtw3yJ5jP6EkTcdwwyW+/Ph3zAd0KC+e
      QaZQUf3GIZJe8uISrCSRx/4kCfCiVKki7uV6OYm8uoxEBnwih8rVtPUOkSROc70lvEvkWz88
      QL+pjU/P1LBx3wMSGUvjrdurJpGfLJFI+SKJXCAoRHFY76Nj0Pxwl0jn47tEAsjkChTLfpLS
      USCpP0gSiZSSivCkw6ARlLQKvDZJEyBCkkjk2iRNgAjM756jr38YeXQqhetTmDINMD4XIr8w
      H9FhZcA4TkLmBjKSohgf6sHm1VBclMPLv05WiGmzkTGrg/UFRcSpvLS19SEq1eQVlWFQAX4X
      XT39uH2QV1qG3DnB0LiD/KICZJ5Z+gZG0Cdmkp2RxPMPvIUYN/YzYfeRV1yKJjhPT5+RuIxc
      MpMeHikTAw4s0wFSYqCza5AAoI9PJztJzcDgKHGZeaQvbjQSaQcWpICJkWFCmmj6b51lcHaB
      4ZEZBMcwt+p7GB0aQRul58aVi0wNNnGhyYTCZaSm3fzSx7lEInUezl8Ik8gWi/8xEtkybCMl
      NRm1IsjFC9cJOka40zyMZXQImTb6xUmkcpazl+sZNw4gaFTcv3YV+6JBDpPI33C+dgCZQk1y
      agpe2xBD4wuYRoZQaDVcvXhJujZoJJdVtJnyglx0igBBmSFMIkcm0EbFUFy5nYLsdISAH49z
      HmVUEukpUfT3Dr30cS6RyLQEfF4vkxYzvieSSDujk3YUslncj5DI0oKsFyeRKXF43D7WlWzB
      4JvFEVItTbgwiSwPk0illuTEaKYXlFRvzSOvdCsa7yQ+QYtMkEhkRDfScg1b4lbyY4RFElmF
      eaCbYMhHzfUrrN+0i8zSXZRoJmkatCJfo4N5YRJ5f5FEZrF7x8sjkSAjo2ATmVoHpmknsJJE
      AsxPDiHE5RCjCj/VMwq2khaaYtzlB6QJEJGNd97i/riew3vKCfrsNLcMEAwGEeQymr8+hyu+
      jG3FGYiuGRSppaQJHpI25L70cT4kkW8vkcjoqMdJpCFaD6KAQpH4CIm8Qb/rxUjkqY/PsePd
      46ToRIY7W7G5AviDIZRy4TESCSJWs4mU9esQCDHQ1cqsy48vKCztqyBNgAjMi5o42Ry3b37N
      hFNLnGqOthEn7+yvQq6Nx28b4ubtelyqeFTzQ0xpCjlQkfnSxxnweolOTsLc3cidpm5S1q1j
      sOk+6g27KEsKcKumjfi0NKb7W3AnbaYqN4V3D2xnyKpg7/YNBAU9msA0t76+x5Tz+Rc28rvc
      JGel0tt4j9oOI6kZKfQ2N7K+8g2yNLPcblx00VEZ7CjLAiA2vYDclChARlpqIt1NDRTve4dU
      rRKQVoIjpu+bCJNIpNQL9X2bAN+FJBIZQUkkcm2SXgGkXtle+XOBxJCfrvo7dJtmQaFj75v7
      SdSr+Przn6MqeZ/qooQ1G5vN2MjNPhnH3iji+ukvsItaSqv2UpwVt2ZjerQwibzK9LyThMJq
      Xlvv4+cnax4hkaN8ePprYh6QyLrz9E26qdh3GPVUC/Xd49+MRFaESeTJa11kPEYip/nZR9f5
      uz89wo3zp5nyCJRufxP9Qg/NPWMoEwo4tHcL8IofBVqwDtBiCvLe0WPsKc/AaltAdJuYCKUy
      1FzDWr00+uxm6mqbMM068NuHGXancGjfNtpbGtdsTE9MrqHitQNhElnfxIx55AkkcpKE5SSy
      38U7+4ppqe0kJXcTR0+cIMZjXj2JPHCIY0d30nK7gelJC8W7HyeRLTUNWGasBHwLGGdg96YM
      evtGSM3dyJEj7zA13IE/GP5JvtITwDVjRRefhkohIzm3nJJ1CQw2NJG3Yx/pchsjjrX5UKqM
      TuOtvdtRygXkUakoZ3u4fr8Ri8WG7/l3f2ktkcjWlSTygw8fksjZJRL5rytJJC60+ihCDjOT
      Hu3qSaRBS39dA5mbSsIksvYqH37y1QoSOaMOk0iZQkVUaI4btf2kpiej00dh7GzAL+gISJvk
      gSYmHnfvNCFRxDs9TPu0gLHPiGzqCgGPm/nGPrJfL3rp4xJkMoTFpXq5Mo4//bu/ZWF6GKtj
      ENVz7vtSE0VG2m9TN72MRMoU9N99SCKzNy8nkbN4fHMEFkmke87M2fM17D38giRSLOD41vWE
      Nj+bRDY1NeJJ2MgPd6dx8kY720vSya/Yj7nvA8YWwivBr/QEiEktINdwno8/+RQxFGLbllzI
      eo33D2wh6LVz8vNr+ChamyedIEelVBAKOjl38lMWfCIbXz+yZlD/SfnnTXy+nETqZ7k/uIxE
      9gyRxAMS6QuTSHMrn52pZeO+I9w5e5JJTwyNN1dPIk9eaaPkAYkMmGgzP5lE/otzjoqKrZhO
      fsYXF/vJ2biHrjvn6R534FNkUB0tLYRJ/QETfQu0D02zsehlkchp2k1+Nuanrfo+EomUeqV7
      5Q+DRlLSKvDaJE2ACEkikWvTK30YNFLzu+fobG2mxziBKIrMTY7S3jWANxhp71ZDTJuGaG5u
      XdolsrWxkebW9hW7RHa1t9DY2ILdE8Qxbaa1oxd3QMTrmKG9pZnBF9klcriXpuZ2FrwhfM4Z
      Whobae3sxRNYebvhYePiLpGDtLT34PQFcdknaW1ulnaJjPQmRoyEdDH03zrD4KyTK9fu4rH1
      U9f58tnjsxJ9DgZNM8TovJx7QCLHA6SmJK8kkcYZUlNT0CiCXLx4HdE5wp3mIcZHh5Dpoml5
      ERI54SRWZefs5QZmhtsZXpCTkpSAYtkzeXaolZ+euoTPPcPFa7XgHOVmXTcjw0Z00dF8Le0S
      GdllFW2iPD8XnSKI12/DL6RQkJ/FzPjEWg9tRQ9IZFZqAv4HJNI1i2nauYJEeubsGCceksjC
      og3MmS1kl2ylND9MIoMvQCLTk2PxuD1YJ8dxzlqZnPMie/BMDrloGJhnXZyAXKFBJ/MwNGYj
      Ji6O4i3byc/JQBHwEVy8uTQBIjRjyzVmEreSFwOCsLgwFoEH7ELeOS5cXCSRcVns3rEV38gy
      EmlIYtv2KnSzzyCRGRtJfwES+cWFZg68tZ2o5A3srNrMeNtNhqzhUymGWhtZt7EClUxY3CUy
      ne2bC5k0jxESA9Rfu0haxR6ilOGnvjQBIjBLxy1qLHoO7SlHJsQhBiYYt1jRJySu9dBWJAac
      XPjizEMSGVIQZVCDCHK5QCAYJBSUoTfoIBQmkTLRyqQ5TCIHmm7Q54pn77ZCZKuY26J/jlMf
      nWXnu8dJ1gmIMhUGnQoEAbkMAsEQAVGkt+4GY6MmesbCO8jLZQI+n5+Wr89ijyliZ3HG0teU
      1gEipOUgxthZS6/JDkBJ1V4084N0mT1sq9qC7uVf/Oep+Z0z1NY14vSFUMams7ssg9qaRrTp
      BWzJieZWo5E9i7tEBqMy2bYxn4XxflqGZtm2vQJLZwPD1nlAw5Zd20l+7i6RE9ypX9wlMjmH
      ypwoahs7Scgpozg5yJ2uBfZWhU9d6ejsoKykhLG+VvonvFRsLWO0vZnxORegY8cb1aRGGaSF
      sEjp+ybCJBIp9UJ93ybAd6FXkkRGagqFQiKRa5A0ASIkmUw6HrEWSRMgArP01HO3cwSvX8WR
      I7u5ff4yzpBIfuUbVOQlr/XwlhL9Dr6+chXbc0nkDWKiE59KIkOaeA6/EIl0L5JI8+pIpFug
      dMebpItmrta0EZu9lQM7wh+WpT87EVh8VjHvHT1OrtzEgF3HnreP8tZrZXS2dq710FYm11C5
      KhJZ+UwSGfsCJHL3gUMcO1pNy+3G1ZPIzWES2dLWTsXed7H210oXx43kNHoDCv8cXdNqNqSo
      idKrGOzqIX1D3loPbUUPSOToSySR0QYtfXX1K0jkrz9eHYkMCQJR+ig0GiWhxZVn6S1QBBZ0
      TfP5FxfY+/6PiJGH6LxzHoummEObXv7lD5+ZKDLSdpv6ByRSLKBYrqDvD0wiu8XCb0QiExUi
      Xp8Xr8e7tFukNAEisNrLn2F26lDcvUKgaB2fXOlky5YAN5tU7KssWOvhLeWfN/H5hbukbShc
      JJF27g/OEPCzRCKTsXGtZQif08fBPzpIv7mNz8/UUv5NSeTVNkpKvVyvVZAaGAuTSNkiiRx4
      OonM3fg6GxQWLp/9mKiMSlTK8IST1gGk/iBJJFJKKsKTSGQEJa0Cr03SBIiQJBK5NkmHQSOw
      JRI5PI4oikyO9tPa0YPLH2kTJMSUaZCmpmUksqHhiSSyoSFMIhemTbS29ywjkU0Mjr0Iieyh
      qbmNeW8In9NGS0MDrZ09j5HIoWEjiEFMg900NDQwap0n5HfT29FK/5iVkChdGjFimxgxIupi
      6b8d3iXSODaLzDHCzfqBtR7aikSfg2HzLLH6ZSRyIvhEEpmWnopGEeTSxRuIrtFlJDKGlrsv
      QiJdxKrnFklkB8MOBSlJiY+RyJ+duoQY8HK/rpWE9HRi9Cq6aq9jcSmYGh3GI10bNHLLKtpE
      WX4OOkUwvEvktkLMxnF0Ufq1HtqKBFU0VdsfJ5FjU4+QSLsd4/jst0cik2LxerxhEjljZdLu
      eSKJ9Pvd2O02RgdHCRLCbJ0F9wyGlCw00h5hkV2YRG5b2iWyavd2zP3dS5Y1UnpIInehiVvH
      7h1b8Y8+QiJ3VKH/lknkwYNVRCVvoHrHFsbbbz2RRAoygY1bdpOXquTKzRoW5pwk5xQwfP8K
      Fmf4PZM0ASIwS8fNMIl8rTS8S2RzP4GAH0GpjKhrgy6RyB1vk52gJhCSE2VQIz5GIrWIIZaR
      SHOYRDYuksitBQgvSCKTtAKioEKvVa4kkYj01n0dJpEjNjSGKOSCiEyuZ936VARAFIXwHERa
      CIuYnkoit71OYLydYVuQim1bidVGzoE7v3OG2vpGnN4Qqth0dpVlUFvbiC6tgM3LSWR9I0FD
      xjISaWfb9i1YOhsZts7xjUhkSg6V2VHULZLIoieQyNLiIgY7GhidE6jcWolBcNFY34guo5jS
      nFR0OkmERUzfNxEmkUipF+r7NgG+C0kkMoKSSOTaJE2ACEkikWuTNAEisJmRDq7X9+LDwNF3
      NvP15XssOGfw6PL50xN7IuaXJvodfH35KrYFJ/GF1exZ7+Nnn9SQtf4REvnlDWJiHpDIc/RN
      etiy7xBqayv1PeOImjgOv73v+STSa+f8uau4vW4yKg5SrDZx8lr3k0nk76/xP/7FCequnWXQ
      7idvYzXrBBOXaoeITsvm8P4di19UKuLyuhyi2+sVP//5T0WTOyiKIb9Yc/6U2DJqX+uhrSgU
      9IvzC04x4DWLP/3Zp+Jk2yXxdIN5xW1mBuvE07fbxZAoiqI4K/78p78XZ8dbxI+/qBFdjnnR
      6w+IFz/5tdg7Of/8xwt4xbkFl+h3Doj//RfnxP6aM+KtnqnHbtd444L4H//LfxNdMwPi7z65
      Ivp8HnHB6Rbbrp8RG4zTS7cDaR0gIlNp9djHurD6BYSAiM85zeCchtLMmLUe2ooEmYIog47R
      1mYS8ovCJLLtDh98+NFKEtnexAf/EiaR2gckUnhAIk1MerSkvAiJrH0GiZx6QCIFAk47FrOR
      L059QlPfJNYpE613LvMvvzuDa9EER8qrqdSyxFCI5NxNvLW5n5ZBG1tVfUStLyaCrooYThQZ
      abtFvS2Wo28WoxDzKZYr6bv75RKJXL/5IH+/Rb6MRNofkki7mbPna9l3+BDRqySRPffP00MR
      x55GIm/eYiIYJpG91k1kbSjjSHUqp25286Pjf81euYJbn/yGMYe0S2TEZu66z80OM153gKN/
      kshUvY30dZVrPazH8s+b+PziPdJyn0EiBRvXm4fwunwc/OFDErlx3xHunj/JpDuGhpu3ka+S
      RJ661kFJqY/rtXLSAibazPMEZNEc1vtoHzDzxg8WSaRrjorySubGvuTzS33klO+h5/4VeiYc
      uGTJVEdJu0RK/QELk0gbG4uyX87juafpMPkpl0iklNTqkkhkBCWtAq9N0gSIkCQSuTZJEyAS
      8zlo6+rDF5CRX5zDcHc/AUAbk0pxfmYEHbsOMWUaZsy6wPrCEuKVXlrbegkp1BSUlGNQAX4X
      nd29uH0CeWXlyB3jDI47KCwuROaZpbffiD4xi5zMJGTPPcoVYny4D4vdR35JGZrALJ3dwwga
      A0VFRWgUD283NDxKbk42IGK3WgjqEtGHFujpNxJQx7ClJHyVvcj5WUot5Zzop3PcTXp6Khql
      mtT0dATHGP3mucjyAD4Hw2Y7cQY/5y/cxT3eTetEiLS0lBUksm3EHv5eFEEuXbiB4BpbIpEK
      Q2yYRM6tjkQOTbqJV89z9lKYRBodClKTHyWRLfzs1CUAAp45zpz8iL7xOSy9LVh9GtKT45eu
      DCdNgAjMZpvEY59heHIepVJNclIs49NB9uwsjqgJECaRlWSmxOP3+pgcN+NzzjBmXVhBIt32
      GYbGZ8IkMphIQVHuEoksycsMk8hVHIsRNAns2rGFtKQYvN4wiXTMTK4kkUEnDQMLrI8TQAwx
      2t2JJiEVANu0jZmpUabnvYBEIiM2dUwGO3ZWobLcp3bEiWvGiM+QTZw68n5dIe8c5y/eZ/cb
      YRL5WvVW/KO1tIzMAaAyJFO1YweG2Y4nksjO+zeQZWxaPYl0TfPF+SYOHtxOVEoeu3ZUMN7x
      kEQOtjWxbmMFSpmAzzmF0aGlIC0KgNjMXKq3b2Po3hUszvBCWOT9RKUIBmXo9GpCQQGlQsb0
      qJGknJyI+usPYRJ5fpFEro8Pk0iDXrVIImUEAkFCQQGtXoMYEhdJ5CQTJjPahGQGGq/T707g
      9a35qyaRJz8+y85DJ0jUiogo0GkUgGyRRAYJIdJbHyaR3YMTOGZN1LX20N8zgF+mQqtWIiJb
      esskrQNESMtBTMBtp76uCVl8NtvKcpgx9ROKzSF5cfUyUvI7Z6mrb8DpE1HGprGrNIPa2qZF
      EhnFrSYjeyo30FTfSGAZiWwdsrN1kUQap+YBNZurV0ci7za0L+0SWZFtoK6pi4Ts0kUS6WBv
      VSGwuEtkaRkA06Yh/IZUokOzNLT0kJRbTvH6ZIlERlLfNxG2NiRSTkLU6t5KgUQiI6rv2wT4
      LiSRyAhKIpFrkzQBIiSJRK5N0gSIwAK2AX51+h5JcYnsfmsvLRe+xI6WsqrXKc6KX+vhLfWA
      RE4vhHeJXA2JNNWeo9/6CIlUx3H4nRcgkR43GZXPJpE//f01/v6vfwQhP/cunkZbso+Y+W6a
      ek0o4/M5vK8CkA6DRmSzVjOZZbs5dvxdYtxGjJ4UDu+voq2liYh6kyTXsPX1g5w4sY/+xV0i
      s6pW7hI5NzNJQt7Wh7tEDrjDu0TWdJK6YRPHTpwg1mtZ3S6RCh2vHTzEsWPVtN5uZHpy/Km7
      RI7PTocff3KYlq5BnL4AaRs289577zBt7MQvXRw3crNNWRlqq+GXv/hXpuXJKGd7uHa3nnGL
      Dd/z7/7SWg2JtM9YMbY38qtHSKRCcC8jkbp/I4k8zZwn/HieqV5m1Lmk6gTEoJf2rlFKyzYA
      oNUbMHY04Bd0BKRN8iK3/Opj5O2SY679jNZRkZ/83d/inDYy5RxA9fy7v7y+FRJZx77D774Y
      iRQekMi/ZodcvkgiHWzMiuHuzTtMBGMYHR2jvvY2tR3DaP2TaNxpbM1LJL9iP+a+DxhbkEhk
      xGbpruN2lwW3w8uRH2u4cOoj5n0hNr1+JKJWg/3zJr64eI/UR0hk0A/vPoVEDlgWSeT+b49E
      BmXRHNJ7F0nkvwPgV655qqrfpKoaOm6dwZGeT+/di3SPL+BXZlIdLZFIqT9gom+BjiEb5RKJ
      lJKKzCQSGUFJq8BrkzQBIiSJRK5N0gSIwPzuOXp7B5HHpFGUnYJ5sBurSyC/oBB1cJ7ePiMJ
      6/JJSzCs8YfiMIkctS6QvYJEqigo2fgIiYS8so1PIJHD6BLXkbtKEmkZ6mPc7iO/9Mkk0u+c
      pbtvCHV8JhuSVbR3DhIE9PHpZCdr6O83Ep+VT0Zi2AhI6wAR2MSIEQxxDN45y4DVxqjVi8Y/
      wbW7Tdy9cgGnXEdzzR0c3rXdMewBiYxfTiInQ6SnpT5OIjPSHpJI9xh3mh6QyDhaX4BEDlvd
      xGseksgRh5K0lIck0jw8jDI2kZ6vv2LMqyUtI53ArBHjpAPL6DDqKD3XLl3Ct3hpRGkCRGBZ
      RZsoy8tBKw8iqhOorq4gOT4an8+Dy+knOS2DgNWM1e1d03GuIJG+RRLpsDH6JBJpmUEhLJLI
      wlzmLN8OiVyYmWB89iGJzC6roDhnPRqZH1GuISnegHVeQXVlHhtKKlE5LfgEHTJBIpERnbH5
      KjNJ28iLEfDOWbhaM8hr1VXsemM3/U21OANExGkRSyRy/wMSWfU4idy5SCL7vx0S+fkyErl7
      RwUTy0gkwGD9BRyZu8kxwPzkEEJ8LtGq8FM9s3gHaaEpLC6JREZslo6b3B/X8+7uUgLeWT79
      9DLVBw+RoJNhn3OxcWMBfo2eFK16TccpBpyc//wrcne8tUQi9TologiK5SRSpyEUFFEovwUS
      +dFZqt99SCK1j5DI0aYr1M8m8+7OAkKiyKTJRMq6LARCDHS2MONw4wsKqBf3CZbWASKklbtE
      1tFnDu8SmV+QT39fPwDR6fmUp6tpbOllXVkl65Oj1/RDcJhENuL0hXeJrC5Np662Ce1jJLKJ
      YFQ6W8vzWRgfoHV4lq1Vy0mkhs3VVd+IRNY3dRG/jERmaWYYnFhAEGSUVe1BNmdEkZBLgl6B
      c8ZCY2s3yRs2UZiVKJHISOr7JsLWgkTOeuXESyTyu9n3bQJ8F5JIZAQlkci1SZoAEZJEItcm
      aQJEYObuOu51jeLxqTj6/ts0XvyMSTcUVOwn2tlLS68ZTWoxb7+2ecU1MV92D0mkg4TCXYsk
      8j5Z69NWSSJbqO+Z+FZJ5Gj7PWr7xvEFNRx7/xAqzzQXzt5i17ETOHrvcLfbRGxaIW/t3gxI
      h0EjsoT1Jbx39Dh5ChO9E04GJrzsrcqnp2eQjPwKjhx5k5nhXjyBNf7MsEQi9y8jkQefQyI9
      vLv/AYnc/IIkUh8mkcefTiKTcjdy9NhxMkPDDE75aK69w7BlioDoo7m9nz0Hj6GZ7GPcI60D
      RGwanQGF307ntJr/v70za27iygLw19plecG2bLzIDni3HCcOBEIMCUuSSUhNpYrhYZLZfsD8
      lnmfmadUJjVLZQYSEsBAwCzebbxKduRN3mTJliXZ2pBaS/c8WDBAkWAeHGuS/h67urpvdd3T
      ffuc+s6t26+lUBPjZreNMksFRpMRp30UUW1A2ONS2BNKZMP3KJH+h0rkpxkl0oze+D8lMh1+
      ESVSu61E9m8rkWvPUCKNplzUoh9HwMTBEi2HT5yhqigH0FJdmkvnjevMLy7gjyi7RGYtqaiP
      L7/q4PT5jzGFF9gyWvn92Qb+2dGP+EoVTUfeY2Xuc9xRkXrd8yfOrvEMJdKq1jL9uBL52i/4
      46EfUCI7Bl98l8jHlMg3n1IiU5F1vrh4nbOf/IY8tQDyw3e8wKtnztEqSVz+bJ2ivO3jSgBk
      IUPfXmQ1moOm5wZC+ylKpEEuXl2muvENpro7mPZESOdYOPkCOe/d4Gklsjl3i765AKmk8Awl
      MplRIm1c/GbwMSUyn/t37+1YifxPp51ma0aJTLuYcGWUyNxtJdI/fBF/yszw3WsIJ89SlSeg
      0+tRCTAzfJvxWQ9SWQvlekWJVNhFFCVSQSHLUZTILEKpAu8NSgBkCYoSuTcoAZC1SDidSxw8
      UM2q04E3CvWNTeSo4sw4ZtAWWnaoEe7uGDdWnBklsoUiXZyx8WkkrZ7Gx5RI+5SDWEKgvrUV
      dWSNeXeYRmsTqngAx8wippIqaiylO1QipzNKZCuG1Cb2KSeCIZfm5ubtXSKlBDOTU+hKD2LJ
      l7DZ50gBpqJKGqv3MeuYQVVQTl1VKaDUAbKWrSU7f/3iKqn4JsteEWPay62eCez9nXgTenzu
      RcRUFiiR7iDF+emMEunA5pWpfEqJtK0EsVgqMGikbSUy7qJrxIlneRFdfhHjPbdeQIkUKTaG
      uXx9iMCCneUHOirKSh9VxN2T3cxsQf+Na8Q0RiosFtJbSyx5I0wN3GYtrsPvWiSu9AbNYqQY
      o7ObVBVpURu2lciSwjwSyTAed4h0NIDJbEGv2UHufBd5qERWlhaSTG4rLb06MgAABXpJREFU
      kfGIn6X1p5TIzQDzq340QuCREhlyuzlgPUxzbeULKpFtlJkLEMXEthLp8+DZjD1SIleX/NQ0
      N1BpEPElDJiLTBkl8iXc3k2kqI+cEguGjBCjLIGykL7rX+EKatlwu5hc9qHxDLNENefetXLn
      aw8Nra8zffsSJvNH1BT8cO58t3FN9jLkUfHx+XcwqGX+0JbGOfwtfdP5HG8sYX9DO789mGJ9
      6i63JlJIJJCkJDIa4qE1rl3v4/C7H2HZoRI5N3SD7+Jl/O5cOyrSNKQkRu5d5TtTHi2VBWg1
      MomETCIpo9HA2swYOTWvka9TI6i1NLQeYv72N8yX/gpQAiArefPsJ7wJ/O3zCLU5Xv50005b
      W5I+m5am5gP03fwaUb2P9py9bZWbDLn4sqOH8tpGuoZs1Bs3GVgIkkpIfNCiZ3J2kWLJx92J
      JcSoyDvnz2BYmeCrK4O0vP0hvVcvsCYWMNbbj/bUCcrynlMI803z75s2rC1xukdUlCZdTHoi
      pAQTH+YkmFrwUNfWyoUbX6LKq+S0Xsa+GaCs7nUENLzcVENPZwcxKZ8jJqUQllX81IQYOZkp
      hDUe+HHuF/cxuZLk5RcohClGWBbxUwuA/wcUIyyLEAQBQcim5uc/D5QvgMLPFkEQBCUNmo3I
      KZZnJrFNL5GWZYLry9imZhEzuet4aANfMLbHgwSQ8LmcjIyME4gmkJNhxu/fZ3TcRuThXk7J
      B0zZxrh/f4yteJqIz8W4zUEsJSNGAtjGRph3bSDt6DUs4VmYZmTURkjcXi5KyRjLLg8PF49y
      KsZ3tjHmV/0gywQ8i9gdThKZZyeGfXgfk2+UAMhC1hwDDM5vEffOsRaMcu36HcLrDvrtLqIB
      F198+mcG5gJ7PUxkMczMkpdcfZRLl7uIuScZXIljNhejzcysmG+RoVkvJaVm9OoUVy7fIBly
      cm/YyerCLLLOxNCdazsrhMUCzLiC5Ko2uNQxCMgsj9/h75d6SGbOmbh9GWdYYGHwFgv+Tb7t
      7COwPMHwzDqxLTcXPvsLPQ7vo2sqAZCFLDrdmHJSJHMtmA1+RKEca9NL+FweUOtpstajzYKF
      q6AvoP34MQ5aSknE46ytukjFQ3gCMbSZv8vNwDpiOMjKRgitepNoqgRrSz2BlRVqWt/gleaD
      5AgSyR18AgSjmZNvHaW6wkzsQZxE1I/DFaOkQPvonNBmhJKqaoq0IWyzs0i6SqwNFWy4vUiC
      Dmtz46PgBCUAspLUgyCqfVWolrvpXwijEtSZH2QZU0EJxQV7aIE9hSQGuXKlm7fffQv9vipO
      HDtMzNnD6GIIAJ2plCNHj2LwjtI9vYEgqBEE1bbOKaeZ7O1EqHwVS+HOe4Ne+GaID84eY258
      ggOvtD0xoY++/z6+0S7c4TSyLD317MwU7ct5opueEgBZSHnVSxg1GtQCCOpipJSHNbcXU7F5
      r4f2BHIqypULl6g5/kvq9ptIy1qKCrf3LBBUAmlJQpJVFBTmo0ZApS5GJa3hdbsxFO9nbriT
      6QfFvNfesqOJKCeD/OsfX9P+0a+pyBWIpxPYB7qYm5nF5QuRliS2fJu83H6KeCiOtbaWpOjB
      4/GTV1T4zGsqWaBsJC0yPthLUFfBiUMN+Bbs2FZiHGs/gkkrsOWZY0so40DZj9N28PtIRvx0
      9/YTESV0RRZOt1XR3TWAqdLK4foCbg86OXO0noHeflL51bQfaiK06uD+bID2E0dZGe9nbm0L
      MHLk1PHnV4K33NzpHSGRlsktr+P0682kxQgO5xp1Fj1d9jCn28q4d2+AwtrXaKstxT03wfR6
      mmPHDmHUCITWnfikYmrKCxQjTGH3kFNx/JEk5n15P879xAh+UY35OV7x4wiCIPwXKR+0+S4/
      AwsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cume_dist()' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
