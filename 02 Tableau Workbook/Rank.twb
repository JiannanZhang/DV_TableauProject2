<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Nth' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='28' min='1' />
      </column>
    </datasource>
    <datasource inline='true' name='MEDCHARGE (C##CS329E_JZ7674)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JZ7674' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jz7674'>
        <relation name='MEDCHARGE' table='[C##CS329E_JZ7674].[MEDCHARGE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>APC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[APC]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>APC</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_ID]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_NAME]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STREET_ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STREET_ADDRESS]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_STREET_ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_CITY]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STATE]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ZIP_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDER_ZIP_CODE]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_ZIP_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HRR_DESCRIPTION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HRR_DESCRIPTION]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>HRR_DESCRIPTION</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OUTPATIENT_SERVICES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OUTPATIENT_SERVICES]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>OUTPATIENT_SERVICES</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVG_EST_SUBMITTED_CHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVG_EST_SUBMITTED_CHARGES]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>AVG_EST_SUBMITTED_CHARGES</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_TOTAL_PAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_TOTAL_PAYMENTS]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>AVERAGE_TOTAL_PAYMENTS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Est Submitted Charges' datatype='real' name='[AVG_EST_SUBMITTED_CHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Est Submitted Charges (bin)' datatype='integer' name='[Avg Est Submitted Charges (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[AVG_EST_SUBMITTED_CHARGES]' peg='0' size='1000' />
      </column>
      <column caption='MaxServices' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([OUTPATIENT_SERVICES]) )' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_4030410194213188]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(ZN(SUM([OUTPATIENT_SERVICES]) )) - ZN(SUM([OUTPATIENT_SERVICES]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Max AVG Total Payments' datatype='real' name='[Calculation_5850409221954359]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_6830409223601111]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Hrr Description' datatype='string' name='[HRR_DESCRIPTION]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Outpatient Services' datatype='real' name='[OUTPATIENT_SERVICES]' role='measure' type='quantitative'>
      </column>
      <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Provider Id' datatype='string' name='[PROVIDER_ID]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Provider Street Address' datatype='string' name='[PROVIDER_STREET_ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Zip Code' datatype='real' default-format='*00000' name='[PROVIDER_ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.48232' measure-ordering='alphabetic' measure-percentage='0.387553' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Difference'>
      <table>
        <view>
          <datasources>
            <datasource name='MEDCHARGE (C##CS329E_JZ7674)' />
          </datasources>
          <datasource-dependencies datasource='MEDCHARGE (C##CS329E_JZ7674)'>
            <column datatype='string' name='[APC]' role='dimension' type='nominal'>
            </column>
            <column caption='MaxServices' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([OUTPATIENT_SERVICES]) )' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_4030410194213188]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(ZN(SUM([OUTPATIENT_SERVICES]) )) - ZN(SUM([OUTPATIENT_SERVICES]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Outpatient Services' datatype='real' name='[OUTPATIENT_SERVICES]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[APC]' derivation='None' name='[none:APC:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[OUTPATIENT_SERVICES]' derivation='Sum' name='[sum:OUTPATIENT_SERVICES:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_4030410194213188]' derivation='User' name='[usr:Calculation_4030410194213188:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation1:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation_4030410194213188:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation1:qk:4]&quot;</bucket>
              <bucket>&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation_4030410194213188:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[MEDCHARGE (C##CS329E_JZ7674)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk] / [MEDCHARGE (C##CS329E_JZ7674)].[sum:OUTPATIENT_SERVICES:ok]))</rows>
        <cols>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</cols>
        <show-full-range>
          <column>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='rank()'>
      <table>
        <view>
          <datasources>
            <datasource name='MEDCHARGE (C##CS329E_JZ7674)' />
          </datasources>
          <datasource-dependencies datasource='MEDCHARGE (C##CS329E_JZ7674)'>
            <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Max AVG Total Payments' datatype='real' name='[Calculation_5850409221954359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_6830409223601111]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='None' name='[none:AVERAGE_TOTAL_PAYMENTS:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PROVIDER_CITY]' derivation='None' name='[none:PROVIDER_CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5850409221954359]' derivation='User' name='[usr:Calculation_5850409221954359:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[AVERAGE_TOTAL_PAYMENTS]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_CITY]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6830409223601111]' derivation='User' name='[usr:Calculation_6830409223601111:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[AVERAGE_TOTAL_PAYMENTS]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_CITY]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]'>
            <groupfilter function='level-members' level='[none:PROVIDER_CITY:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</column>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[MEDCHARGE (C##CS329E_JZ7674)].[usr:Calculation_6830409223601111:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk] / [MEDCHARGE (C##CS329E_JZ7674)].[usr:Calculation_5850409221954359:ok:5])))</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='rank()'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]' type='filter' />
            <card mode='typeinlist' param='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='rank()' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Difference' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eWwcV56g+UXemcyLyUwyeYjiIVIXdd+i7sOWfLXd5aquruqeRk33du8O
      sAvsArOLxQKLXmB3BpgFdoGewc7MorerqqvKVS67bMuWrPuiKJGiKIqneN9n8siLeUZmROwf
      SVGUrIOyLUo1zA8QYCczI15kxov33u+97/0ERVEU0qRZhgiCIKhedSHSpHmVpCtAmmVNugKk
      WdakK0CaZY3mVRcgzR8PiizR39WKlJFHWb6Nvs5OpIwcSguzn/oklRNRerq6iQom1q4uQad+
      gWeuJNLT3UEgnEBrsrO6rJjYzAgBwY5TE6Z7xEt+npOR8RlWlZdj1r/47ZxuAdIsGkUS+epX
      /8B/+vVZgv4xfv6f/m8+udCA/IzP9N09z+XmCWb6mxiYjr7YCcUQp7/8gqjGSqC3ls+uNDIz
      1kvfmI/qMx/RMZ2g8fxntIyF0aq+3a2cbgHSvBA6vR5DYobm9i4Eay5GFBoufkrndAhvJIs/
      P+TiV2e7KcgIsmLvhzilJO0Nt1j/k59S6jJR8+UvaQ+qsOWs44Pj2577BBbUWtx5hRTlSfwf
      v65m1TozHrQMtw+hjvQyNdGHKGVz8/wII9NedLkVnCxT+D8/vs2+yr1oPK0MRVXkl+3ijT1r
      EB47froFSPNCCFojxW4zly7eZmV5MQIKqFSoVApdDS0YV24iV2ynOehk66psVu16h788sZGv
      /r//izN3GzjzdSMmg5Z7V84yLS7+vCqVCklKEo/MEpatlBXnULF3L+WFK1hdnM/tu3cRDHpu
      X7iCNxQiYXRzYJOdqze6MKglaq5eIZj85nHTLUCaF0NQUVJWyO2mHg7ud9HUP8v1y92c/Nkb
      1N4YIxYcp29KQdD3MDATQTfRiLF0Hz84PkVvUMZmt7Ctci8uRwlqbzc3xwWcyTF0RVspdpmf
      eEopmaBvqJP8wjUYtD3ffINWh9Wcyeatu8jJLcOmi6DRalCrTdidWeyo3EdBiUhkuJnueBaa
      yfu4tx5OXU56JjjNYlGkJE31N8kprWC4e5DikkyGJsGl89I6GCJDo5CXn0lI5SRb9uAR3KzL
      UVNTexdR7+TAvu2Ik71U3+uhbPMucrUB2j3gkDzoVmygMCvj0RMmo9TVVOPxxzDY3OzdvZXw
      yH08ghvjbB/avPUoE13IrlKymKH2bgeF63dSYo1SNxBl/+YyPP2t1HdMsGHnbkyRYUbjDtQz
      nWRvqCTHrBXSFSDNsiW9FCLNsic9BkjzTPx+P8nkE0aPAEqSmZkgVrMOXwSyHWZAITAzjcHu
      Qq+ee58UY3DMx4oCF56xaZwuK7NRBZMqTkQwoERDWB0utOrHYzSPIcWY9ItkZQhMRwQs6hgJ
      TQaJcAib04VWBXI8hE/UkGUxpD4iRhj3+HEX5CFFAoiCCYtJO3/IZ7QAMvWXv+S3v/kNzUM+
      fMNt/PbXv+b01TuIksxUfyP/+VdfEEvIjDZd5j/+0284e6GWp0V6P/vHf2DsBcPAEOIPv/gt
      o8HUB9uufc6Vhj7OfPpLmtrv8/FHZ556vsUSmRni959+QSAug7+fL681PzOuvRREvYN8/skn
      /P6LC0SkVA81Fhjjy09/z5dnr+GNxGiqPs+nv/sttzsnmBlo4tNP/sCZK3WI33Ph7XY7Tqfz
      yf+ysrDbM7GqgtQ0DeHIcmIzKtxp6MCelTX/vtmJQT47dxGTJsT12z3YzXoaWtoJDt9nwJeg
      s/EOMU3G088z9y/L4cBuzyTTluBGdTtT3fWMR6C94TayIVVOwddDj1chy+nEmWljuOMuFy9W
      I1ic+Ac6mE5q548Hz6oAoRHO3p3g5N4SPj9zhbrrV8nbuBtPaw3tba2c+uoMzb3DSLJCe1M9
      stHJ2o1rMD7lcCN93USluf9RJEb72rnb1E40MktrRx+SLNPX0UQgmqCvvYmm9l5EKcnowDDR
      ROpXDUyNMukPMT48QCA4y9DQONJTzrc4FIZ7u0jGwnSPzEAizOhU4Dsd8ftgoqcJ7YrtZM12
      MxBMVYCR+w2oCrezOV+gubOHlvZxDh7ZSkPNPQz2fE68/QbxoTZmYktYUJWWHJeJu3XNmGwW
      QGG49TbZFXvJ0KSe5omQh36fjuLsDNDZMIoe7rV2Mj40gcGZzWDDdaaSZuwm3XNPJ2hN5OVk
      MtreiWtVCVnuXO7fvERQk4XVkGpuJic8DLbU8tHHpwgk1Wzcc4jSHAsAU1NjtNRc4uMvrxKT
      UvfUUytAzDeFqDdgtNkIjI0x4fVizbSjl5LEjS5+8uGfYJk7qcW9ih3r3Hzx618ytYgfwDvU
      zB/ONxAabeDLG21U/eE39E8N8+uPLjHRcY3TdUN4mq5wuXno+Qf7DiiJEL3jcY4e2kZfRxfJ
      1yQcYHXlM95aRW/ETLYp9Vpmtpux9jpau/sYmwzjtMGFc9XklRSRYXcw09vMtKRHy1O6Ky8L
      dQb73/uQ0OA9kkmJli4vG9dmz/+5/W4NE75JJsfH6fUo/Pm/+CEr8txkWPUMdPaw580fsilL
      pnticQ+eoeYq6qZtvL27mPst/Rz78C8ozggxMBkEoHT3O/zVn3/AFmeIhoEgOu3D7s6ON37I
      T370IY7gAMOhBPCMMYA+wwwJCUUUMdntWIxx4rE4kkaN1WzBpJudf++uN36ALIZpunyKYBRc
      BonOhlr6ZzUc3LMdo079yLFD3nFGRsfIy1qBPc/Mmh2FfPbL3+HaegTR04JnIkruSjvulzxC
      CXgGGRwdIS5FGRvzMbN2+8s94SLpbOhg61t/gqPvAne6Zji5wYWjeCs/ca1isKUKZXaWITGb
      f/HTw/z8H38LB9aysmIvOzxjdI34cZY7l6agiRAXvj5HVE5iK9yAWkjiU9RkaQSkeJjecR+r
      dx6jICryqaeP3Cwd186dIZJMULLpIMXKADeqvkZOyLxRmfHc04kz3fzisxts2r6FO619lKzK
      4+bZUyiyhnK9SPfwJOrJ+zSMhpidTHBijxWIzH1aorvpFgO+BNOSjb2m1M311FtMyCxiq+My
      v/miispD77FO3ceXZ79An7mSAmcGBB++9+rv/gOdMSsa9w5W2AFUlKzfRqEiYNCmGhk5Geba
      mc9pNuhZu7aYcncv09NTZK22UrFpPz//7b/jb/56C4UxI67Oa3infZRaLN/yl1kMEt3326l8
      76dsLDDTXfMVLb0eJno6+eLzaWz5qzm6c91LPP/TWbWhlC/Pn0YRo7z5Z1but7ezwq7m1KVa
      oqKKk+/vg0tf8cXvPsZRtJGeunPU9AaRkire3Zu5dAXVZnD0rfcQkzI6vR6VAD/58z9DAFRC
      En8gTHlRAXoj/Oyv/w6NRssbH3xIQgK9XoegrCRvXRxUWnTa5z/ttJkl/Ov/6X8AQFBp0GvL
      KNosotJo0SamGfaIbN+yn7x1IoJai06nAiWDd3/yY9QaNa69b7BGTKDS6tCqUw/lZ84DPPVP
      goCgKDzpr4Lw5JH8s6YbBAFSfxbgiUdNHfeJxxCEb6zvWBwKDw73tGM/7VpeNo+URZZobL3P
      5o0bFrzj6d/Tt/8+vl8eXMNSfYff5nyCICy/iTBZlpHlVx3nSfM6oNVqhWe0O7Oc+ufPSZjN
      qLVm9h8+hNP8cKQueof4un6At44eYGEXPxnxcel6DbsPv4XdAMHhVqr6Jd7ev4nv8jBQ5ARR
      UcFkeH604BESQc6cr6Hy8BHsGVpEUSQWW8pQyeKQJCldMV8Bz6gAMZqaRvlX//ZfE2k9z6++
      uMF/96O9jI970FmdmCNe7jW3UlFaiCPHjVmI4fGFEBSZDHMGahJMjI4z099Fc5eOk7vLGBvz
      YLBnYzfITM2EkCQRvcFIJBLFlVeAXo4wOj6DxZmDWZtkenqWpJzE7sqhr/oz7gby+ekHBzA8
      qHCKjHdqgkAkSXZuPnJoillRIZFUyM3LJTE7zYx3gobGVrZUHsCeocVgMGAwGOavUk7GmfbO
      4nA60UhRBkcnkGQFtc5Efr4bzRL1J0RRnK8AipxgcnwCSWch12lLddHkJDOTHhIqEzmuTFQC
      hHw+dDY7qkSY8YkZ9BYHLodlSbtAkeAMU/4oLncuydlpvLNREFRkZediMT6IwCjMzMxgz8wi
      PjvDdDBOTm4eWhJ4JiZQmzJxZVoW8YBU8D/4vfPz0SkingkPOouTLHtG6roTUYbGJpFRk1uQ
      jxicwheWyHHnoBOSTIxPoDLayXakxpfqv//7v//7p1wa1y80sONYJXarwKUv61DF+2kdC9JY
      W0e228Gthg6KsuC3Z1sp1Q/z779sZk2BnevXq8jMEPjqchMayctozIZmtJqWKWi+VYXWEOdX
      v7iIKjHM6RtdSJ4WWnxmJuo+ZTCs487NGsymEL/6qAoh2svdYQX1VAuD8Uy2byxjblyNGJrk
      3NmLNNdfZyDuJHjvU6qGBfprziDZC7nx5UdEVUbae4bZs3fPgh/kIdP9LXz02Xny12zAHunl
      P5+6S0G2lb57N5jS5FPofH504vtAkqT5fqyn8xbXW6YYaanFVrYJq05gpvcu5+v6iXlHSJiy
      0cwO8cv/9xPydm3D23qHsXCClrpanMXrMeuWqApIURrrGgj6R2gYjLMiU8XUzAzVly+TXb4F
      x1ykJTo9wD/88gu2by7h84/PoDNCz1gYzUw7Nb3T9N9vwVW06rlGlxLzUl13HzkyQn1PDM10
      E43Ds/S2tZJbugaTViAy0sipO6O4rEbMZg1nTn1NMjbDgE+L7GmiZSTM5Pgo+StX8u/+7b/5
      3xa1FkiJxxCMWvq6evB5A6gVhVkxjjkzm02VlSi9nQQBZ34J5YWpGPDEYA+20k1sXVOMWgWd
      95vx+wOgURMOx7C4VrBhbQkWazZry9x4Z3x0tN0nEPSh0siEoxIWZwEb1hTjn/Jid9hx5hdi
      WvAdRWe9TAeT5Dht+L1BFCCvdB3FLjPDo0PMBLXs2rOZTJP+KReWpK9vmB1byunsGUYBrK4V
      bNq0iYpiFx7v7JM/95JRa7QoioSCmgei06x3GnthOavcWrr7xomKAjlOCyCwavsB9m7bgF2b
      JCJ+t6nBFyuokR3792BVy8gIOHKLKXbpyCrfS4lzrpWVRZrvD2KzaCARZFbIYtP61Qx1taFo
      tCiSBIIa1SL6x4Ihi+PHD7GxooTAlBeNVoMsSQgqNaq5j09NTmDOyECbYcOkVaFRCciyglqj
      0D/sIdthZfX6DRjnll08uwIkZqmvucX5C3fY++YRNqxfg9mkQ2dz4MwwMjs5TNX5C2jXbcTG
      oyPw/FXrCHTWUdPSjSRDxeZtGPU6jBlWsmwmBLXqkaZaEFRs2LIJndZAhtmJPePRp4HD6WS8
      t41A/OFrUiJK0B8mODtLPBF/JC5iNDtwOySuXa3FG47zJMTZKZq6xxDjYdoa7hFJKkz0NPDp
      b3/O7277OLxl5fN+k5eCf8qPzeXCZdXgnbvgvLXb0U610TowSTIpkVtURmZGajykKDIDLbWE
      M9dQaP9mK/dSEdQ4C1cRnhxAlmXaG9pYt23D/G87NdSJ2lWKw6QFQz67Vmm4WtOCKCWY8flx
      uNzY9DAbSyzqdHI8wPnz9VQe3o53ZhaXOw+TRiL84PN6ByvznAzVn6NpwENCbSU7y0Fk1kvI
      P4ui01N/+RyT0dSE4TPaHAf/7f/635OQFVQbN5FptyFIhZT6A6j0GViNav6X/7EUOSmx75gd
      vSDyt+tUaI1a/qu//TsyzBYKV6xCFlQc1uixGjWs8vlRGyyYDQJ/WyhhMqr4l8UKRq1M/mYN
      Gfrt+Hyz6MxWTBqZvymUMekF/mUpmA0q/mZVCOOCEmeu2Mjf/l0hMipUWgN6YQuy1oxqzc9Q
      dCbUW4oIxRIc2HcYm/WbrcD4QCeFG/eyvtxNYvYiQ1Mh3Ku28oMPdnD+418x4o3iyH+ZcxFP
      JhQIYVuViyXSysysCG4jsiSzZts+PM1XSLoXTnQpjLffonEyg7cOb0WzlOt7kxG6+ydZkZeF
      FG9JVcRZhQ8yH1bC2YCfof4++vuHuD8wgd29mmJTkKmwgBiaxLE2n+hUB8GoCDynuymFOXvq
      LOUH3mV1toErwTC5mwtJDDcRiiUAPXpLNuU5K+kbriEcCZHUWMh3Z9F8d5IVedk4XW6mSRKX
      58Kmyy0M+hCJvtZGLEWbcZnV+Ec7GfGJBKUM9mwqJuYbpqEvRuW28iUpzcJBcDLi5ebN2yRM
      uRzYuY6a2joqd2yk7tZNxIwC9myrQK8R6Kqvx7lpM0O1F+ibSaLVG9mxdz9um+E5Z/ueUCQG
      7t+ldWCGddsrKXYZuHvvPtu3bUaK+ai+N8jBPZsBaLhbx/qNWxlqraVrUmTH3n1YFT81NXfQ
      ZBWza8tadM9ZDRr3jXD26m1UGi2W3DJ2rbJy89Y9LAVr2Fxioq5jlh2rzFTX3kObVcy+bavp
      aaqlb1Jky+7dONQhamruYshdzY6KYswm07PmASJc/+oiM0kZoz2Xg/t3YXpqSCQ1qaTAovpy
      iqKgKApC3M+Vuz3s270d/ZI+ul4/FlaAhSiyhGdqGndOziso1bdHSUSZCMTJddqX5nyxIJ6o
      Gnfm4oMWRqPxWUJMmOvX7nPg7XdZpRvh55/fRJaThEMhYvEEiiITi4QJhSJIskTN2Y+oah4l
      FosSDoeJx+NEYyJSUiQaE1FkiXAoRCQaJ+ob5Xe//oipcGI++hGLhAmFI8iKQiIeJRKJEI5E
      kZdrAzWHoFL/0d38kJLnl+rmBxAM1he6+R+wqOVmBRs2MHnhKnezJmkcDiHG1bxzdAMff3Ie
      s0nHjrff515tA7oNOQxfrSPoWMeOYjU325L8cK+Jf65L8P5qkaruGGpZZOOaPBpb21hdUcb1
      2ruUZCb5+mYv2foY1opDaO+f4b6QT3Konzf++l+xIc/2whf2NCKRCJFI5PlvXGJkWX7mcpE0
      L4fFrbdMJhDUMi2NLYj2UhLeSaZjMupEgICYjVowklfgxLZuDdMTTWzYuZsVUjvgn/9RG+pq
      2PHjf8O2fC2hiW5uuDooyc8CoKn2OqV7/pbDrkH+99/e4bBTS2nFLlRiP2Mz4e+1AphMJkwm
      0/d2vDR/3Dy7AkhR+nu6CXffo+JAJS7vPaaMeWicTrIzDJRt2ktiupPmzhEKLRlMjo0hIaAS
      BAwmC2K4i+5+DbKcQ9nqtXQ21jJ9L0DpmjLUSpzJuTh7cfk66u7fpcHqZW3FapioXYprByDq
      G+X8jSaOvHkCQ3SCC1V1iMkk/oCKP/vZnz4vLvFSiPlHuXSlFlGfxVsnDmJQCyQiM1y7dJ2Q
      YGH/kX2MNVbT7Qmxfudhio3TfHy6DkdONvsOHcO+RGNg5AStdTfoHPZSvvMwGYEOmno9+L0B
      dp/8kLV5qQiakgzz1dnrHH/zGPdvXmQwILNx10FyVDNcuVmPxl7I0QM7MDxnHKgkw9y4fJXp
      YJTy3cfJV3m4dqsJk7uMw3u3oFNDIjLFpQtVRNVWjr1xiL66K/T5FCoPH0HytHGnuQdLwQYO
      7VgNPDMKJNLf0Us4KaEz2SgpWgGJEAP9w2ht2azIsTI+OEAgBitLSyA8xchUhAyjFnNWDjY9
      DPUPoGj1oM2g0JVBX28/gjGTlQVOJoYGwGBFFBMUFuQwMdhPSNJRUlJIaHIM2ZyFMDuJYHXj
      MD9lIus7o9BVf5XbbaOsP3CSrcWp8OJw01XqvA4+OLzplewc1l/3JW3yBozdX5P7zn/DukwV
      M/23Od+isMYwQti+gvb7E/zkx4c49fkVjleYuZNYz9tb85a2oHICz6SfDHmcj2/6+dmHB5Ai
      U/zhy2re/eH781ZYf9NN/vHr2/zP//V7/OL3rfz1n+/h1JV7bHTEGLFsINZRzYY3fkhx1rNb
      ZiURYcwbx2Wa4p8+6WVH3gzRlQeZunuZne/9BflWDc0XP2W26CAVNpGkVuHrr++xb6OZztkC
      dpZZMGQY+eijL/iLv/pLjDr1sxbD6Shes/bRl/RmVi14Lb+4jPz5t7tZ/dhS9JWrHg0hrlrz
      cH19QXHZI38rKHn4XkduQeo/LC93IkpJhOkbi3L08FZutnWzschJMtDPpaYAP/7JoVe2bZ4t
      O5+xi9dRZDOb5u4JgzmL6PhVmjR69q/PY6j1Po1N7fQMj1GRaWLA4+fjIQsnTr6BTb9EJZ9T
      Iqu+asZkX09Kiax9thKZeKhE7iwvZ7DmOiqdbdFKZH6Oif471bhKy8my6bhw8xJ6s/OhEukL
      4I3WMBhTOHRoDUaTC5tdR3I6gsNVRlf9BRJqK/JcsHJZxx6Dk4P0Dw9Te+c+Iz1teGeDXDhd
      zeH3TmBcqlVwT6DzXidbT/4JR9cauNvtBWC8p4O87cc5trOA9r4Qf/rD91lVlIPDbKW88gN+
      9uMPWJURpGPYv7SFfaBEDjxdifT4puaUSOaUyJzvpkRO2Xh7T0qJPPqYEqlTdKzbe4QtzhCN
      gyHERJSkGEdRUhWkfPtxynRehmefo0T+l49MT3sHe979CZsLrXTe/JIvPv41MxEDutprdGl0
      bKs8QtbTLP+XSNHqlZy/fgkhGuTAn5rp6u4mZ0URNy5V41fJrN1fzq0rl/GGZindtp+R9js0
      jccIB+U5DXCJmFMiY7L0dCVyxzEKYiKfenrJzdJy7dwZoskEJRsPUswAN26cRRalF1Qit3Kn
      LaVE3lqgRPYMT7J++3ouXrtEPBDj0Pvl3Ov6PRdu6dh8+F2abnxNn0/Er2Sxx5y69ZfxTLBC
      MpFEpdGgEgRkKYmYSM5PRgmCgE5v5EW2s//eSqbIiPE4iqBBr4H6xha2b91CQowjo0Kv0yIl
      EySSMnqDHkGRicdFBE1KLVy6tktBSiQQkxJavQG1AIlEEp1OiyIGuHN/gp2bU4NNURTRarVI
      SZGEpKDX6xEUBVF8qEQ+bw5VkZPE4iKKAiq1Fr1WRTz+UIms7xPZsX4F8XgMRaVBr9UgJRMk
      JQWdXgeyRFxMoJ5TIlWqZWiE/bGx1Grh98UfixK57LpAaSUyzUKWXQVIK5FpFrLsu0CJWIgJ
      zzSaDDs5WTZUgkBgegKV2TW/8ddS8IgSmYwzMeFBZcokOzMD/9QEsyJk57jnt5kJB6aZDsTI
      ycsj7p/EF4ql1ubn5KBE/PiiCrluF9qXPIh5oERmu3NJhqaZCT5NifRiz3TMKZEiObm5aEkw
      6ZlAZVysEvkoyWiQEY8Xjc6E2509vxRcTkQIxFRkWgwoikTQH8KcaUOKBPFM+8nMzsNs0Dxv
      Mdx/+UixABe+/prB8Wkaqi7QPhoAReTiqX/mSm33KyvX1GAn3cMeLn9xiqnQDPUN7Qx11XP1
      dudcwSM0N7Qw0dfI2ZsdiLEwAZ+HC6dPMzo2zJnzVxnuaeJ22/DTNk/5fpCitN5rYby/ma+r
      24hHIwT801w6/SWT4YdmWnR6gP/4i98Rjc7w2SdnGB/tobq+neGWm9xo7OLqhbNMhp4sLT2L
      kbab3O4YJRSOzu/nmowFuX7qV5y9M4AiSwy23uIXv/yKsBzl6tdn6Bse5mrVbZJzPsCyrgC+
      sU7ChhIqd2/n+JtvkmvTEx1vRVNyguhwI7FX1CPJLt3I5tJsYokkOqOT4yeOsm5VIcHAXIxf
      bWLPwT2YSCILKlwFpRRkasldX0mOLoJicrN1fRE97V0kXuY1qI3sXKhE5hVT7NIvQolcM6dE
      alDkxSuRjyIzNTmNOSMDk9X60BOPRnHm5ICQiqYpKiN2qx6kGL6IiorNWwmMdBFOpCrosq4A
      UiKORqdHAHQGE0adhoabdxETXqK+IVpHQq+sbFqjlVVuNb3jYRLhaarruti+Y+HmWGqyi8oJ
      jPWCItHR3M3aTWuxuldRYo1Qc6+LeGIJ9gkVVI8pka2s2/ocJfLWAyUygMOV80JK5DyKgs6a
      S77TwJ1rF/DMpq7VlJlDcW5qkaVKraW4dBUGjQBaGzs3F1Jzo5bZWHx+U+VlXQFsOUWExjvw
      RUT67l3jVnMbA6KD/ZvWcvTkEbru3Xsl5Zoe7iOoGLDoBGLxWc6dvsT6/ScoyZ7LoZUM09U7
      ht2VRSIWRU6KjEbVFNq1KMkkztJNrM0z48jNe7mKZDJCd88o1qwspHhsXoksdjymRHY2zCuR
      5tzV7F7nwmhzI4ZCOHIKsKiTc0rkC6CALbuQsuJCDCqJhPS8pk5GY87m4O5ydBkuzHNjo2UX
      BVqI3pbPyUMbuXXxa4zZRWwrsdFv34s7Owcly065twUReMGtuL4zZquRWzVXERyb2ZUZ57RK
      Q1vddUYL1pCj9WHOWYs6OsbFawFOvH0SRYDS8tXoBFB0emIT9+gKaji+d93LfcKp9WjFSS5d
      m+Hwm2+iUcmUrl6HTmCBErmfkk1QtCKX9aX5DLXWcqtf5MTxB0rkbTS5G1iX94LyjKDCYpS5
      fukKuRv2kyWNUtMssGdjEVp7Pmswz5exfF0ZOtToiFB1s4vDbx6bDw4s+yjQ68LTlMjHCc54
      UFtcZOhe78Z7qZXIZDiAT9Lisi7e9TAajemZ4NeFxVaANN8fRqNx+c0Ep5XINAtJtwBpli3L
      ci3QQhQ5yWBHI02dI2jMTvbv340h6edG1S2CIhSu3syWtYVLHiqT/EP87uwtTAYr+986iVMv
      EAt4uF51i5gmk0MHttF+u5qxmRDF2w5Rbglx4doddFkrOXZw18PsjC8bOUFbXTUdwzOPKJEB
      b4Bdi1Ei1TNcqV68EoksUl91hcGpMBsPvolhqo07nSNkuErmlUiA4Hgbdwa07F9v5sLl20Si
      s2hzKji0zkpVTQOuVbvYvSElW73eI6mXTGRmgOoWD8feeocNuWr6xn1cPf0l7s0Hee+tI0w0
      XqZnMUnPvmf8k0NYi7fz/gdv4dSnIuqCWs/W/cfISozT65mlcP1O3n17BzWXbjHUWktG+R6E
      iVZGAkubI8xZVMGbleXU1bVRtKGSd97cj8Fko/BByBYYaGvkdksHUniImq4EJzFUvq4AACAA
      SURBVI/s5O7tWwx3NGEs3ork6WA8sJjvWSF/9XaOb8/lZm0HpqxCTr5zkvhQI+PB1DyC6B/l
      yoXLtI/50FnzeOf9dylyWigqWUlz/R3Kdhygt7EaMfmcJHnLgdnpMTJcRWToNRRW7GFzsZmh
      oEB5jhW1zkxZoYPBce+Sl2tm0sNQ6x1+87vP8M1NR+vNdnSRMTonwmQYLeTlZDHZ3U1mcTGZ
      uQX01V7CI9lwmJbwJ51TIhvqmjHZ57JEttSSXVH5TSUy54ESOcm91k7GvkWWSFR6cl1abt1q
      w+60k+XOhdAUQazYM1KPf405m7eP7Z3fLDcW9NAfNLB+ZRZxWcZhdaDTg5xeCgF6s4VYyI9C
      6snR2ufDSJywpIAiE5wNYzUv/RYqK7cc569++iG780Tu9PrmX7flrebNvSV0dA0z1nGb6iEV
      7x5YT1t9Gwd/+BdsdMt0jvqeceSXwKKVyAl6PfDjv/zBd1Ii0dh440c/ZrztJvHAGGcv32HP
      0ePY5sLCKo0Wrerhbe0d7sG6ohydKnXTJ6QkSVGcX3i3rMcANnc5OcIZPj91mmRklo0H3+bE
      0R2c+fxzMjM0hJI5vLvy+9uTaLF4eluo6/cSmoxw9M8sdPV049LFOF/bhRyPsH6bk998eomS
      jZu509RB6boSrp07hVpKcmTn0iqRF78+R3ReiZQeUSL7xn2s3nGUglgipUQ6tFw//zXRpDin
      RPZz48ZZFFHi+CKUSEQfX3xxAbVGIq9sMxf+8Bs8mhK67zdjVZcRiAmsWpG94AMKkx4POWXb
      AFi9Mp9r5/6Axl6OVpOeCANAlpLExVRWQf2cTiiKcZKygl5vQK1aehNLkSXicRHUGvRquNPY
      wo6tm+c0STU6rZp4PI6ipLIlGvQa4rEYglqHTre0SmRyTonULVaJTMwpkYaUEhmPxxHUGnRa
      7aIyxCRFEVGS0esNSGIstapTUKGT/TT0i+ysKARZQpQUdFo1UjIBKi1qlTD/vap1ejRqFarl
      mCTvj420Evnyzrcsw6BpJTLNQpZdBUgrkWkWsuy7QI8okTY9w2OeuRCZgM2Zg8OyNBsDPaJE
      SqnsiYLRTnameT5L5LRngqQmgxxnKktkIhIgrBhQxXx4Zx8okW7MhqVLkxQJzjDtj+LKTWWJ
      fHEl0oPKaF98lshpD4FIkpy8PLSKiGdiEp01iyxbxvzYR5Hi+EMSmVYDvqkJAhERiyOHLKuR
      ZCxERNZhNenSSuQDJXJgfJqG6xdoH5khGAjw9W8+YiAQICYu7aTSA/rvXae6uZeGqktMRFKV
      Ijw1RHPnAHVXL9A7HQIlSc3pX3G5ZZx4NIzfm1IipyNL2IrMKZFj/c2cvTGnRPqmufTVc5TI
      kYVKZOeilUgl5uXOvXYmB5s4c62VnruXud3Ww5Vz5/BGU9cti2FuX/g9n127j5KMcen8JaaD
      QWJiEjHs5cIn/8T1ton5Yy7rCpBSIovZt3s7x0+8Qa4ziw0bN5HrcLB28ybyspY+PxjAzMQM
      hesqKM2M0TaYio+bc0rYu7mURCKBgIBvqB2/bEItgKuglBWOlBK50vGyNhJ+AguUSOmBEpmt
      J2v105TIQEqJrHioRPICSmQqS+RhNm0oJTA1g0ajQZbkR7JESrEoDmcOkgDJRJxQIolercNq
      NhKLx8h0ZqMRHnZ6lnUFSCmRhjklMgOjTvNyJfJFsn7Pbiabauj1hEgs0BrVugwKc62MDY/Q
      2u+nonxuN+gFSuSSx4qeo0ROP6JEFnxDicx0vpgSmcoSeWc+S6TTnYtJI89nidRanZSvyEYA
      FCFJfm4xQmSCSzcbMTvyKHDbH/mOlnUF+IYS2T72qosEgJiAHQeOok5IFBc4AAhNjzA+q2A3
      a4kEvPj909y+e5/O1jZiC5TIJWURSmTweUqk+wWUyAdZIvenskTOBsNkFxRiFGJzWSIfRUBD
      8Zq1FLidiE8JfCy7KNBCUkrkhnklcu+mFQjAqk2beJU5ZEwZRu7evIZp3VHKbArXb1SzZ9t6
      RmpqiOpd7K/cQoZOzex4JwOiC+0CJXJJUevRxBerRLofKpF9c0qk7KemdvFKZDzoJaHR0llf
      xVhuGbuPHePmreuYi3dQlBGkqn6UA9tXQ4aLihIZtdZEZOIeN2cFDu3bgwqwZBdRJD+cLV/2
      UaDXhXSWyO94vliQiaia3BfMEpmuAK8JaSVy6Ukrka8RaSXy1ZBuAdIsW5blWqCFBKe6+Oqr
      OkyZJkyZK9hfuRVVZIobN24TTgqUb61kXWHWKylbyNNJbY/E0cp182G7iHeYWy2THDq4lYHG
      m9zrmmTH0RMkButpHZjC7w+x7+0fUJZjfuaxvze+ixK5+yBu1QyXv7USeYI8tZcrVbWorAUc
      PrAbk1YgON7F1dttaCwFHD9YQf2Vi0zGdWyvPECBw8hI2y3GdWXsKEstm17WYVAx6kOXvZb3
      3/8TXIkB6rs9XD59hsKdh3n7eCWj3R284IZ93wuJ4ARXL16ibXhm/rVkdJbqS+dp7hlBlgLU
      NY1xeE8x16tbKdt6gLeO7sFkdpCftbSJXZ0r1z9XiRx8khJZe4uhb6FE5s0rkfdpuVVFwfY3
      2b2hCNXcDI6gtXH4xFtEuusZGuum02vh8PYS6u424xvr4tKla4zOPOwCL+sK8ABBUFNYmMf4
      xBBjIRWlWRa0GVkcP1rJEkfWAVCbsjhxdB+6BYn6VPoMKg8fJStDDWIElcGBJc+NEAgACv2t
      d8jfsBvTUib3U2nJyc54phKZDHvoe1yJbEspkUZnNgMvqETmPVAiHRlMTs7S23yNa3XtJOc6
      8hZnDrODLUxKOjKMNuTAEK2dfYyNeDBkl3Bo76b5jXQhXQHmCc36MZmyMKhEwrKCIidpb2oh
      +gpGSCqN9hv7+qtUKrSauR6rWo0kRpHDERIaDYqUoKM/xLoy59IX9jlK5P36h0pk35wSWZCb
      UiL7O3vY+22VyPu30Bv0bN13EhcT9E8+3Mg4f/V2jqw10D5t4Uc/eovc7Cws1gwMGi2qxwSn
      ZT0GABjpbOCceoIpb4zj7xUiWzdw6pPPcJpViBkrWf2Ky6fISXr6Bihbterhi9osci1BPv/s
      KmU730FKxphV68hc6tSuiRAXvz5PVEk+U4nMj4r8YaIH92NKZBH93JzLEvlCSqRWIm/NHtY5
      vNy8+BViXEu5Pk7PyCSaqfvUD4UIzUgc26xw9eJlIrEYa3afeOIykWUdBZLlJPGYiAJotDq0
      Gg0CCvF4DEnhlSmRqcJJxCUFnUrhTmMLO7dtRVFkEgkJrU6LnEwgJqSUWohCIiGh0y11h21O
      iUxI6PR61CqBRCKBTqd7phIpSgqGeSUyhqDWvpgSmZTRGwyoBIV4LI6wMEvkunxi8TiCWode
      qyYpxkkqAnq9bi4baAJJUaPVqBDSSuTrT1qJfHnnW5Zh0LQSmWYhy64CpJXINAtZ1l2gpBhm
      bHQSCQGz3YnTbmZmYojZmAQIWDJdOO1LE1d/fC1QSutLYl+g+qHIBPx+jBY7QiLMxJQPmzMX
      i15hYnwCdcZctsUlKXGKx5VI72wMUOHIdj+iRHpnvNgeKJGzIjnub6NEQsg3iTeUxJ2Xi4Yk
      U54J0NvIdlhTn1eSTI6No7Y4cVj0BL2TzMYFcnKyUSsinokpMhzZWEw6TMtdifRPtPL1hXr8
      /mmunz1N/0yYzz/9LTNeH36/n0j8VUyDgZyIcvfK53xysemR16OBMX79q1/hCUaoOn+WwbEh
      6hs7GW6+RlVjD9fPncETWmolspmxvpQSGYuG8XunuPjVqW8okf/PvBJ5mrHhx5TI84vMEimF
      aLjbwlhXHRfu9DHcepNbzb20NTUQiKXON91zh6rGbs6dPkc4HqCxoY3uxmput4/R23CDhvtt
      nL14Cym9NWKKrPwStmzZzt4KJy2dI4CCoigoCJhMSyPEP44cj2LLdIL64SNRkRN0tXdgMFkg
      PMl4xIDVbGfTxjI0Gg2K/KgauCSojezcvxerRkFCICuvZE6J3PNNJdKcUiJDgpPNC5VIRZor
      9yIKrjZz4PBedFICWZHo7RwltyCH4tUVWOdyOg92DbN6+24K1LNMy5lUHtyJKplAAQYmpti0
      4wBER0ikN8d9FK1WR1yMg1qHw+HA4chEr126RNkL0ZgdlK3MfaRLEPQMEDbmkWfXQzLBTCiE
      QSfx5enLzEz5cLpzseoFZqMvnm/3OyGocK4oeUyJ3LhAiexKKZEZKSVy57wSKTLjD2DPysGq
      e4EskYKanJJyfMPdhCOzSIqKlppLDPtS4zpJUqPTCei0KiQZBJWW/MICpsdHUVQCGpUatfrh
      75quAKSeru1dgxStyAONkcKVKylaWYjF8PrECEL+acb6Orjf3UfndJTCTDvu/HwS0SBBfxBn
      QSEWXYJg+AWzLX4XHiiRTuczlEjfI0qkZV6JzEWcDZHlLsCiWaQSmZilo9eDM9uJGBfJc7vI
      dOVi1irE5/L+OrK0eCYCTMzKWFV++ga9OBw24mIcs1bLtM+DmHw4I/z6/MKvAKPFjTZUxxdf
      DuMu3sOWkiykvmy+OnUKQQB32Rb2VBS9osJlsaE0A0VKUHXrNgf37+PDtRLtTSvJLasgka2n
      +lodR06eZIU5zo2q6+izN1GxYgk3x12gRB56oESWr51TIv1UNw5wcPfjSmQNt/oS30qJRG2E
      YCMXuyO89c5JnNoQtbduYly5nUJTgBv1I1RuP8jY9Zvk7zhEls7I2OQ9umcFjuzfjVX2U117
      l017DqFLZ4l8vUgrkd/xfLEgE1EVuZmLXwqeViJfI9JK5NKTViJfI9JK5Ksh3QKkWbYsy7VA
      C3moRGZgdORTaokg5uxkff6r3BUIQpN9XKtpRjbm8EZlKZcv3CQSD4GtnA9O7pqPXIy0XGdQ
      s4aKzACXq5qwr1jNvu3lNN+6Rt9UjG37j1Ca8xIHxXKStjs36Bh6TIn0Bdh14nElsorjbx79
      phJ5sx6NbZFK5HdCYej+Hepah9l44Bhl7lTmn2UdBn2gRH7wwQecOLiTuG8Eb+jVbIj7CBoL
      +4+fQBpoYlrt5O3336Msx0phafH8zS9Fp6m+Vs2oN8zdK1coO/g2tkgP7b1DtAxF2L0ui7qm
      Hl7uqELBWfgEJdL4JCWy/clKZNGLKJHfASnEnYY+9u5ew+1bzcxNBC/vCgAw0FLD559/TlPf
      5Ksuyjxmh4voWAdjohq9opCI+uiYUNi86oFppdBxr5midWtQC5Cdm0Vb/R0Ghj14owpWvFyq
      7WRFfvbLXRe0aCVS+4gS2djWxdjwt1AivwvJGIrahj3fhSYcSleABxRt2MMHH3zAppLs5795
      CXGv2syJTVbqe3wER7sw5K9BP/drJQPD1LQPMzE2xkBvH+X73+PQ1jJsViNyaIK4bTV/8f4h
      upvbSbzswNKcEjn7LCXSP/2IEpmfm02G5Vsqkd8WlRpZipEMxxBV6vkHw7IeAzyJ1ttXiQwY
      Kdmwi7K8pc8QCTDSeovanhlCMxGO/8jO5L1RcvIrAJgY6cNgc/ODD95hsu0as3E3k+21VHf6
      iMVsvFuxhiunz/HVxUHcRdt5qZbknBIZU5LYCyuerUSO95Azp0TGpG8qkccWo0R+FzQ2CrIS
      fPX5JfI3HplfZrWso0CynCQpgU6beg5ISZF4PIGCgFavR6d5NWuBFFlKaX0qLXqdBjmZQFFr
      0agEBrub0Getwe3Qz+t9GpVCLBZHrdWj06oeyaT4cpVOhWRCnFMiDc9RIuNotbonKpGotegX
      pUR+N2QpQSyeRG9IlTWtRP4R8seiSP4xlHNZhkHTSmSahSy7CpBWItMsZNl3gZLxCB7PFLLG
      iDvHiVatIhkN4I2pyX6BhVXflacqkVYTwZkJ/GGRDLsLp+3hJF3I70dntaElyeT4BDqri0yL
      npB/Bm8oQY47B/1LnVxaaiVSITCXJTI7Lw/1nBZqtD3MEqkk44yPe9BaHDhtGYR8UwRiSlqJ
      fBKyGOLquTN0jXjobazi4u1uZAXu37jIb05ffiX7gsJjSqSc5PLZc3j8fqILFE3/eDc//w8/
      Z0xMMNl1m+v17Vy6cJXQ7Axnv75Ed2st1xv7Xm7OszklcnSBEunzTnLhq1N4FqlEVjV2cPX8
      WaYWmSXydkM7E4ONnLnWTE/zXYYmxrh09hy+uSyRnt5WekYnufDZKSYDo3z51WUGu1uovz/0
      UIm8lFYiAQhMdDMj5HNw704OHn+LLauyQYnS6Vez2xGla/LVdJWkBUqkLCcIxEWMGh02y8On
      fySukD2XxXKou4+KyoO4BB/TERUqFShKajvFl8qcEmnXPlQiS7INOMv3UPo8JbI7pUQKioKg
      Ui9qsCwYsnjjjcNs3rCKwJSPtbsOsXfbRjKEGNG5CQ/36m1sLM4ilpSQIz6kjHw2rl5JT3cX
      vQ+UyEhaiQQgEY+iNWQgBjxcOP8VX52rYqa3gWF/kpAYo66u9ZWUS7tAiVQQyXOXoBa9nL92
      Z35pQ15ROQ5zavZUllXotGq0WoFoeBZJYyLHlUkkODs/4/nSEFQ4CkoITw6mlMh7razb9nQl
      ckepmqu3WognHyiRLiwvoETK8QAXzt+h8vAuFFmiq6EGVW4FbsvD4azOYKXICZNSHmX2WW7d
      60JMJCGtRD6KLaeYmKedoMrG3t2bSESi3L47wImTlWzYeRi9r4vAq+oHzSEoAsVr1rEi14UY
      jz7xPZkOA2OjHrxhNUZ1BEljoajAhX/G93LXAs0pkTanEykeTSmRwceUSP+jSqQ1bw2717kw
      zSuRhVgXq0RKYc6dOseq/e+yOsfAQPMNeiJOjldumJ/YmhzsIaIxY9EqxBISOaWbWb/CSqbL
      jS2tRD6K3uLm3ROV3Km+SEQx8t6HxxjvHWZ1QS5qFPZsKSMUFrHZX/I6lSdhzKKiNANBbUKc
      aaCqR+LQgb10t9Zhzqkg32WicO1arGo1lh1HGb12i/wteylc4Uac8XL93jjHjux9uTPBT1Ai
      S56kRG5eoES2PFQiLbKf2tpaNLkVi84SGVer6aqvYiynCHMkhBgIcv6Sl12biukcEdleaqK6
      6hK63J1UFtppr79JV1jL4T0VGEU31bUNaSXydWSxRlhwxoPa4iJD93o33mklMs0LkVYil560
      EvkakVYiXw3pFiDNsmVZrgVaSHCqi5YBNZU7ShnrqGFKt5ZAz222Hj2OWf3q+tixwCiXLt9G
      NGRx8o1K2m9eoH9GpGLXIVbnWRlouYnfvI7NJa8mg+U8S61ELsgSuengCXI1Pq5cr3kkS2Qi
      Ms3lC1VENVaOvXkUozxLTVU9Gw4eYORuFd0Tfqangrzzk58CyzwMKkZ9jHn8AIS8Y0wH44wO
      DiK+4kZxvPMu5G3BNtNKz8ws9R2TVG7J5+7d+3hHO7h0+Rpj3tdhPdNCJbJ1CZRIhbzyVJbI
      G7X3ab11PZUlsqIIYW7Ou+PmNczr93N451oEKUHjzcvUNHQQlzVU7DnCicr1ZOQU4TSlnv3L
      ugLAQyXy+p12XgMbGABbdgFjLdfpiZhxW3Rk6aJcvNFCbmE+1pxVHNiz4fWIXz+iRFoBheHW
      l6hEqvTkZaeyRGY6MvB4Zulrvsa1+nakuWeWxxdgrL2Gs9fukhQ0bNx9iFVuy/whGuub2LRj
      K9q5eYBlXwEeKJEHd6x9PW4qoPNeB1tOvsfRtQZu372HV1fGh+8cZ6ijCbS6V5e37Ek8rkR2
      PkmJnHlUiXR/ByXysSyRW/adxCU/zBKpU7Ss23uEzVmz3BuYfTRvmhRk2K9mpfNh6/S6/OZp
      FlC0upALVVcQIkEq3ztKqPsLzl+dIit/A6/GUXsK80qkhO2JSqR/gRLZTY5DQ9X5s0SlBCUb
      D6SUyOpzyPHk4pRI0cepLy6i1iZTWSIzvdy6eJr4fJbIKdZvX8+l65eJ+WMc2WEGHs6eS4Ep
      RJMLw4JEwcs6CrRQiZSSIrKgQUkm0Oh0i9uv/iWhKDLxWAxFpcGgm8usOJcZUa0SkJIJZFKZ
      Dl8t30aJjCMmFQxGA4IiE4/HX0CJVEiIc5+fzxIZQ1Dr0CZTWSJ3rl9BPBZFUWnR67UIioKY
      SKDR6hAUiYSkoNVqECCtRKZ5eaSzRL6mpJXINAtZdhUgrUSmWciy7gJJiSjBsESm3Uws5CMs
      6XHYTEuaZfEBz1IiZ32TBKIKOe4cdAvyhiUiQcKKAZtRYHLcg87qxKKX8UxMkVRAZ7KR47S/
      1Lxh0aCXqUAUl9v9UIkUVDhcT1MivczMxsleoESqTXac9hdQIqMS2bm5GDQqZEnEH4xiz7Sl
      QppKSg9Vm7NwWAyPKJFatUAyFiIi67CadBiXuxIZmu7j7LV6QOZezRk+P11N8qUbJM9noRIp
      SyHu3Wmmv62G6qbBh29SktSc/mcut4zNKZH3uXThKuFEkmDAT1f9NW60DLzcgkpRWu41Mdrb
      9KgS+eWzlMivGH1Mibxy7gWVyIF7nLneBihMdNTyz59emddXp3vuUHWvi3OnzzE7+6gSKUZ8
      XPjkn6hqm5g/5rKuAA+QIpNMxfPJNczgmV3CHFtPK088inVOiVRpLOw7uhetlGRhW+0b6sAv
      G1ELyiNKZECysnZdGQnBwqGd619u1siFSqSyxErk5DTJaID2vmks5oex/oVZIoe9jyqRkVgU
      u9OFWnj4RaYrADDa2Yon4EeKeKltGeJVdwq1ZgflC7JECoIGd8EKvJ4RZEBJRmjt91FRng88
      qkTKMgTHe0nYi3BmaJ9+ku+LB0rk1EMlcu3jSqTzyUqk9zspkTsY7Ggjp3wDhgWTIwuzROrt
      paxaoESaHXmscGc+0sVNVwAlQdfgDHv37GTn8bcIdjeQfNU1YAFyIkhP3yRZTgdiPDV4T0aC
      +P1T3L57n87W+2RkGhgbm8QbVmMxwcTIOO4V+S8/Z3AySk/vN5XIkgVKZMDvY6jrSUqkm/i3
      USK/nFMis/VM+3x0Nd+hr6eXsZnUTHDmgiyRdoOMe4ES+aSIz7KLAi1En5FF+Yo4grqA8uJ8
      tILCrrXjhCSFzFe93GBOiVSpjYjeBqr7ZI4crkwpke4K3n3/T5kd72RAdLE6W6B6Tol06CCS
      mYslewmyRap1qGPPVyJLN8PKAjcVpfkMziuR+7HIPmpra1G7X0CJVKWUyPHcMg4feQcpFmRl
      +zC5+iA36sfYu/0g49dukrf9IA6tjnFP17wSCWBxFbFSfrg2aFlHgV4nFmuEBWY8aNJK5DfP
      FwsyEVGR60grkX+UpJXIpSetRL5GpJXIV0O6BUizbFmWa4EWEvENUd8VxCkNcW84jEmnYcXa
      nWxbnffK97UPTXZS2y1ztHItAhCaGuTazbsk1Rb2Hz2EQ69Qe+EaJUePYI97uXTpOrIph8OH
      92FeqvHBI0rkETIC7U9VIk+fq+LYG0dpv3WJQb/Ext0HyVHNcOXmXdS2Qo4e2P6CSuRJ8jRe
      Ll+vQW0t4NCcEjnZ18yt5l4EYzZvHtlBc/UFhv0yW/YcQpi+T1PXKMacMo7t2fD/t3enX23d
      eZ7H39p3CYQkdoz3DfAG3jCOtyRO4tSWOjX9pP+X6plHs50zD2a6e2rOVNf06e7qTDpVWZx4
      jw14AduAzW42swgQ2tF2JV1d3XkgNruSGFcFcAZ9ntkI3d8Bfrr3t7y+P2CTT4OKySjuWT8B
      /zy1p97mpx+8TX/LNeYzG3tTFCMebl+/Sd+Uf+n/lFoTJ86/x3ZTjO5RL8Ndd7nd2klcyjJ4
      7wb2A+9w6tDOdd7GsZJE9nwviWzrzpHI+8/SXDx3lMcLJFJffQhpbuDPIJF99CyQyGMrSKTa
      5OTt9z/E4utkYDZE9/Mox/ba6egewuyo4uKlD/H1txFO51aqN3UHeDlKrZkqk8RsfGMHoypj
      ERfPn0K7oqyb0eagUC/j9scocViorjvFoR1OADyeCO7BVm4+6Caznk3/VhLZvgEkcnCJRNqL
      SzHICaZiesrtBqzM8037EGXlpThLyiA+S0pThHHhbpPvAC9EJiRksOg29vFHqdageakqRVYU
      eHDrKpY9jewqsaLVLv/BaLVqao6/yzbjPIPu8Po2VmWi6Scf5UikJNHzLEDdnhdJpDccwOv5
      bhJZ95eQyMb3cGZnl0hkNhnmqy++5PB7H2GMjCHY9vOLi6cZG+wjFnbz9fXHnP/gnaXHrU09
      BlhKJk7HvTtMG7Kky+so1b85nwtyNsPI2DgKby+3+33UK4YZcxS9cILl/vo6bt26TCaZ4dxR
      y/e82w+cRRKJhK2yBhULJFKzTCJ3NZyjLLGCRF6/gpB5iUSmM1ywvw6JlChdJJG3LpNKLpNI
      T9vHjEQc6IY6sdXsQxPp5HrLFK6KGq5//DEBczXPOp9SeP4EsMlngeSshJiRUZIhJUqAAp3B
      gHqjV4EBshKpjIxWJfPoSQ+Ha/eTEnN1KzQ6PVq1CjGVQqnVoiRHA1lkgOvWyByJTKWlJa6Z
      TovodN9CIlMpNFotGTGFuIJEJpMpFCoNOu3rkMgser0hRyKFJAr1IolMcXCna6n2v05vQJbS
      iBkZnV5HJpVc2O2rQG80oFYq8wthb3p+DKctflvyJPINTZ5E5rMym64D5ElkPiuzqR+BJDFJ
      JJFBg4jKaMWg2biqOyv3AklpgTmvH6XBSrHdSiISIBgVcRYXv1DTRkxESMh6bCYtcjZDKByl
      oNBGLOhnPiVTUuz8k9mkHzpCJIh/XsBRUkImGiAYFb6dRAaD2AoWSWQaV0kJGkR8Xi9Kg22V
      JPLFZFIJ5rwBzHYXNpMudyUpzZzHi77ASYFRQ8A7SywpYXMUo5cTeAMR1AYLJU47JuOmJ5Gj
      XLn9mK7mqwx7oxvdnKVMD/Uy4vbQ/MWnTEXifPnZFzx/1sHth8+WXyRLPLj8j9zsmQFkguNP
      +N//9DVxIUxXTx9DnS20DcyubUMXSKR79MkCiYwtkMjPXiKRE/ztP/wrWglhtAAAGMRJREFU
      ghDkj598yfTU0BKJbO4a4NbVq6sikS8km+HhjS/pGZvkfut9YmLuc3y69x5tfSNc/uomYjrB
      1WvXCYXnSaYz9Lc30zc+SyS2vBdsU3eANzVVNQ2cPt5AqUkkklQslUJceepjaHJggUTm1gie
      DkxTaNOiMdppPN6AVhaR13r8uUQiQZJZQSJPvkAie/rHsZrVIIaJKhwcrNnL5HD/EolUKhW8
      9se/LDHnF6htOIwi7sYbznWgsREvtcePU5AI4BUjiKIGjc6A1aTDPz+PSafDVlC4dLl8B3hD
      4xl+yLRuD9vNEVKymaJCO8lE5FtIpMzM4BPsOw9iWBjRKVRqKrZU4nNPs+a7OhZJpH/yO0mk
      0rGNopdJpJjKkUi7E4tWQWyVJHIpSi3HG+t4fLsFXyRFNpu740gKFVqVAq1KhZSVKCnfQjo4
      xp2HPVhtZRTZtNy4cpWkmD8m9Y1NYKyTu8MpfvLeKdQZgZTSTGV5MZFQAJk/JZHTwRDPe9sZ
      GxtnZGyC8ZkgjiIbyeQaA/8lEulESn4PiXzW9SKJ3O/EWLBAIktfg0S+EBnUNt5qOoJObaTA
      agCg0KTAG4jgl2QKFHp21uyj3GlHEARcW3awfWsVSilFdnHadDMPgpMRD30TMQoy03SO+lGr
      lBw6/T7VRbp1b8vKQfCzR7fodUfRqlXUnjiP6O5iaDZBXcMJEp5+zCU1lDuMSySydoudbFqg
      q/sZtQf3MNjRjjskceTkCVxWw9otjMkSz/se0zcRZO+Rk2xzGXjc2UdD/SGkZJh7TyY4ffwA
      AB2P26k5cISJngcMe0XqGxuxZsM8aHuM2l7NscP70Kleo6WyTGhmiPtdo1TX1LPNGufptIL6
      bSaaWx5i33GYui02Otvu4k/paDhxnNTMAE+G3FTtP0pNtROj0ZhfCHtTsnoS6UFtcf1ISGSS
      UkfhulwvEw8TkrQ4rcZVf0+eRL5ByZPI9U+eRL5ByZPIjUn+DpDPps2m3Au0MkskMjNJuOgg
      J/aU8fhuK3tPNG7oKZEAMe8Q7cMSZ45WcvfGLfwpmdqjZ9lVntsGLUvpJRLJRDf3esbRF1Zw
      vukwo1136R8PsvvoaWq2ONZwEJyh72Erg1NBdh89izG8SCIjHLv40QoSmeDy1ebvJJHqgirO
      Nb2aRMqZOHe/uY1vXmD3iXeoUk7z+TfdFJaUcfr0aSxaiMwOc6e9F5W1grP15Xxzq52EEEVb
      XENtcZqePIlczhKJnJvkm2vXCSZE5tzuDT8lMkcib9A75QMU7Dx8mrP11Txsf7L0mhyJ7CAu
      ZdGYi3n30geovT0MjozSNZnk/fcvrH1pRFmmqGo/757cSXv7ShJpfZFE9nctkMipbyWRGc8q
      SaQMWw+c5NLFOlpvPMA/PUHF4XN8cCH3xw+AxsqZd98nMfSYeUMZl372IdUOC1u2VWHNk8jv
      iNpG/d4i7j4cQHr1q9c8yyRSiVJjorTYimdyCntZ2dJrciQyJ6/speVoUmF8ST1GRZR4YI6r
      X11hOrTGYx2lhpJvI5H7XyKRwUUSac2RyP4/j0QqNCYqiu3MPBvGsW0Lnmk3zzru8OlXt4mn
      cxMIVkcx0cke5iQdumyWVHSO5xE9+7c48iTy+1K29zg671Oe+4RXv3iN8wKJlLM8f9LKYNzB
      ufrtS69ZSSIziQBXrt7m0Ln3cZq0WEq3cunCEXoe9679SvBLJLL3WeClUyLb8IYD+Dwexrzw
      V3/9C8qK/3wSOdVzl/Y5C5cad1N39pf89a9+/gKJBCjfXc/5vTqePJ8nMDmCtXIXWiUIeRL5
      PVFqOHPhJC3/+ZONbskLSQWG+N0f7nH0ZD1PBieoLgCDvQKbcfnxpvmz/8NEqgrDcA9FtXso
      kJ5x+eYUJdX1a3uqpBjjxpWFUyK/jUR6wuyqP0vZ4imRhWparl9FyKTZWtdENeOvRSLTwWF+
      94dmDjQcoaN3iIL4BMPBNJGonj2GNKNuHypfPx1TMWL+DO8es+Jpn6N4xxGQU1z5+GOClmqG
      up5SeC5PIhdIZBYlMgq1GpVSQTKZQqvTbegpkcALJDIu5DZ6qTRavJMD6Ir2UGLXLZHITErI
      MUCFEr1eD1mRlJhFv8AU1y4ymXSalPhqEplKpdAukMjFUyKVcpbkwimPqyGRspQhkUwhyzJK
      tRa9RkkymUKl0S2RyIZ9FQhCMvd1nZqMKKJQaVApZJLJJBkpCygxmPIk8keZHwuRzJPINzR5
      EpnPymy6DpAnkfmszKZ+BMqk48QEBQU2A9FQELWpgGwiiD+cwFLkwm4xrFtbXtgLJGcJej0I
      6Ch12XPjETnLfNBHLK3AVWTD5/MiZrIotCYqnGY8Hh86axFFr7EZ7IeIEA3iD79MIlXYncXf
      TiJjQQKRP59ExsI+QjGR4tJS1Ih4PV4MBc5lEpkV8XrmQG/FVWgm7PMQz6hwuZwoMjlCKakN
      VJY4MZmMm5tEhj293GjpZeBRCx2DU4jzk3xyuRlfMMjz/i58G7RlaPzpfbrHZpmPJlj8dAqO
      9/Lg6Sjz0ThZKXcS5JPmr2gf8SJLGcLBOZqvXSOwzjc3MZnAP9XHtdZekokY/tkxPrt8k2Rm
      eUXFPdTDb//lY4SIm8tXHxD0eWh+8JDJ3gc86Bmh9eZ1ZqOra3haiDE31sWN9mEG2m4wMDnL
      3VvNzC9wgpm+Fu73TPLg2ue4YzKJWAT3WDd3Hg7yvOsBXSNThCOxpZ/rpu4AALPDD7n+2M2h
      w7VYC0uosEgMDgwSVxZg029Qm6bd+Pwe+nu6iaZzv6rg3CQen5+h/j68goI9e3Ygapy8f3wP
      Kp0Rs0oknMigXOelPKu9kHggQEahoKh8Kw5NigNNF3Facj+8TMLHqCeNw6oHjZ5EyEcmm2Ko
      bxj0ekKeSaKSGqNmdU/jdqed0KwXWaUg5I2xvfYARjlMYoEU600WgrPjhJIaLHolZdU7MZNC
      bTDh9U4T9nsYn/AsnQO36TtAVl3EgUoV7d1jCPEI+5ou8fMP30GcaKNrfJX1Kn/gqGUV2w+d
      5JAzQcdYrg0qlYbSnXXU7zDTO+gmOTdC1rEDg1oJKKnad4xDFUqGp9e/Nmjj+z8jMv4USZLo
      GwpQs6d46ctDXY8IxCMEfT6mAkp++asPsBcUYLRomRge5eiFn1NTKDHqjazuemob53/xEbP9
      bSiUIul0hnRaZpFL93cMc+yDn3CsWkHPeIixp/cYF4tprK2k7vSH/PJnP8UcGsUdzxHMTTcI
      fjnl23bR9PYO/vD7TxgyHafvyR2Kix0E0gZ2O1ZRr3INsr1mNy1dbSRDcY7uNfJ8fBzXtt08
      vfOER1KSrUdr8c4+pLjsCEpknnfeoc8nEQ/DmWO2V1/gh4oY487N24hKGWv5HpQrFsKy6QQT
      3ghbD5ykKJ4i6B6g0KKkreUO6axI1d6jVDLJ44d3kJISpwtWMd5Kh/n6SjNabZbi7YfZUhSk
      5fpXaC1lWBXzjM9mqN5Vxt17rSiiKQ6UTfHJtU6OHDvI4Pg0St8zZuIyc1kLxxYA9aYeBGcl
      kXQG9DoNYjJBVqVDIaVIJNNo9UYMeu261dl8eRCcSMTJKjSYdCo6nvZy5NBBUkIcUVZiMhrI
      iimySi1atZKsJBKPJ1BpDevaZpARU0kSKRGj0YxaBclkGoNBj5ye5/HAHA0HdgEgCAI6vZ5M
      KkFSlDGZTCjJEo/HUah1GPW6VdUGTQsJBDGLyWxGtfD9ar0RrRigcyzFkX3lxONxUOkwaiEa
      z40t1Fo9eo2CeEJAozOi12owGvMi7I3Jd4kwWZZzK5/KH9fT6nq3W5azyLIiV2JlldmUIuxN
      lVevWqD7sa4RrG+7ZbLZ1/vdbroOkEql3siFsHw2Jpv6ESgjCiSSYLXoic2HkWRQ6S2Y9SpE
      IUYS/YrFnPWNnE0TiWWwWgyk4vOE4xkczqKFswtkYuEA8wkRu7MYnULE6w2gsxRSaNGTiIRy
      r3c50K6xbEvGwgQjSexOF5l4kHAsCQolBUVOzPrlhbBwKIzVVkAqHiYUS+NwuVAjEvAHUOqt
      2K2mVY0BIkE/0aSEw+UiFfETSaRBqabI4cSgVSGlBXz+ICqjDWeBiWRsnmA0hb3IgVaZwe8P
      YrA5MBs0KBUKherXv/71r9f0J/QGJzjdyc2HAartKS5fb8OmT3C9fYra3WW0fPkpcvEunOZV
      nF31AycrCnTd+SNXnsap31fM5U//jTnPFGGVkwqHGTkVprnlEfHQBO3PYtgzU/RM+HnyqIvy
      LcVc+eIrgv4pJmIGtpfb125QLAk8vHsfr+c5XVMipSaRqZkZvrlyBeee+iWRJgQm+K+/+ZiG
      w7v49J8+RVKkGPOm0AT6+aZnkuGeHkq37cak+/7N27Lg51ZLB4ngKB3jGVz6JO7pSa5fb2Vr
      7UGsejVjTx4w7IvQeecOjh27aPnyc+aTcQKChtRUF4+HxukfmmPf7mr+w7//m7/5cY2s1iBi
      IsC1G200nL3AzprjVGfH+Kb5NqHCWvYUb8w0qJSMozfZkJUKMqKPiFRC47HdTI9OAaDQFfLO
      +xc5cbyO+TkvFTUnadhVgiSmQQEKhRq9TrP2Yx2VgZPnzlJi1iJmsriqdrO3yoprbxO7XAvT
      mrLI0+5RzCY1pEPMK4o5duQA4wPdSAoFGo0WtUqBzKvbqjA4+eDSRY4d3Udw1kfFjv1U2vXs
      ajhDuS23FWLHkdOcP9VIqVHA45kkonBQUb6V2p0VjLo9NDS+jRwbXzpFZtN3gOHux8wE4yjV
      KkBF43vnaWvp4+1Tdet85OhyNBYH+7dXLizuSGjUelQqDUrF8ipvNh3j1tV7HDubgx1qnYki
      C0xOe8mqtNisFtLxBK85JvwzosDiqkAITJHNZul/1M3+hkPLtUEnBlE4tufupIYKGrbK3Gjt
      IplOEYpEMVtsmDRK4qnMqq6WTUW49nUbjeePQzbFYP8E+2pfPB52dvA+HlMN24wCgfk4icA4
      11q7QKlArVKjUqtZ/GzY9B1gx6Ez/NUH9dy5dotYWkJttOFwFWHVvhn77ZVKK+n0HKFAAI1p
      YZFLSnL766+x113gUHUhcxMjZIxObFqZSCRMRlvA7q1lBLx+1nQOJiMw+nyGovJyMkIUOZtl
      bD7LDsfyY2Mo4GN8sIPR0ef0Pvfg2HqQU7UlmApLEMIRSip3UKjJEI6vojy6lODKZ5epbvyQ
      mnIzGSGOVzJSbl0ep/mG2rkzLPLRB29hsLoodxWytaqMRCyKUaPBH5ojLapRLZRh3HSzQCuj
      N7vYs0uFY0sFjYEYM4E4u0q17N+/a6ObBgY7+7YZUGkKaDpYTvd4ipNndjDY047O6CCcyhDu
      acPrqebUListN69gLj1E4+GdOBT3uPlokgvnm1CvZT9WapAibq72BHjr3fdRqbJU79yDTgFS
      MkRr1wRnTpxj5xFoq3BxcEcFY50ttHjTXHznDAXZIK33W1G79tNQXvDKy6XmfUQlGO5oZW52
      F2/VlrF95w40CsjEZrg3EKVAmEMhiFz7+kuONL3DkR1uWp5M8VbTKRyKMM33H1N38uzS5MCm
      ngX6MSbsm0FtLcGse7Nv3rKYYDqUpMJlX5/rJeeZiSkpd6z+mFiFQpFfCc5n82ZTksg3tTZo
      PhuT/B3gDUm+OvT6Z1PuBVqZqH+YvkkVxw9vW/gfmUfXP8FY+yH7S9ePQ74c97MOuoZmiIaC
      HLjwEfvLzEjpGO2tLcQ0LppOHmDiyQOezUapaTiNCw/NDwcwl2znVMP+tR34roycYairjYGp
      ILvrT6MPDdIz5iUajVN//hK7ShZrgwrcuH2f02eaGH7UwngoQ93RUzgUIVraOlEXVHH6xAF0
      r1q1zoo8bWth3JfgwKkLOBV+mls7cOw8RP2+LUtTmnImxuUb7Vx69y36H7UyFpI50dSEMjjM
      nYeDaArLuPjWUWCTT4OmEkGmZkJL/87GZ5gMiXQ+6NjAVkHF7iNcungapcpEtSu3GBeeGsCr
      LKNAcDMy+oz7AxHOX2jk8d1mskojTefPEhnuxL+e25zkLJbinVw4to32h71U7T/Oe283otMa
      KC9arg3qftbN/af9ZOJu7g0kON90iMftbUwOPkFbWYc4249nNbVBkXBsqeXcQRd32wcYenyf
      4pqjzPZ0LJFIgJGuR7QPjpBOeOkeF6gtV/G0bwrv5BRbDp/mw3PHlyrvbeoO8HKe9/RQefQi
      ltgIwdc8s+2HzmzfI4r2H8e4MF+djicwOxwUWswIWTVGeZ7BZ2OMuWewuUqZH+/Fn9GjU6wj
      iVRqKS0x0/WoB9NCbdDp/kcU7TmOSbNQGzThYyygynVkjQV9JsDg8Diz7lxt0MknrfgkMzbD
      KracKPWUF+toe9BPQZGFeBycxQ6s+gzJhWUEMeJmMlVElVWJJMUxGBzYCm2khTh+/yz9j+7w
      +fX7pKT8SvCLkdN0940w2nGHSDxAe+8an7H7inSP+qnb6VraIKZQKBFTIul0GvRFfPjTdylx
      2ig0mvmxkcjCAttfRiI/+m4S2XHvPikxgt/nZzogIGaSZMQ0MqplEhnMk8ilzIx0c/t2BKMy
      Tbr8GL96twFSc/zD7++RPfSLDfqESBBNq7FpNchZifHJKYrLq4hcuU+PWsvZwzo67rUQTUbZ
      UtfA887bby6JrDuJPZ4kODVAwXeQyGxSosn2GiRSl6V4+yG2FIVouf71CySy5uR5YoLISF8n
      LkcVOvEpzY+07DnxNpODnczEZTx5EplLVkoTXSg9olKp0OgM6LVqZFlGEAQMRuPGkEiyCEJ6
      qc7nIolMLjBJo0GHmEogpCVMZjNKOUM8lkCl2wgSKZBIZjCaXkUiE+j0BjKpBEJaxmxeJJEx
      FGr9qklkSkiQXEkiYwskMhOgYyxFQ00VkJvuNhoMpFMCqQyYTAZkSSQeF9Do8yTyjcv/jyQy
      K8uo1pFEZmXFaxUD3pTToHkSuX5RsL7tVuRJ5KuTJ5H5rMymfgTKiALh+RT2ogKU2TRz/gh2
      px21AkL+IFaHY/0WlVZEEpP4/UGUeguOAjPx+QDRpIzD6UCz4jR1UYgiyDqsRi1yVmI+EsNk
      0hLwBZFk0BgsOAqtrOURAStJpBQPLmxrVlJQ5MC0kkSG57FabS+RyAwBv/81SGQu8fl5dDYb
      anKlbSKxJFabJTdhIUsEvF5UpkIKTFrmg35iSRGTrYgCs55MKk5S1mLWa1AoFJu8NuhsH3//
      33+HNyERcffxH//L3+FNiGSik/zj3/2GQd/G3CmmBrroHhrl6v/9PVORCA9a2+h9+A0tTyaW
      XyRLPPj8t1zpdAMyofFO/va3nyGISeZmpulq/orrD4dW4az+gkgCnW3tDHXf53JLD9H5AO7J
      5/zxX/8Zd2QZuAiBCf7b3/+OhBDkk3/+N4YHn9L8aICp7lau3evg6y++wBdLf8+FlhOaHuR/
      /Kf/iQ8AmbnB+/yvf7nK4rKNf+QhV+894Y9/+IpkJsnXn3/O2PQ04XiKdCLM9Y9/w82n00vv
      t6k7AChx2I1Mur2MjM9RWZbbkz7a2UXDTy4y2NmzIa2qrjvB2281UWkVmU9bOPfeOSwaxRLj
      AwhN9uNLa1EpFwxx7yQFVi0aYyEHDtUgawq40FiHai3vYIsk0qojvUgit3wLiexZJJHBHIms
      P8j4YE+ORGp1qFUKsqvsquGYiKMw994ZYZ7eIQ8W8zKIeT7wnJqTp6lShpmKJIlnFRTZCnEU
      mBDiUUw2+wvP/Zu8A0BpWRmz4/1MBUWcViOQ5n73BCTiTD/rJCxuzBPi3PAjJjW72O1QAEoK
      XSWEfTNkyZ272z0a4MCeKhTAzGAXtp2HWDwVNTIzQtq2dd1Av8VZgRBwfyeJpGiRRFZSX71A
      IlPJHIk0WzCplSRWSSK37q6lwKgGOcvEYC+u3QcwrOjlkqRGp1Oi06oRJRFXURmCf4xrrU+w
      OCvZWuF44VFr03cAvb2E7NhjwsZKTFoFCfdTdFuPU1VZzbHdhXSP+Na9TYHnndweiPDzS2dR
      Z2KMjfspLSsmKeTKemfiYfz+OR487mWgu4eJOS9jPW2MjIwxPhtmdnKG0i2Va/vpDwskcnaB
      REa+k0ROrCCRzm0vkciqnRRqV0kiV0aW8Mx5efa0nZGhYdz+KACFdjWe2Xk80QxFJi37Dx9h
      e1UZQjz+rW+z6WaBVkZvdlBRocFQeIp0STXJiQTJuEzT6SNU2jQUmWX6JmOA65Xv9UNmzjOH
      LMS5eeVLDjZeIDrbz8C8zPlzTQz3tGMpqeWjX/07Iu4+RlLFHN7uIJtOUFnZx47SAqZDxVS5
      rGvf0BdI5HvfTyLLXRzcUc5YZyvNf0Ii962KRC5m6/79GJUaGi/+AkkIU9kzQbk+SvOjGU4d
      PcPUrVaKj5zBodUzNf6Q3iicaWpCCZidVVRll9XYpp4F+jEm7JtBZS3B8mMgkcEkFcXrRyKn
      Y0oq8iQyn3xWlzyJzGfT5/8BUdq0XJU4C44AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
