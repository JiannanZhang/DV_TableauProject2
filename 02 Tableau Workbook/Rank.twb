<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Nth' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='28' min='1' />
      </column>
    </datasource>
    <datasource inline='true' name='MEDCHARGE (C##CS329E_JZ7674)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JZ7674' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jz7674'>
        <relation name='MEDCHARGE' table='[C##CS329E_JZ7674].[MEDCHARGE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>APC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[APC]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>APC</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_ID]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_NAME]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STREET_ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STREET_ADDRESS]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_STREET_ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_CITY]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STATE]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ZIP_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDER_ZIP_CODE]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>PROVIDER_ZIP_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HRR_DESCRIPTION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HRR_DESCRIPTION]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>HRR_DESCRIPTION</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OUTPATIENT_SERVICES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OUTPATIENT_SERVICES]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>OUTPATIENT_SERVICES</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVG_EST_SUBMITTED_CHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVG_EST_SUBMITTED_CHARGES]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>AVG_EST_SUBMITTED_CHARGES</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_TOTAL_PAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_TOTAL_PAYMENTS]</local-name>
            <parent-name>[MEDCHARGE]</parent-name>
            <remote-alias>AVERAGE_TOTAL_PAYMENTS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Est Submitted Charges' datatype='real' name='[AVG_EST_SUBMITTED_CHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Est Submitted Charges (bin)' datatype='integer' name='[Avg Est Submitted Charges (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[AVG_EST_SUBMITTED_CHARGES]' peg='0' size='1000' />
      </column>
      <column caption='MaxServices' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([OUTPATIENT_SERVICES]) )' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_4030410194213188]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(ZN(SUM([OUTPATIENT_SERVICES]) )) - ZN(SUM([OUTPATIENT_SERVICES]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Max AVG Total Payments' datatype='real' name='[Calculation_5850409221954359]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_6830409223601111]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Hrr Description' datatype='string' name='[HRR_DESCRIPTION]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Outpatient Services' datatype='real' name='[OUTPATIENT_SERVICES]' role='measure' type='quantitative'>
      </column>
      <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Provider Id' datatype='string' name='[PROVIDER_ID]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Provider Street Address' datatype='string' name='[PROVIDER_STREET_ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Zip Code' datatype='real' default-format='*00000' name='[PROVIDER_ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.48232' measure-ordering='alphabetic' measure-percentage='0.387553' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Cume_dist()'>
      <table>
        <view>
          <datasources>
            <datasource name='MEDCHARGE (C##CS329E_JZ7674)' />
          </datasources>
          <datasource-dependencies datasource='MEDCHARGE (C##CS329E_JZ7674)'>
            <column datatype='string' name='[APC]' role='dimension' type='nominal'>
            </column>
            <column caption='Outpatient Services' datatype='real' name='[OUTPATIENT_SERVICES]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[APC]' derivation='None' name='[none:APC:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[OUTPATIENT_SERVICES]' derivation='Sum' name='[pcrk:sum:OUTPATIENT_SERVICES:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[OUTPATIENT_SERVICES]' derivation='Sum' name='[sum:OUTPATIENT_SERVICES:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='alternate-text' field='[MEDCHARGE (C##CS329E_JZ7674)].[pcrk:sum:OUTPATIENT_SERVICES:qk:3]' value='Cume_dist' />
            <format attr='display-alternate-text' field='[MEDCHARGE (C##CS329E_JZ7674)].[pcrk:sum:OUTPATIENT_SERVICES:qk:3]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[MEDCHARGE (C##CS329E_JZ7674)].[pcrk:sum:OUTPATIENT_SERVICES:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk] / [MEDCHARGE (C##CS329E_JZ7674)].[sum:OUTPATIENT_SERVICES:ok]))</rows>
        <cols></cols>
        <show-full-range>
          <column>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Difference'>
      <table>
        <view>
          <datasources>
            <datasource name='MEDCHARGE (C##CS329E_JZ7674)' />
          </datasources>
          <datasource-dependencies datasource='MEDCHARGE (C##CS329E_JZ7674)'>
            <column datatype='string' name='[APC]' role='dimension' type='nominal'>
            </column>
            <column caption='MaxServices' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([OUTPATIENT_SERVICES]) )' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_4030410194213188]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(ZN(SUM([OUTPATIENT_SERVICES]) )) - ZN(SUM([OUTPATIENT_SERVICES]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Outpatient Services' datatype='real' name='[OUTPATIENT_SERVICES]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[APC]' derivation='None' name='[none:APC:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[OUTPATIENT_SERVICES]' derivation='Sum' name='[sum:OUTPATIENT_SERVICES:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_4030410194213188]' derivation='User' name='[usr:Calculation_4030410194213188:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_STATE]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation1:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation_4030410194213188:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation1:qk:4]&quot;</bucket>
              <bucket>&quot;[MEDCHARGE (C\#\#CS329E_JZ7674)].[usr:Calculation_4030410194213188:qk:3]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[MEDCHARGE (C##CS329E_JZ7674)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk] / [MEDCHARGE (C##CS329E_JZ7674)].[sum:OUTPATIENT_SERVICES:ok]))</rows>
        <cols>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</cols>
        <show-full-range>
          <column>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='rank()'>
      <table>
        <view>
          <datasources>
            <datasource name='MEDCHARGE (C##CS329E_JZ7674)' />
          </datasources>
          <datasource-dependencies datasource='MEDCHARGE (C##CS329E_JZ7674)'>
            <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Max AVG Total Payments' datatype='real' name='[Calculation_5850409221954359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_6830409223601111]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='None' name='[none:AVERAGE_TOTAL_PAYMENTS:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PROVIDER_CITY]' derivation='None' name='[none:PROVIDER_CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5850409221954359]' derivation='User' name='[usr:Calculation_5850409221954359:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[AVERAGE_TOTAL_PAYMENTS]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_CITY]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6830409223601111]' derivation='User' name='[usr:Calculation_6830409223601111:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[AVERAGE_TOTAL_PAYMENTS]' />
                <order field='[MEDCHARGE (C##CS329E_JZ7674)].[PROVIDER_CITY]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]'>
            <groupfilter function='level-members' level='[none:PROVIDER_CITY:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</column>
            <column>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[MEDCHARGE (C##CS329E_JZ7674)].[usr:Calculation_6830409223601111:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok] / ([MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk] / [MEDCHARGE (C##CS329E_JZ7674)].[usr:Calculation_5850409221954359:ok:5])))</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='rank()'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]' type='filter' />
            <card mode='typeinlist' param='[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Cume_dist()'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[:Measure Names]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[Avg Est Submitted Charges (bin)]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:APC:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_CITY:nk]</field>
          <field>[MEDCHARGE (C##CS329E_JZ7674)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='rank()' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy953Nc55no+Tunc0AOjZyJRIBgzhRJkZIlSrI9tjxzx3Nn7v2wW7Vb+2H/
      hZkPW/tpa2b2bu2d2cn22B5bspWZExgBEETOoRsNoBEa3eicT9gPICnSlmzZIruhy/6VWAWK
      B93P2+c8/b5PFlRVVcmS5SVEEARBzLQQWbJkkqwCZHmpySpAlpearAJkeanJKkCWl5qsAmR5
      qckqQJaXmqwCZHmpySpAlpearAJkeanJKkCWl5qsAmR5qckqQJaXmqwCZHmpySpAlpearAJk
      eanJKkCWl5qsAmR5qckqQJaXGu3Tf0kkEqRSqUzJkiVL2nlGATQaDYIgZEqWLFmeIMsysVgM
      q9X6Qt/nGQXQap/6qyozcu8qm8YGTu5tYGawj/m1TQL+IAdefZumspwXKtjTpCIeRuf9dLVX
      MthzH5+Sw8lj+9Fr0qesUjxCz91uVrxhrPlFNFaXoMmppanKwvjgCHU7d7MxP8TUgpvK5l20
      V+cz0HsfT1Sl6+BRynI0TAz2s7wZZUfHPmxaH4MumeN7m5meHKOusQ2jXpO29XwVgut27j2c
      oWbnXtpqS3n8aTvHeqB8N7jHmVjwsuf4KfTBRfpG5tlz/FVsObqv/d6SJJFKpdDr9b/376Y2
      nXx8a4SS8jqOHOggvGbHncqlQHHTP7lALKpw4o3Xgd9iA0jxIHe6u7l09RZJRaRl7xEONBcx
      s+ijKM/8h6/s90RJxei5fp67ow4URaZyRxdGzySOgJQ2GQC0RgvHz5wjGovy5muvYkyuseQO
      AzL26Sn8rgnuzEQ5c/Y0m84Z3M5RZsO5nD2xm5mJGWYf3sKjLePMqSOM3r7I4pKTi598jNMX
      x+mYJykpaV3PVyGl6DlyuJOh3odIj5rnpMLrXLl4ibVgAn1uBYdb8rjVO0FvzwCdu6rovjGY
      WaEBt3OC0p2v8MqhTjRRN598/CkzLh+l9Ts5+8p+RJ2eXOOWYn2pAviWxklVHqXD5GZuM0Ey
      tMaPf36Z7//nP6PAlL5vKkFr4MixE+SatGj1VnL1cRa9CXTIaZPhq7DunKOquR2dzsDJV09R
      UtVKieTkPz64QnG5jeV1D421VegMVqpLLKz5wnQd2seD7tuktmlnpqKyCtbmp1D0BlBVQGFi
      dJodrQ0gaCkvy2NsbB6rVYOKmbziCjQpX6bFZtW1ztxQNx9dvotkKOTMyQOPjjoqi1MjVLTt
      wajd2s++VAEGe3pJxf3EFYn79we5+N7PqDvxfXZW5qZnFY8QBBGtZkvhFDmFaCzh9aONjM2t
      pVWOX8dsziESCaCkUiRVDbaKctwryyiKzEjPfRZWl9lx6A3+9Adv09N9naIcC+ubfhQ5iTcY
      o8BqwpRfTXupzNDsekbX8mXEYzEa957AmFgjlpRJBtwMz9ix2xeZnZsjmhA4/PpbeOxjKGqU
      eNRPSknf6eDLaD/5Pf7sj95ECC4RTsKjZx1VhTnHJs0NJU+u1X7xS6QIybn85z//IcWJBf7h
      w4eE0GMOLHDhwjItew7RWJ6fhqU8ltJAaXEeUiLIrWt3iMgaTr5elb73fwqbzQZAUU0H5rmb
      nL80T+XO/ZTvqKVu+QqfnV/EXFTD0cIibt65wQTQdfgVOupyuXP7LhemVQrr91FXECUaMdHW
      dJRhZxhNGu2Zr8q6fZQhu5ui+i5k7wwufSN/8V/+K86h60RK65nov8OqL0zX4bPkxezcuvqA
      3SfOZVpsvEtTDM6vYa5oI9ekI2jOpVAyASraomLytZ9/1kK2NWKWr0LM6yJsLKfEkp7QkSRJ
      RKNRcnNf3IlDEAThS3aALFmexVRUiSnTQrwAtqUCyLJMIBDItBgvJaqqsh0OBaqqkkwmSSaT
      L/R9skegLM+QSqWQ5cx72GRZJh6PY7FYXth7mEym7X8ECq/Pc/H2EJFwgtfOnaC3u5dwNMqZ
      P/ohFbnpFD/OL/6fv6P+7T9nT6nAf/vbv+edH36bj9+/Q2tbNVhKON5SwKc3HmI1iFR0nmRf
      UwGf/et/p/T0X3CwLo1Og+fE4sg9HjrcGIvq+daxLkQBUBVuffjP5Oz7Aan5+6x6fVTsfo0c
      3yhj8yvUH3yTfQ2FGZU74uznx7cX6Wxt4eCeVqbuXcRjaeN4k5FffnYbfU4+r712FvgGJMNZ
      bY28++73aS1MskkFf/SDd9lXY8TpiaZdlpx8K/ZpB771RdBZURQJQ04xLS0tdLU2EvOto1hK
      OfjKKxTrVKLrDgyNXdgHHvJN3GZrOo9woquRsM/P4zCdb2WaZU8MSdVy8OQZdtYW4fFuYF8K
      8No7r7IwOJpRmQHWVlzUt+yitbkeTXQDly9CMqXgGO6lvOMwRw8fxvoo6r7tFQDAtzyFQ6qg
      uVgk7HYw7DHRVf1ic0S+CNFig5CL6VknlbVlACiyTCqVQpJlSpoPcqylkKH7t5lYXGdqfBR/
      IMmmc5S1aOaPFX8QOjOkQqQkBVWKMekM0N5U/vk/W4uJ+lYQBR2i1oAopjdC/0Wo+nzytFGu
      X7lK1FDK3tYaBCAWjREKBejrvspaKA58AxQg6l3g4t0Zzp45hhRe49OrDzl15hT6jEgu0lwk
      cNcF5Y/cgZb8Yurq6rAV5WEfvMGqXMyxo3txL87hCuo4eXw/587uYXjYngmBvxZLsxMo5jyQ
      UyiyTDKRIBH2MjblYH5umqlpOzmF+aQSKnpdgnWnHTG3NNNio7eW0NRQjRYJ5SkTt7yqDGtO
      MRYdpOStPW3bG8GBNTv94w4A6urrWXBs/dy06zC1JS/OQPpNJJYXVigpNrPgVckXIxjzcxl5
      MERSVUGXy7Gju7CPDOCOiOze04J/M0FdjQ05FWVh2UtjfXUa5f3DeNoIToQ2eDg8Q03rLizh
      GVZ17bRXmvCvLZCyViL4F5ha3GTXvgPo4h6GJ5x07t+PRff1g3pfxwhORjz0D0xS0dxJrS2f
      eMDNZsJIRYmF6aF+5Nxq2hoqsJhNwrZXgCzp5cu8QFIsjKS3YkxTGthL7QXK6mRm+aLPX2O0
      oEElXbfmcTziRT8L21IBFEUhGAxmWowsGURRFFKpFPF4/IW+z7Y/AqmKhHNumqShiB3VJSw7
      ZgljpbWhMq3Va3IqzszkONEUoNFRWVaM1lRIcZ6e9ZVVCmyVJAKrzDvXqahvpiTXwLJjBk9Y
      paW9FbMW3C4HLm+MhuYWTHKQtbBATVkhG+418otK0Wm2l08iFfMzOe2koqGZ4tzPEyGCHhey
      2YYYWcOxGqSlvQ0x7mPGsUZTWxsm7de/L183F0hKRFj3xaiwFeCYGoeccurKc5ken8Riq6Pa
      lo/4TRiTmgh78cc1TN66zFLQjzcksTxwnTlfet2KgqiltLyS3r5eKsvLCC6PMDrvBVL03eom
      6Fvho0t9FBXn0335Cu7FUe5OblCSI3H5eh9rswP0TLkpzjdw6eNPcNnH+X//4ScEUyoD/b3E
      EtvPTbq+uIjBrOXq1TtPahZUJcZHP/oHZtbCuFxeLPI6l+5O0HPrJqn4OtfuTWdWaLaOT7O9
      V/jw1jBrY92MewQCGy68Kwuk9FZ6b14hGN/yAm17BTDm2qi36VkJSuRZCthRW8CiO0aOIb0b
      l6jRUlRShtlsxlZagkH37Ee3PNFP+a6jVFfX8YM//g55eUUk3PNMLsd45eguJqfn6Nqzh+ra
      HdQXizjdAdpbK7ne/ZDtVwu2RVVzB4p3CVlvQkQFVOaHBymqqQVRR3vnDpZmHVjzDQQjIk2d
      nUTXnJkWm1RkHYdfS7EZ5qfXEBUPEcVAQWUzJRo/gYQG3e8qiNlO5NkaeH13AYPzfiwFlbx9
      ooEHE6sZlUmnM5CSEqAoKKqAxWohGtmKTq8u2AnIOr7zx/+Jtiorv/zwAgadllgyBapCMilh
      0GnJr+qgWFpkbjWU0bV8KYJI66FX0YUXiSZkpIiXgZllUtEQ6+tu0Jg5+e3vsjz+AAEZVZFQ
      1cyblQ+6u9Fa9KyvbZBU4tS0HiLoHGYjlKS8aS8t+QpLvjCwTY3gp4l6F7nU/ZBoOMyR+igf
      /+om0UiY/W8cz6hcxVXNbH56g/MbFoTieuo7dzLxy4/5zDNGOKnn1N4KLl6/R75VS1lVLbt2
      FnP59mUcJj1J0caBEhVPUMP+w4e4+Xe/yOhavozZ/huMr4bAUk7Kv0zEWMrJV44x03uRhEHD
      7cuf4o9GKW/YQ2lijosfXKRi9xuZFpuOI6fxrC6yuB6jY18LN+5cJiWbSa2N8/51F4mklk7r
      lk2z/Y1gVUVRFEBAFAVURUEFRFHMSAsXRVEQBAFB2PpZUVREjQZR2JJNVhREUYMggKooKCpo
      NCICoKhb12s0GkBFVQVEgUe/k5n1/DZUVUGWt9YTc8+yoaunrki3dQ8EAVT10XpEQEWWt35+
      Huv4ukbwYxeqIAgoigyCiCgIKLIMoogoioiCkA2EZdmevNQVYbIsEwpt03NxlrSgKArJZPLR
      7v/i2JYKIIriC9X8LF+OJElIUuYzOmVZRlGUP6gx1u/DtvQCCYKwdUYTReR4gFtXL3Lxeg+S
      ICAicfPyVaIqT65Jzx+BlbkRLl64wI17AyTDXm49mEQQRZbHB1nwRdhcmeXyxYtcuXGHzUCQ
      vsERBFHl+ke/wi8JzAz04YnLiGKSnju9SOrWa6cim3Rfvcyly9dYWA8w2tNDBJH5gesMLfiI
      bi4xPLWUlnU+/dn7lqa5dOkSQ7MrCE9dM/vwBg5vnLmRXi5dvMiSL47bOcnF8xdY8ideiCy/
      z5+U1877H53n/sAkMgLuhXHG7W4Exccn733IjXsPeRx22ZYK8DSC1sDuwydhbRZPQmV9YYr7
      D8dJKek2XVL09w2x6+gZdhRr8Gz6WHC5AQisr+CL+rl8bYBjZ17ncGseV24N4V9eJhJ0seYL
      YV/aZN61ikWrASSWnMtsLUHm1rVr1O0+xpkTu+m7dRMSbhbcEVbXvSzOLeBZXiClS39JuiGv
      jFeOdDE3MfmkM1wy4OJ+z0M2IzKltW0caS9hYHSOoaEp9h1qpv/OSNrl/HU2lueo3X2KY/t3
      ooms0X27h2VvmNTGMkJ1F2eOH8D0KI6z7RVAqzcjxNxsJmVSoQCzrghN1cUZkETHsVcO0Xvp
      fe6Or2AyaNhYnOTC+fP0jTkgtkHKWE6OQUteZSNJv5uSQh0TAzO0vXIS/3w/oqXyyQf/OXF8
      YQFbgRW9pRiDGMVWV8fS6DCpghYM0hrr3ih1VelfszUvjxXHPKpGg6qoqKrE2MQCba21IIjk
      5+qZnHFhNCiIohlLXglaNZx2OX8djyeAfbib9z+9Qcpk49SRTjTApsfD+sIoP3v/EwLxrWPe
      tleAVDyMbLJxuKWAkdEx7IvLLDgdzC640yqHKsWxr0Q49+4POVAuMGx3U1LTxpvnznGwox5M
      pehiK4QSEv7lOfSFNZSXlDLo8NBcaSOxuUFBtW2rrvYZjBRaFVZ9IZLhDeKyGautiaBrhMLC
      EhqsWuxKLkWm9N+qoG+T6p0H0CW9JFMKUngTh2uZmblF5ufn8foT7D3+Cr5lB6oaJeLfQBLS
      X6n36zTsPcP33n4NY8pLLKk8aeqbV7ubP/3+29SaFTyRBLBNjeCnUaUEQ/d7iWuKOXvqOCat
      QP+d27Q12NIqh6AxUF6g5eaVi+jMBRza1YBG5wUgz1aJZM7nW68d4N71KwgGK2+cOYxV8tHQ
      mMRsMLOjtZXc8sfVUlqKczVcvXSevNI6jp09S9/9+8woIodOnsJiMtHQ0EhlRQl5xU343QYy
      0Tc6HljjXt8yNe0HSHkmWdM28f13/4SVqT7ihY24ncM8cAc5dPwMlvgSAw9mOHD8TAYkfZZE
      yM29B/2UNO4mx6QlnFNMmWhFTUW4d+8B+oJaqvO3Wjhm4wBZnuHLCmISfjcxUwn5hvQE617q
      gpgs2w9DfimGTAvxAtiWCpDtDJc5tktnuMcFMS9alm1/BFJVFVmSUAURrUZElrYq/bU6HWJa
      c2dUJElCUdStlu1aDbKioNFoUB/llwiPrkHQoNWIKLKE/Mhdq9FqUR9dj6qispWjIooCKiLi
      o9wiUaNhu2QEqapCKiWh0erQPGW9K/JWbg2qjCSr6HRaUFUkWUar1WY8F+ix3Fv3SQuqggJo
      RPFJbtmj/K3tfwRKBFe5erOfDU+I7/7pO3z2Hz+npKaevYdPU2JNp2mY4Ff//I8Yq1uJb67S
      tX8v98fd/JfvnWb8xnmSrUfROPpwBgXUWIDGA6eYv/Y+alkLOQYNrW2N/Mc//oTv/W//Oybv
      GI5oGTPD13nrRBe3ZmKc3V3CzSEPb79xJCMG7xfhHLnH0IIH2VjGd18/jEYAVIkLP/obik/+
      T7DQw7rXQ27rKfI2h5lb8WLrfI1XOsp/52u/SEJzd/m3ex72d7Swf1cjPRfeJ1RygHNHdhBa
      neTfPhrhf/5f/xPwDXCDGvMqOH3yAKKcIhGLkhL12MrrKExTm+6nMeQU8crps+xpKGZtM0zA
      vUT/gwdML6yB5GHIIfHOW2/w7W+fYuDOfQSNhtzcPAoKC8jPtVBsK+DOtTs8nWhQUt9Jmezi
      JxcecPL0oW3z8APU7TrKnsZSkonEk//ndowTlA0g6jh06jRV+UbiiQjL7jivf+d1VscnMijx
      Fqsrq5RVVlFZVYEmEUI2mBHUrZ1hbHgSg8X45NptrwAAelMe7bUm5tYitLZ0gnuYO1MbaZcj
      Htzg2uXzOJMFHNhhw5RTQG1tLbaiXJATCFoTAiDoTCDF0eiMVNbUUlNdhUED+twq9ldL9Ex8
      Pt1GRUSrE4kEY0+qlLYPAsWVDRBzE0/KKMkwk8sRWutKts7mgpbatl14F6cADYKoBSHzeUSG
      glp2NpTQc/MyYW0BbbVbLnPv3CD6ml1YtZ93vtj2ChDzuRieXCASlzDpteiNelKSikH39ScR
      /r4Yc0s48/o5zp48jFknoDdZKSktJT/HDIYKyoxuxmadDN3upqJj3xP7JZVMkXjU5rtx32ni
      zhFiAKhsOIbZ0Nbz52/u5MK1h6Q9w+O34JgYZHkziCDqkZNRInEJjRRkZMrO/Nw0wwND+MMh
      dIYCci0yM8MjWMrrMi02iDq0gowg6hCfsl2S6PA4xnA4HGwEt7pNbH8jWE7htM+S1BWwo6aU
      5YVZQrKZ1qbqNBvBMusrbgpt5eg0QCqGyxuloqyIsMeNYs3HKkrMzcwh5JTQVGNjbWGOdX8E
      EKmoqUVOJCkrLyXiXSWhzyce8mLWiejzSrHoBFZcq9iqqtguG0Ey6mdmbonSmkb0/klWDDtp
      LzcS3lxFMpUghNdwrgVpbGlFmwowt7BGQ0trxrtCSLEAkzNOSqobsBVaSYZ9BFN6SgosIKdY
      cW9iK7ehzRbEZPmqyMkEitbAb6QyvSBe6oIYVVVJpVKZFiPLMwggJXmx81o+R5ZlJEl64RNi
      tq0CJJ7yPGRJH4qibIsJMY8rwl4021IBRFEkJycHAFVOMj74gIS5kr1t1djHB9mQczm4a0da
      bQApEaG/9x6hBKA10FRficFaRkWxEee8A1ttE7ENO0OTizR27qW6yMzM6ENcfoUDhw+SoxdY
      mh1ldiXErv0HsUpeFvwCrXVlLC0uYKuoQa/NvE/i6VygZNhD38Ak9R17qSz8PCdnc2UeOacG
      Mehk3OFl36GDiFE3g2ML7Dp4EOtz6g4tCAJm8+8/d1iObNDdO4qloIJ9Xa3I0U28MQ3lhXr6
      ex6QW91Gc83WrODMf+K/g0Q0gLG4gbWH3UwvjNM3G6E4bufhYnprhjV6M/uOnGRpeZGTx44g
      +OeYXvQDEiMP+ghs2Pm4e4YDB/cwfPcWa45BBlwChzoruHmrH+foPUbdAof2tnD9o1+ytDDN
      v/zrT9mISkyMDRNPZv5b99fxrntpbq3jbvfdJ53hlGSQT9/7GQveCP4ItJXD5btj3L91jzKb
      lmvdY5kVGvA6RhFtHeztbEKMe3nv33/EkH2DsGeV0qZ2pnq7v0Gd4XJKKDHFcIUlLHojctTH
      ZsDPwmJ6p6sLgoBOp0cUNeh0vxnuX5kZo3rXfqzWPN757tsUllSjDcxytWeGPbtbmHcu09HW
      jCW3hIYyEy5PiK7dLdzu7mX7PfpblDfswOecQdWbEdStznCzY+NUNtSDoKOxsYKpsXly8g0k
      JT0l1fUoofTWaXwRqytrLM8Ocn9wGkVr4eTJw2iBHFs9hsgygZQO7aOI47ZXAHjUGW5vMbOB
      As69dhCTXofVms7hGL+JwWAimYqBoiCrInn5uQQDWx2tnZPjrIfinH7r+5zY38qF85ew6HWE
      YglQFaLxJCaDHmtZM1U6DxOLvoyu5UsRRJr3vYI+tkIsKZMKbdA/McfGupvFxWXQmDn65lus
      Tw+ikkKREshK5k/VTYfe4HvnThFaniAkaTE8Ca8LlNV30Vyg4vJHgG1qAzxN1OvkwvUHxJMy
      r74J927cZTMi8/Yfp7cg5jFG41YYvbi6nejIFT5ZH8VU3UZtZwtzH37Ex5+MIekKObPbyOVL
      n2I2aqhv6aSrrZAr16/iGNSizWmg1SbhD+nYc+Qo9yd/te2aYgHMPexmfCWIrrAeyb/IhqGS
      d999l/kHl4lWFHH3ymf4onHq2o9SFJ/j8ifXaTz0ZqbFZm1+nPEVP1grsRg1BDU69FoNm85h
      bgwugcZCZ162ICbLF/BlBTExzwI+XRUVeen5zswWxGTZVpiK60h/X4oXz7ZUgGxBTObY6nea
      +Ybtj4OhLzomkT0CZdmWpCsV4hvhBVJTYX723ofEAmuc/+hD3nv/QzZj6f2WkuJ+Ll+5SUJS
      WZ7sZWhkjPPdA6jA/IO7TLmd/Mv//S9sJlWSG9P8zd//ggSwMtHHhzf70yrr88I1+YAPPvyQ
      WwOzzwzxGLj2PhMrIQbvXOXDX77PhCuIc7yXX/3i50yuZr4vUGxljH/+6a+41TtKSlFZGLlL
      z/gS3oURPvjoEz6+fIeE9A1Jh0ZVsU+OMbO4jNZcyKtvvMWu0hQTrvQGwrSGPMqNER5MTNEz
      skpLlRW3d+uYFg1sEknGiIc3mbVvMDWxiCQFUVSZsQUPuOfxp755G21JfQevndiDy25HfiR+
      1GNnYHSOUFKgbd8xjneWMzljZ2TCySuvHWT4zkBmhQbWl+007z/NkX3taEIr9AxN4g3EyC3f
      wdtvn0MMLeKPbKVZbHsFSIQ9rIQN1JbmIIg6hKSfoWWVjuqc9AoiCHQcPsXEhfdpO/06Jq24
      FRza+g+AgvI6vIujLARSlJm1xL0LbEQFyvPgwYQrvfI+B/QGA+6VVRRRRZEVVDnJ8KSLrvZa
      QMCohwVXAC1RNKIJgzkfnRjLtNiEwjJrs738/IMLJMzlnD7Yjgjo9EaCK9PEtDYKrFtNd7e9
      AoQ8LlZWF3HaHUzZHVy5eocjr58jz5B+0QWdhYKyGmpKTGDKgZCXpCzhCUfJMxjQmfNhdZyo
      tQqtKDA/O4+trARzaQOe+VG+aZuA27VE6Y5OtAk/KVlFigVxb6wyNmVndmaapZVNdu7bQ8C9
      jiBECWy4kPUFmRYb2469vHn2JGY1TEL6/PAW8cxxvd/Ft751Er1mK+7yjTGCHz7sZ0dlHpfv
      jmE2GWjdd4IGW5p3AWCkv5+WffswCLBmn2BwepHiqh3s3WljYnSDAn2AZFETQecEWqOJ+tZO
      zFqFqZERqtt2Y9Vvv4DXl+FfnaN3aI7Kli4qNausattorzThnh8mXtCCvDrG9PImnQdPYI65
      6Bu2s+fEaUqtX79a7+sYwcF1B/cHprA1drJrRxWRjQVcUQuG4AyDDh9GUw5HTxylwKzPFsRk
      +WokAl6S5iJy0lSJ+lIXxGTZfhjyirKd4dJFNhCWORRF2Vad4V50YdQ35AikEgyGsJj0eLx+
      VMCSV0iO6cWOz3kaRZbweT2kFEAQsVrNaLRGTAYNkVAYoyUHORHGF4xgzSvEbNAQ8vuIpVQK
      i4rQiRANBQjFU+QXFKJVk0RSArkWI9FIBKPJ/EwHg0zxdPRVkRJ4N4NY8wowGT7/rkzGwiha
      M0IqQiCSpLCoEEFO4PNHyC8qRPsc1vF1coFUKYHb60erN1GQn4sqJUjKIiajDkVOEk+qmE0G
      TCbTNyMQFve5+Ou/+xHJRJTVFReXfvlT5jbS625TFQn3+go/+vGPcK2u4Rjppmd8HUhy/bNP
      8AW9fPzxRRYW7Jy/eB3f6gyfXLmLc3aEa/fH8C1Pc7m7B6d9mvMXrrMy84D/6+9+RkxWud19
      lXA88/10fh3XzCjTsxNcvNH7ZEIMSpILP/07Rl1BpkZGmB25S/eQk4E71xkauMPt4aWMygwQ
      cDzgct80G14/SirC1Q9+SveIE1WOc+fCL7h0f/rJtdtfAVSJsXE7ublGdKYCOporMFfvZld1
      eofoaXRG2jr3Ulpayt6uTnLNz1qDa5N9WFuOcejQEd589QhaUSDk90JuFYc7axkdHaHj0AkO
      HjpGuSGEcyNEeaFI94OZtK7j96G6bS+leokUn/crXZkbQzXlg6Cj68BelHAIUa/i8UkcfOUI
      m/a5jMoMsLayikaVEQ0mRDlFaXUVogooEkWVVeifCmtvewXwr8yxqZoxixLRRArn1CQ1re1p
      7gn0m2g1OmQ59aTR7dPiyKkkYm4Vf/5nP8CSWOO9z26BCsKjx+jRjGkqWg6hWR9hyRfP0Cp+
      FwJNu48gBpeIJWXkeICxBR+l+UZisRiIRg6dOYtrcpCtlniZP8IB5Fa2c/rEXiZ6bxIih8qi
      LXe5oLNSWVbwTPPhbWkEP43OlEu+IUggEMAfjrPiDVDXmJ/xDsqFZXVs3BhhSFwlZbHRtGsX
      Yx/eYJBG5mZd7O8sZcgRp7HMRH6uzM6dddzuv0u4LI/liIkDOyz4wzqOHN7D7X/8OMOr+WIc
      Yw/wpDQIxjzkmI+QaKDSls/8yCTkbzDQOw0amfySOgrlFQbv9ZFfuzPTYpOMxSqBjnIAACAA
      SURBVPA455F1VnRagd9mRn9DjGDw+Xzk5+cTCQUwWPLQaTKjAo/lEAQI+Tz4wgmKS8swG7TE
      w342NkPkFdvIMWnxe9yE4jKlZWUYtSIhvwd/JElxaRk6JU5U0ZJr0uHd9JNfUPBMC/JM8bQR
      LCejrLl95BaWoHqnWDe0sKPUQCISQNblICQCeINxSm1liHIMtzdAia3sudybr2MEy6kYa+te
      rAUl5FoMyIkoMVlDjtmAnIoRSUCu1YTJZMoGwrI8y5fl4KuKgiqIXzDk78XwUleEKYpCPL5d
      z8X/YyPL8rZpjJVKpV74c7AtFQC2mmNlST+iKKLLQOftX0eWZVRVfdKE4EWxLRVAFMVnFq4q
      Ev0DI+zd08n0YC+uqIGTx/Y/yehLF3IywvDDftxhmV37DiFuzqLadlGeIxJZn+da3yRajUhe
      WSPl+iAaWzu1JTomJhYwqz7GHB705lwOHDpMgUWHa2aIiKWW5soCBgcH2bNnDwDD966y7E8i
      AJ2HX6W68MU+BF9GxLvE3QcT1HceoKmy8HNX6MwgSkk7gmeKUbuHAydOog0t0zc8z97jJyky
      f/3HSpIkZFn+gxRA8i/z2a0hCmy1HDnQQcy7zEbCTEO5ld5bN7HUdNLRUAF8A9ygABuOCT64
      cptYcJ1BR4Ci6AwjrnTnnSv03bgEJa2cOtjG0INBVuZGWAttmVARtx1NxW7OnTvHsb0tLI33
      8MHFW8SlJJOTsywuOmk/eIojHRVcvHwTRZV4ODLJ2EA/sgrDI8NP3ml61sWpc+c4d+5cxh5+
      gEhU5uDBDvru9jwJhElRD+c/+giXP46iL+TgDivX7o1x/24fra0lXLs+lDF5H+NeGKOg9Tiv
      HOpEE93gg/feY2LRi2fqDl5zA47B+4SS35CKMCUZYcYVpr48D63ehBhZY8SVwJaX5m1ajrGy
      KdFUU4p9bp6i0nx+vXZ86uFtzp8/z6h9Ha3Ryo5iHQ+nl5+5xlpQgSbiY3NtEkPVXkq0YVaD
      zzaBlWMerpw/z/nLtwklMhchLq2qYW1uElVvetQZTmFydJLG1kYQtFRXFTE2OkdOrg5ZMZFv
      q0aMezMm72NWXWvMD9/m/I0+ZH0+Z05tdYbzb25SUVOP1QzJ1Jads+0VwG0fZtKxxIpzgaGh
      IQyVe3n7SD2D02musBINWA0KwWiC2h07WBgdJPJrHdxb953g3LlzdDbYAIEd+47gHusjkPxc
      U1LJKCmNjqnRaUKrM6x5/UzMLPC0K05jKua1c+c49/oJcgyZO6VKkkTz/pMYE6tEEzLJwDr9
      49M4HIvMzs2TUnQcfeNtNuaGUYmTSoSQlMztWI9pP/k9fvhHbyB55wmlhCczDQwGPaGQn0RC
      eZJ39Y1xg3722SecffUE1y9dJZwSOPb6O1TkpS8ZDiDsWeROzwiSIqEvqKZKXGVgTaAwx0JL
      mcj1ETeVhWbMxdXkRhwU7/02BaER3n/gZVe+nzmfBqMo07x7P665BU6+ehxN0s/l2+MEV8ew
      FteQU1JLwN6HkmNDCxkr/AGwD91m2LmJpbiOA3UGgoZ6aosNOB5eJmI7RGj6HhuhCBXtJyiI
      zTEw6aTtxNt0VH79NJWvUw+wMHyXIacHQ14Vr53YR2BxmKlAPoebjPzyo6vkVbdz9vgetGJ2
      QkyWr0jMs0TQWIEtTaNpswUxWbYVpuLqbGe4dJEtiMks2+FQ8DgQ9qJHZWWPQFmeIR3tCL8K
      L3UqxNMo8QA/f+8D8oqqOHzyCA+ufIo7Yebdd9/CpEmfE0uKR+i5203P4DjtnXspz1OJWzs4
      0lHItU8usO/smwxe/YQwWgRrBWf2VnH+wi30Ri2lrUfYU6njyrXbKBoNxsI69pQleO+Bj//l
      T17n1s2r7D1ymhzj9rodiyP3eOjYwGpr4syhnVt5QKrK/fM/xrLru8Tn7rG6GaBm32tYfeOM
      zCzRdOQcXTX5GZU7ujTIT24v0N7cTFedmU8u9VLcsJND9To+vTFGYVklp08cBr4BbtB4LIBo
      KWHfof3oYsvEDXXsKYoxu5Hebymt0cLxM+coLinhzddfpdCkPBprpBKNRPBM3SNQvId33vkO
      ndX5hLwrhPXFHD55mkJtksH7t6jdf4Z33n4HvW8a+4qP4NIkvXMbxGNR1O00IfsRNZ1HOL2/
      Fb9740lrxODaDPNLPhKKhoOnzrKnqZSVlVVmHR7Ovn2K2QcjGZUZYM21RGP7PjrbGnGOPKDz
      7DtIq3YmBgdoPfEO+Skvy4FvyIAMRUlh0urpu/oRtp270OtMGI0aAlJmHxhREFFV5UlbuHAo
      SG7xlseioqYGQSNyPD5K760bkFuDOZGi3GwEQcRiMhBKJGg5fIq1oTsktstk7N9AJZ5SUOUo
      KUlBIySZcGyys6USCUCVSahGUhEPRlGPRmtEI2Z+vK0kmBHj61y8NEK1XqDUpEOrg/rdx+jp
      u0bcs0Hu7m/IjDCNaKZj/z7qCg3EFBORiJuljSRFuZkVPTe/mPW1JZKxEGHFQH1bO86RfhLJ
      GJc/Oc/M2H1cUjFvfOs0a0sO6qvKGJ+eIxnzM78SorIoF40uh8O7qhgaX8joWr6M5fkZTCVV
      CKkYigpSIkYo6GF8ysH83Ayz8y4q6qqJhGJoxTibq0tgKcq02JgLq9m7eyd6JU5OvpHlxRWi
      kg6tAPuPHcOYa6LEvOXT2vZGsCIlGO67R8RQztG9zTgnBliX8znY2ZiRssiJiXHa2toBlcXJ
      QSaX/XQdOEJZvgnv0gwPJ53s6DpIfYmFyaE+Fr1J9h89RpFFi3NykGlXkD2HjpAjeVlNWKgv
      szA6MkXLzp0YttmY1Hhgjfv9E9R37CM3Osuqfic7K01sumZJ5dTB5hxjDg/7Dh9FH3fzYGSe
      vUeOkfMcut99HSM4EXJzr3eU6rY9NJZb6L97n5LmPdQW6ei5fZ/Cxl00VxdjNpuzgbAsz/Jl
      XqBUJIhkzMWUnjhY1guUZXuhs+SS+SqB58+2VIBsICyLoigkk8kXPj1z+x+BFInFBTvhuEpd
      czNmjYzHG6KoqCDNXTgU1hYX2AzHEbV66hqaUKMenC4PReXVFOfrsE/Ok1BVjDlFVBUamHOu
      ACBqzTQ216EjhXN+lcqGGrRyjLlFD/UN1SSCHhZdHooqqimxalnzRikrLSDs86Ca8rHqFFbW
      PdjKyon7PUiGXPLNejY31khKEpv+rWEhhWXVlBU+v8Q5KR7CvrBCSVUdBdbPO4NGfG5kUxFi
      zMPyRpj6xgaERBDnsofqxgaMz6FQ6evkAimJEFPzSxgs+dRVl7Jst2O1VaNPBlha3wS01DQ1
      kGPQbf/OcKlogLsPRzGZTYiqxNDtz/jRr26Q/jFuSe7euImsNWMyGUmFVvjs6n00OpGeaxdY
      2lzlytWHmE0mRm9+ijOsYlbDXL83gtFkeFRNFeD9f/xn5jwJPPPD/H8/+hXBgItL13oQtVp6
      r32Gc3WJS9cfAmB/eJtZd4SQe4FfvfchK/44gZVxrvVOo6Jw8ZNP6bt/G29SwGw2o9M+3wP6
      qmOOWDLM5at3Pp9toMT56Md/x+RKCId9idTmPJfvT9N36zoe9xw3ejLfGMtn72dsNYnRoMcz
      fY8B+zrdN+6haHQYdSr3790n+cjM2fYKEI95CLj9zC6uISJQ19pBsTUzOedSPMzM1ASuzRju
      uVFKd+yjqamZ/e02pmZX0OlNFBQUYNJrEPRW6moqyc0vorq6/MlZs6yujsWpKSYWfTSUW1md
      maSgqYsdOxrZt7OSqallPIuTnD9/nr4xOyoqjrl5Tp7cz8jEAqV17cTX7YQ90yTzW8nXpHDM
      TjMxNUf8OcdGqlu70Ec2kLUGRFRAxT42RI6tAkQdnbvb2VhcxpSrwxeCnfv3EnQ5nqsMfwgr
      yy6i/nXW/VFcDhdtBw5ilHxgKsSshKjffZwC09Yd2fYKYDCX8OZ3vkOt6qR3IUJ+bk7GGpAZ
      c0s48/o5jnbtQKfTPUnUSqUkNDoNYd8afbcvYlfKqf+SgdKG3DKS66OsJ0zkGLRodDqk5Nbr
      SCkJrU5DcU0b586d42BHA8gxhkdncbpWmBrsB0sRJcYEd24+oPPwPtBaOHr6LOfeOEtl4XP2
      mAgirQdPow0tEk0oSNFNhuZW0aopvN5N0Jg5+c53WB7rQ0BFVRRQM/9IlbUe5dvfOs7C8B1C
      CQlFVlCUrb5809OLtLbWPalvzry0vwMpFmJspJ+RxdjWaKJtQkXLHmLOh9y8eYO+2RCdOyrI
      L6vjtbffpc20wcjyFxvxgtZIkSaBrrgSrQDlLZ0kloe5eaObvhkfHW1Vz1wfcI5Quv/bvPPW
      d3ljp4mR5ThtDaXcmovRWWEGOcZQ331u3brFlNP9XNc49/AWl653o1pKkYKrbCaN7N/TiU4U
      ENQU965f4nr3HUprOikr1nHj/DVsrW3PVYY/hODGCg967pHUF9HS2Ur/5U9JWsow61TWoyql
      T9U0bHsjWFUVErEYiqDFZNQjoJJISuj1+jTvBCrJRBKt3vCkOZQsJYnFk+gNRnQ6kWRCwmDQ
      o0hJJFWDXiuQSMno9bpH3zgKyYSMRlRRRC2KlEJvMKCkksQSSfQG09bvJGUMBh1SKomiqgga
      PTqNsPW6aNEJCvGUjMloIJWME09s7SA6gxGj/vk5KxVZIhaLozOaSLqnWdc30VisR04lUEU9
      yEniSQmT2YygSsTiSYxmM5rncGO+jhGsyhKRWBy9wYROKxCPxtAYjOg0IslkEoNhy6AXhGxF
      WJZtSrYibJsQjUaRpO3Xu/9/dBRFeeHTYWCbBsK2EwaDAb0+vcX3meRxQ6rtgCiKaDQvNvci
      qwC/g8c34HFBjHPNR0FJGfWVBQjWelprrQz3DdC4ez8rEw+YX/FR2rCTrvoCeu/eI5iA9v1H
      qcrXMNLfx1ogQV3rbqoMAXqcSc4e7mB8dJDGll2Y9GlKtPktPH0i9rtm6R21U7FjFx2N5U88
      J/bhO4iV+1DWxphZ3qTz8En0QScD4w46jpymMv/5jNP7QxUg6XXwyZ0Jyirr2Ndezt3uHoqb
      uqjQBxmcXiQYSPDKm9/aeo/nIulLwOOCmJSU4s3XXsUseVj1RgGFRfs8/sUx+l1w9vUzJDeW
      2FgcZyFeyNnTB1i2O5juv03YUsdrrx5nru86zqUlbl2+wLwnhmtpkZSU/tDe70Iw5HH0cCeT
      I2NPOsMlQ6vc6r7LRjhFrq2ew62F9A7NMDAwRteeenruDP/2F00DG0szVHS+wrH9O3EN38bS
      tJfF0UEslW2cPNKFwWIl3/QNmRS/7Xn0YLiXHVQ0NqPT6jl8/CglNR1Uisv85OefYcovYHVj
      k7rqcrR6C5XFZtyBCF1HDjPY3U1ym7oh8oqKWbPPomh1oKioqszEuJ3mljoQNBQXmpmYWsRs
      EhAEM9ZCG1o5lGmxWV/zYB++xYcXb+Pzy5SWFWE2KEiyyuLUGJWtXU/6ymYV4A/EYskjGNpE
      SSVJKFoqqqtZdTqQZYmB27dxLNmp3PUqf/Fn32Pg3i1K8nNxrXuQpTjrvihFOWYMOeXsqtYw
      MLWa6eV8IZFQiNpdRzAkN4inZFIhDzPORebti8zb5wmGZfafOsPm4jSKGiMW8pLCnGmxaTn6
      Nj9453V08XUUTQrfZpBoQkAjgmMpQGPt50U7WRvg96S6aitQVVjTQZHzFheuLFK/5zC2hgra
      Vru5cPESeWWN7Cwt4u79u8xKKgdOvEp7lZW++/e5ZJewtR2hNjdCImJhR8NhOl1xtBmaePPb
      CK47GJxbpaxpD5J3hg1dA3/8J3/K8vg9YsUNOKcHWPaG2XvkDDkxJ713x9l77GymxSbkdjI4
      6yKvuoNdzflcu34HW/MuTFoVs62M3KfMimwcIMszfFlBTNy3RtRYSqEpPYeGbEFMlm2FsaCM
      zLe9ff5sSwXIFsRkDlVVt1VnuBctS/YIlGVbkq5UCM1f/uVf/uULe4fngBz18a//9iNW1/xY
      83RcPX+Fvp77FDZ0kmdMZ+BIxTX9kIs3e5meGCVpLOHqZ79kZ8cuwstjnB9w0Vqdz3v/9PdE
      82op0Sf527/+G+p2HSQ4c4dxT4rz//EzVj0bDAyOUlxVxge/+ISurq25uv/03/5P1rwhZmcX
      MBeo/NNf/zu+sIebN3po7OrCmAF/3cLQba7c6WNmJUpzfeWjznAyl/79b9nMbWPp4TV6e++z
      qbHhn77D9e7bhAyVVBd//XP74x3gceLa70No/i7//YMekimFPGGDn75/Eacnzo6GSqLuWf7p
      J1fp3N/B//FXf/VX294NGo/70ZmKaGpro6ykij/6wbvsq7Oymu7p6kqCB0PzvPbWt/n2t9+m
      xKJBiQcZHx9jcnaBpKwS9i6TX9vC4vQ0CmA0Qk/PAIqqoqqQU1LHG2++xamuckYmF5/d3nUm
      ampqqGlspMCkxdbQwbk3z9GUn8QTSe9SH1PXdYxjnXXEI5EnAzw8zgk8MRFV0HH41ddoqcgn
      GPLjXI3w5vfeZHF4NDPCPsXqygp1O1rZ0VTL4tgIB97+PtrAMpGkwtjgKKLx89SWba8AgqCh
      prqWlZEbDLuiBFdnGfHl0FX94rwDX4gqoygiGo2IVmugIM8KopbcnFxyrGYEYGawh7VQCsfY
      QzbjMnmVrZQrK0yuPhsc0hp0pBLPjkUSNDpyc3PJtVoQBVidH+UXP/4HHNom6l7cKeB3IGAu
      sEFik2RKRk1FmFwKsbPR9uifRQqrGgis2RHQodHoEYXMJw5qrOXUFBu4dfUy/qiKQa9Fo1HZ
      tI+iqeogV//5Y7/tFQBVQ6GtGKNGQzzk4oNL/Rw/fhDS3UtTNFNjMzA6Oc/C1AA3HkyAzkh1
      TQ1VZaVohSj2YC5//PYZ/vztPfSNLgMiB0+/ysxAPwByKo7P52F83ElNQyVyKoHP5yMUiYGo
      IycnhxyzHklRKW/s5N0f/hCTf4HNWGaS0xYmhwmkQFAf1z6kkGObDI7PMzszydjIBKpGAIxY
      TCkWpiYwlFT9ztd90WgMORQXWBEFAVtlIXPjk8TIQVZl3PNjzM/P4/ZvDVnc9kawKqeYnRwl
      riuiqVTP8NQCADUtXVQWpjfqqMpJZibGiGCho72ZlSUntbW1SLEg674AsmCltqIQ5Ch2pxeN
      XqS2qhKPywHWYjYcM/hjKYor62mqKWJ6cABfXCanuApDYg1PaOvbs6GtjUQwSU1NKSHPMmFN
      IeUF6Y+wJsNeRibsVDS1YQpMsWLoYGeFkaB7iZSlHCG4xJzLT3tnF9rkJuMzy7Tt6sKsy2xB
      TCrqY3h0BltDG1VFRiaHRymobaG80ApykkXXBpU1lWizBTFZvipSIoaiNZGuhNVsQcw24fHE
      8pcejQ5RlUhXbZAsyyiK8sKLkbIK8DuIx+MvVUWYoijboiDmsRs0qwAZ5ulclFhwg9HxGXLK
      GmmtzMGxHqa+2kZgzYWSW0yuJsno8BiavAraG8pYcW9SU1nO/OQ4lS07iawuoiuuJNeg4HSs
      UlVbg0YEVJm58WE2k3o6OtvxuZYorasluDJPylxJoSHBRkCmsqzwha/36VygVHST4bF5qpt3
      Ysv/3AYJrC8iWSvQhJaZWfbTsbsLMeZ9rjbA18kFUqKb9A5PY8otpaO1mumREQprWykvtKJK
      WzZAVW0l8E3wAm0bUty8dIWCmhaC833MLy1z68EEAEtjAzi8QS599BE5lU3o/ZNc6pliqH+I
      RMrLzQsXmHPHefCgD1lVgQQ9d3pJKQAqg90XcKv5VBeofPLZdZYnHrAYlJh82M3dQTsexzhz
      a+nPs99YWcdWXsitm/eedIZTpTCf/PzH2DfCuDdjVFiiXLk3Qc/tO5iNca7fnUy7nL+Od2GY
      kLGSHfUVuMdv40oa6btzn4Sisjbbx6/O3+fxGI+sAnxlNFSWFdB/9zairY3qAgMbi5NcOH+e
      vjEHJFx4pHKaKktoPXQMj32GEouMc3yaulfO4JkbQTWUkKP/9U03xqwrwu6Wesrrd6JPrVNe
      W4ZjaoZ4TjvG+BIb3gB1dRVpX3FFYwvRVQeK3vSkM9zc6Ci22loQdDS31GKfdmDNMxBPaKlq
      aia5mfnahlXXGhvOKUZmllhf8dHQ2oyJCPFYhOmlMOXFn+9mWQX4iqiyRGHDHr771qtIS4P0
      za5TUtPGm+fOcbCjHrQW1FQIBVDiYdBZsZUU0Te2SmdzPeG1WUxl5fzmXD8tOkEmIcuoSgpZ
      0ZBT1Yxvph9rYQmlGhl71EhZXgaakwsizftfQR91EU3IpMIeBqadhPw+VlZWQWPm2JtvsTo1
      gIqMIidR1czXNdftfZXvvPEKXscwkVSKZFJGlgXsD27hk0XWV134w1sdJ7I2wFdFEFie7Kc/
      BlJcw8H2ApxrW+kYgqhB1BVxsNXKhx9+gpKMcOjkOcq0HiIjKxRYcsg3WSmtKHlSWJ4IrHP5
      4nkKbHUcPbaLa599gl6jUNy4lzxrARrilJSWUWz2sLhixZCBepm5h92MrwQQcquR/Et4jOW8
      +ea3+P/bO7Pgts4sv/8udoAASYAAuFPc900LtUtuSdbGtnub7qnJZDqpPOclqUoq73nJW15m
      KpXJVDIz3enpJO7qsd1tybI2SqIkkqIo7gQ3kOACEgQIYt/vvXmgpLY9dlq2JYKO8Xvlwz0f
      eM/9vvOd8z9nYegGcXMeD29+xE4sTmVjD0WJBT754CZVR67svaGfw+uaY8odIKMrprXTykcf
      v4+5soHmYy1Uh7a5Hohh1O1+UHJ5gByf4csEMTGvE7+6iorCvflm5gQxOfYVBlvtPlD7vn5y
      DvBHCIfDL7tAfxeQJAlJyn6LlhdJsDedk8gdgXLsS3KlEPuMF53hZpxrlB+oo8puQDQ20lWf
      z+C9flqOn2HxyT02gnFMpQ0ca7Zx724/KVlBbddJGmwqBh4+JpgUKT7QQn1+hNuOOD+5eJSR
      J49p7uwhT7u//h2b86MMTq9gr23nWEftyyvDiQe/Q91wjvTyMEsbO7ScvIg+MMfw5BJtZ67Q
      YN/jUvXPsTI1xJhzE1NxPWd6WkntrHL32ToXTzVx46NbGCvbONPTCuSuQV+ZF53h1BoNVy+e
      xySE8YcSgMTWxgY7zhHmE1YuX7lCgRxle30Oj1DK5cvfI+7fYmroPpqKTq5euoBvdpDldQ8T
      A31Mb0TwebcQxf23EReU1nHxrcMsOeZ4YV5ix8XAkwmCcZmatiOc7SpldHKe0fF5Tn6vm6f3
      n2XXaKCoqpkrV8/hnZ8glpaYePKI5U0/7qlH6BtPEVmdIpT4lkyK368oBAWyLIEsIyMQ8Hko
      KilDqVTR0NRIfmkTNdotfvUP/0hMFtgJRrAVmVEoNRSZdASicbrOnGP+cR/BxP6sNdLn5bHm
      XEBWKpAlGUlM8XhgnKoqG9FYAqNBwfScG51GRKk0ojda0Cjj2TYbvV7LpnMRXUkNac847qQZ
      jRgnHI1isRaTZ1AiSjkH+EZYy+vxOEcYGR4hbSyh+fAJfON9PB0Z5vcf9+Fdn8eTzKOrvYGN
      9Q06OzsYG7zPs5FBVqJaaosLUOksvH26hckZV7aX84Usjg+yndGiEkTiQR+BSBJ7WSnxSJTg
      jpcnA8Oo8guQ0lBoSjPYdw9TRX22zWb4xq+5M+2nttJKLKOn1KwkFAxhqahj6uF1/Mk8jM/1
      5Lkg+CsSCAQoKChAECAS8BOIprDYbBg0KhLRINuBCPkWG0adiqDfSzQhUWQvRqcSiAT9BGMp
      imx2VFKSuKjCpFexsxMkv7AQpWJ/dYcTUzE83gAmixXJO8OmtpmmYi3JaBBJbYJkCH84gc1e
      jEKM4/WHsBYXo34N6/gmQXDAt0kkkUFQaSmxW1HIIqFognyTAf+WB5XRTEGeLjchJserI8sS
      oNizsVS5W6B9QiKR2Bf34t81RFEkmUwSi8Xe6HNyDvBHUCi+W2GSKIr7QhCTU4TtE16MR8ok
      QkzOrdPR0Ux0axlPWCachINttXgWHIi2ImYfTnP8yll08S2uPVzk8qWTxN0LzAZU9LRWZ3ch
      r8ina4Gi26s8HpmluvUQdeWWl4V87rlRJFsLwvYc08s+Dp04gyqyxvDEEl0nz2A1fPPX6oUD
      fJ3xVJngOh8/HMdsr6Kn4wBDDwewNXTTWGlFSkaYmFmhvTuXB/hKqLQGwqtTONa83L8/hNkI
      47O7tzfe5Xk2w9uMD/QzvxZmaXKSpxMTZJB4Nj7L7PgQ8W/hKSqekOk50srI4PDLCTGZmI9P
      rl9jI5gArYUj9UbuDU0zNDBCc7Od+/fGs2s04HVNY248yakjbbjH+qC0idnhQRIZmZWpAe4N
      zfBiX8k5wKsiqDh29hQP3/tbCtvPYtX/07p3W0UNnmUH89441WYtYsRLWGmh54CJSVcgC0Z/
      M6xlFXics0gaHYIsAxKOqVlqG2pAUFFeZmZ6yonRpEKSdRTYylAkd7JtNptuD0sTD/m47wnb
      2ylKK4oxqDOkon5cOypKzX8YuJ5zgK+AxlSC2WKns7kEtHoUiRiSLBNLp9EplejyrSRdz9hR
      F6NRCqwsOPB715nbjDA3Obrnvby+Kel0mrru0+iSm8RTIqmQlzHHIi7XGovOJVKiimNvX8Xr
      nESWk6QSETLS6xmQ901oPv1D/vTdi4iBZVJykkg4QTIlMPvkIZ7QDstLi3iDuwm7XAzwlRCw
      2Gy7P5rOSkeFmmvXPkKhtdNpteCxRrCpEsQrDxBIu9kOZnjnxz/GrBV5cPsu4ZRMQTaULV+T
      9dkRJlb8FFS0kfE72dEe4J///F/gGr1D1FbF2OM+tsJx2g6foyC+yP1bA7Sd2AeCmOVpxl0+
      tLYGOluL+PjmJ9jqOjhyuImjyTC3+scpLtjdBXJ5gByf4UsnxPjXCGlKsRv3RvKYE8Tk2Ffo
      LBW5CTF7RW5CTPaQZXlfJP5eNMZ607bkjkA59iW5UojnSIkg/+u931JY+oXlaAAAD+FJREFU
      VMmRk10M3b5HIC7R+7OfYtHu5SVWkg9/8UtEcxl5BgPHThxn7P4nBDMCGUUely6088u/fI+q
      1mq2tsJcvnKCZwODTC1v09VxkLMXjqPDz1/9x7/jp//+31IYnOE//V0//+Hf/ZzhO7cIJgVE
      pY63T7dyvc/Jz35wmpn+jxFrTtFojPD3793gp3/+FwSm+1hSN3Cus5Ibv/kHkkoVUVlPoV5N
      desRWqvtr23Fy6MPeLK4hbG4gcunOp9PiJF58MF/x3joZyTn+nH7AlQdvYLJP87o7AoNJ3/A
      oRrza7Ph6xB1DfP3fUu0NzdzsFbP+9cGsNa2021P8WBqA0nQ8oN3LgHfgmvQRDyA0mDjUM9h
      bAVWLr9zlSJFjGBir7dpmQxKmts66T54iIhzkLi5lXfeeZdOu8jw3Bp6azW9V3tps6bYkkvp
      vXCK4op6Llw4/vz8LJFnUuNwrOCYc1NgBPfsU2L5Tbzz7vfpKhEYnlrG7/WwtrbGxuYWKVFi
      zTlPZYmFySUP9upa1mdnyCS9rMWMFKqhpqmVzq5uqktfb+vE6q7TXDjaQsDr5cWvHXQ7WFwL
      kpJUHL9wmYMNdtxuN3NLPi7/8G3mhrIviNlcW6Gu/QidbfUsjw7RdflHZDadGGuO8qc/fgej
      5Ccc39V573sHkCWRPK2ep3c/ZMaTQMqkMObr2fLufYwgZdLs+P2EInHikThGkxEBMJoMxCNx
      fC4H//jerxjZKaTR/sWba56tmoh7gtVQBqtBQyISR5+fh4CAIV9PIpwgk4zh9/sJRxPIcobR
      sWn0BTqeDT7FYC7DKAeZHR6iousYgiwSDOzg9++QzLzuGh6ZlCggi1HSGQk5E2fS6aejufz5
      nyUyyjySkS0UghalWo9Skf0GAhmlCU3Kx/VrNwhEBfR6DWq1jCTLrM8/I2OsxmLcLbHY9w6g
      EHS0HOymslCLf8eDyxOn1KIjkgUVlVpvorW9k/qqYkpq61iemSCZSjAxtUJVlR3rgWbe/eG7
      FEpBIskvDq2Umjx0gSVCuhI0SgF79QHcjmkSqSSTE0tU1JRgtJTS2dlJTbmNdMCFaGmlubGL
      BkOQ1biG+hIDv7m/xLH2ElBoqW9uoaO9lULDV6+b+X+xMudAay1DSMeRJJlMMkEk5GV8endC
      jGPORWlVOfFwApUyjm99GYyv7wj2ddGbyznY1YJaSlBo0bO6vEY0rSWxOcHD2TiXzx9D9Twd
      s++DYCmTZPzJY6K6Uk501uIYHcInFXL6SCuKvSpOByCDc85JeW0jL7TrwU0ng2OL1LQfor5c
      j2Nmi5aWaiJby2xmCqm3qnCs+Gmsr3r+pYmzMO/Hok8SzysmtrlCdUsLkQ0nw+ML1HQcod6u
      Yca5Q0tjJb7VRYLJNAZbLaUFGqI+F17ZSpk2ytjyDj2dTawvjDE+7wagrKGLrvrX10M0Edzk
      4dAktZ09FEQcrGs76ajQ41+fJ2WqRvDPM77opefUaTTxLYZGFzh86jQmTXYFManwFg8ej1LV
      doT60jye9D/E3nQYZcDJpHMTVHmcOH0Cs0GTE8TkeDXS0RAZXT5fUAL1RsjdAuXYV6jz8slC
      e943Ts4B/gi5znDZsyOTyZBIvNl50Lkj0CsippMsLc6TyAAKFcU2MypdIWaTGp9niwJrCanw
      Fq51H/bKGoqMGjZXl/DHZGrr69CrBLY3V9kMxKmqqUMnRvDGBMpsBWxveykoLEL1T3un7zmf
      rgXKJMIsLruxVxzAbPxDIUR0x4Oot6KI+Vjzhqmur0ORDLG85qWqrg6dMssTYhJhHM5VNHmF
      1FTaWXU6MRVXYtbJLDpdGMyllNkLMej1QvZ/8W8JgkKB0ZTP3b675JtMbC+PMDrvA9I8vnuH
      YGCTD64/QqtTcfeTW3hXp+gbXUEvhLh57ylbi6M8nHChU4l8/LuPWHeO81d/8yvCaZnhwUfE
      ktmXIX4ej2uJjJTgzt2BlxNikBL8/tf/g9nNMCsrbuTICncG53jSf4/gzgr3hhazajNAYPkZ
      sz4Jo0GHb+4xEyt++u8PsLm6RAINg/dvEYjt3iLmHOAVUSjVlJRXYTKZqKwoQ/+5eaHr08PY
      209SV9fIT350FaMxn7jPhcsPZ461Mu2YpfPQEerqW6g2S7i2QjTW2rjbP0r2DxxfTHljO6rw
      FqJK+3JCzNLUOPnFZSCoae1oYmtlHX2+mlBEoLmrk6g7+z2ONtxuYjubbGxH2HBt0nToIPpM
      EGN5G221pc/XskvOAb4marWWTCYJkoyEgE6vJZncnTqyveEmpjDy0z/7M2qsSt57/wZqpZJk
      OgPIpDMiaqUSy4EuCuNOnJ5IdhfzZQgKGnvOooysEktKZGI7jC1uoBBTbPt3QGng9NXvsz79
      FAQJWRaR98ErVdJ0nN63T7I6NUAklUESJSRZQJBTDN3vo6L9BIXPdcu5IPhrUlRWz/b1fm4H
      85HNB6jtaGP6t9e4GbTiD0mc7S7l9sgytgINxaXldLRbufX4DmsmHWHJSo9NwXZYSc+Jo/T9
      199kezlfyOKzfha342AoJhPeYEdjoedwFwvDd0iTYaDvJpFUAntVO7bUEn3X+yhuOpNtswl6
      3Sw6FkhpLDS0F3Hr1nVMllLWRq4ztJykW79JJFkM5ILgr0wqlUKtViMIkEmlSGUkNFotKqUC
      MZMmmUqj1uhQKQXSqSQZUUar06EUIJ1Okc5IaHU6BFlElBWolQKpVBq1Ro2wp4m9L+bTQbAs
      ZUgk06g0WlLeebbUtdQUqREzaVCoQEyTykhotVqQRZKpDFqd9rUkKL9JECxLIolkCpVag0qp
      IJVMoFBrEaQ0qbQIggKdVkteniGXCMvxWb5MEbbXfKcVYaIoEons03Px/+fst0nxb/r7vC93
      AFmW98U/IUf2EEWReDyO0Wh8Y89Qq9X7cwcQBAGVatc0ORXj9q2bpMjjxIXzmNUiD+72c+h7
      b5G3x4mjZGSboaERwkmR+o4e9DsOpMoTHChUEFqb5PrgIia9moKSOszpdeSyg7RVGhgedmBi
      mxl3DK1WS8eRk1QU5bEw2k/E1EB3XTEP+h9w5vRuAPn45vtspzUogI7j56m0ZEeN61918Hhs
      kfKmbroayl92hpt/ehdF1XEk9xhzq9t0njyPNrTEkwknnaffptL8euxVKBQv34OvQsq3yG/v
      TVJWUcvR9jLu3XmIrfEg3TWF3L15l7yqNo621+0+47VY+gZJxoNElYVc7X0bs1aBd8XBvcfP
      SO15kx2RwXt3sTYe4eLZHjaXl/CuL+KP7dqR2NnAWH2Y3t5eTh1qwuea5satfqLpNC7XGh6v
      j87j53jraAsP7t5HlFNML2zgnHxGRobFxT8kkFbdQc719tLb25u1lx9Apbdw9lQ306PjLzvD
      pUJu7vX144ukMZc1cLK1iIFnDoaHJzjUU8+je9kXxGy5ZqnsOsfZYx2sPruLqakH19hTlice
      kinrwjv3jHDyWzIgIxnfZn1+kV/94n/i3gkzuxqmvsq694ZkEnhDEuX2QsaGB0mIaT6vP3E8
      fcC1a9eYcHpQavPorC5kYPyzmVG9sQhlIox3ZQJ1RRdWVYRV/2frXcS4j5vXrnHtkweEk9mb
      HpNfZMW9OIekUoMkI8siExMLtLTUgqDEatEzNeNCrxdAyMNkLkYlhrJm7ws8mz4WnvXx3u/v
      sr0jU1xqJU8nsbMTpri0AqNBQTrzLXGAPHMNf/Gv/pyT9UaejjxjYXkNl2uZ+eWtvTVEpcOc
      Bx5/mIMnTxNcWST+uXez+fAZent76agtBgQOdBwl4RzFl/iDpySiftIaPTOTTqSAi3Ayw7Rj
      kU/vZ0q9lYu9vfReOoMpi4PzIsEg1V0n0aW8JNIi6bCPOZeLuYVl5ufnCYTTHD1/Eb9rFlmO
      EQ35SPPmzuyvSuOpd/lnP76CJuEBVRqfL0g0IZCfb8Dn3SQaE1Gpdl/9fRkEf5pkaIv7D58Q
      l3Wcv3geo1pg8F4fbafPYtzjGCAe2uLJkzHCiSRFFY3YMus8XY1hNOTRWmmgf2Idi1GLwVqJ
      TdrC0n6Bwtg818f8NBkDODwpdBo17YcOsu5c5ejxwygyYR4OzRLaciDoijDZDpD2TBFVGFGy
      61S1xaY9XecL3HPPeDq3TlFFEy3WJNvqeuqLdaxN9hOzdpNYHmbFF6K+6wymxDJPJ5dpP3OZ
      Wus3H6n9TfQAmwtjDDtWyS+p42iTmZs3H2FrOEhPQyE3Pr6DqbKNU4eaUSpyE2JyvCIJ/wYx
      fTEW/d58dHKCmBz7Cp2lNNcZ7rvId00QI8vyG08+vQovEmGpVOqNPid3BMrxGXKlEDm+hAT/
      56//BmVpHcmgj55Lf0Jtno///Jcf8i//zb+Ghdv8csBHc4kWT8zAux0mHoWKOV0S5fZkCLu4
      wGrSTJFRS01bM4MffIiltoGwb5OO8z+is+r1NrV6HayMP+Kp04Myv5LvnzuCUgBkkU9+/V+w
      nPw50tIAG75trO0XyPeP41jxUHHwMieas9saJex8zC8euOlua6atFD64PYa5vJ6LB+2897sH
      GO3VvHP5NPAtuAbdT2jzrVy41MuxBjvrviAzw1OcvNDN1PNB182Hdq9BlQkfkiQT9S3xydAK
      3798CoVChb2kjIrKSkqthejNZVy6cpVT3VV4Nvfn9JiqjuMca60kGY+/vKb1rcywk1QiC2qO
      vnWeupJ8ItEQa54Yl354EffUdFZtBvBsbFJV20htTSVrjil6rv4ITWiDxelxGt/6Ifmij0ji
      W5IH2E8kQl5uf3KNhZiJI3X5DE8vENjcYmr0KSkZHE/v87f/7a8pbj6KSikyMzFBMJpGUAAK
      JfkFZixmMxqVgpjfzfUP3+ODR+scbq/M9tK+BAGjpRQSflJpETkdZXY9SkvN8y+8oMBWWUdw
      04kgqFAo1QhC9o9PSlMpB+x6HvXdIRiVUWtUKJQy6bSIVq1DoQT5eSVB7gj0FdDl23jrUi+F
      OvA7Ryg7fJlzh2oYvPV7Vn1Rmg+f5XytxP/+aIRUt5XD33uHYwVbvH9jiDIEtDoder0OScxg
      sJRx9d2fMHr7t8yvbXO0sYTsqwE+i8sxgWwqRECBlE4SlzJIiR3GZ5dQibMYgmoKTAoUCgMG
      nZ9lhwOdrTzbZqNU51Fg0qFQCNjLi1icmiYpGKmsMtE/O4YyrUWv25W05oLgV0bEverGWlaJ
      RgkhnwfJYKbQoCGy4yEYSaI02igx69l0OdGYTCTQU2bJw7WwgFojsLqxDYC1ohqtmKG0ohwp
      GWLDn6Cy3L4vHODTQXAq6md61kVpTSPa0CwbmlZaSnWEfetkDMUIYTfOjSBNrW2oUgEci24a
      2towqLIriEnHA0zNOLEfaKDUrGNuaprCinrshTqcM5Po7DWUW/PR6/W5RFiOz/Jlt0BiMo6o
      1qPZo0PzXt0C/V/G34nsClJGGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Difference' width='192'>
      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
      GQYNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cume_dist()' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
